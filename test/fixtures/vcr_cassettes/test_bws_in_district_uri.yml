---
http_interactions:
- request:
    method: get
    uri: http://ea-rbwd-staging.epimorphics.net/doc/bathing-water?_pageSize=600&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime,latestSampleAssessment.sampleYear.ordinalYear,latestSampleAssessment.escherichiaColiCount.*,latestSampleAssessment.intestinalEnterococciCount.*,latestProfile.*,latestComplianceAssessment.sampleYear.ordinalYear,latestRiskPrediction.*&district=http://statistics.data.gov.uk/id/statistical-geography/E06000052
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.13.1
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Location:
      - http://ea-rbwd-staging.epimorphics.net/doc/bathing-water.json?_pageSize=600&district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A
      Content-Type:
      - application/json
      Date:
      - Tue, 06 Feb 2018 17:52:51 GMT
      Etag:
      - '"a3ffe38308e5a8ce-gzip"'
      Expires:
      - Tue, 06 Feb 2018 17:55:50 GMT
      Server:
      - Server
      Vary:
      - Accept,Accept-Encoding
      X-Response-Id:
      - '256'
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        { "format" : "linked-data-api", "version" : "0.2", "result" : {"_about" : "http://ea-rbwd-staging.epimorphics.net/doc/bathing-water.json?_pageSize=600&district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A", "definition" : "http://ea-rbwd-staging.epimorphics.net/meta/doc/bathing-water.json?district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A", "extendedMetadataVersion" : "http://ea-rbwd-staging.epimorphics.net/doc/bathing-water.json?_pageSize=600&district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A&_metadata=all", "first" : "http://ea-rbwd-staging.epimorphics.net/doc/bathing-water.json?_pageSize=600&_page=0&district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A", "isPartOf" : {"_about" : "http://ea-rbwd-staging.epimorphics.net/doc/bathing-water.json?district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A", "definition" : "http://ea-rbwd-staging.epimorphics.net/meta/doc/bathing-water.json?district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A", "hasPart" : "http://ea-rbwd-staging.epimorphics.net/doc/bathing-water.json?_pageSize=600&district=http%3A%2F%2Fstatistics.data.gov.uk%2Fid%2Fstatistical-geography%2FE06000052&_properties=latestSampleAssessment.sampleDateTime.inXSDDateTime%2ClatestSampleAssessment.sampleYear.ordinalYear%2ClatestSampleAssessment.escherichiaColiCount.%2A%2ClatestSampleAssessment.intestinalEnterococciCount.%2A%2ClatestProfile.%2A%2ClatestComplianceAssessment.sampleYear.ordinalYear%2ClatestRiskPrediction.%2A", "type" : ["http://purl.org/linked-data/api/vocab#ListEndpoint"]}
    , "items" : [{"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26520", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26520:1", "label" : [{"_value" : "Map bounds for Kingsand", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26520", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26520/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26520/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26520", "bathingWaterDescription" : {"_value" : "Kingsand is on the south coast of Cornwall. It is a sand and shingle beach resort, approximately 200 metres wide, close to the village of Kingsand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Kingsand pumping station, that discharges to the sea 75m southwest of the Environment Agency monitoring point. There is a further high level emergency/storm overflow from the Kingsand pumping station, that discharges to the beach 90m west of the Environment Agency monitoring point. \nThere is an emergency/storm overflow from the North Rock pumping station, that discharges to the sea 75m northeast of the Environment Agency monitoring point. The operation of the overflows can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past there were four untreated sewage discharges that affected the water quality at Kingsand and Cawsand beaches. These continuous discharges were removed by South West Water in April 2001, and sewage is now pumped one and a half kilometres north to Millbrook sewage treatment works where it receives secondary treatment. The outfalls at Kingsand and Cawsand have been retained as combined sewer overflows.\nStorm overflow event duration monitoring (EDM) was installed at Kingsand and North Rock pumping stations by May 2011.\nInvestigative monitoring 2010-2015 suggested that degradation of the sewer in the upper catchment may have caused contamination of Kingsand Stream.  South West Water carried out repairs to the sewer and monitoring in 2015 suggested stream water quality had improved.  Monitoring is ongoing to confirm this.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26520/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Kingsand Stream between 2010- 2015, and made recommendations for further improvements to protect and improve the bathing water quality.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26520/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Kingsand", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26520-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Kingsand", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Kingsand stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0321", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26520:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Tamar and Plym rivers can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Kingsand for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 20% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26520_1-webres.jpg", "workingWithPrivateOwnersStatement" : {"_value" : "There are homes in the Kingsand catchment that are not on the main sewerage system and have private sewage treatment arrangements. Poorly maintained systems may result in sewage leaking though the soil to the stream to the bathing water. The Environment Agency investigated a stretch of the stream leading to the bathing water for possible misconnections or sewer network problems. Stream monitoring is ongoing and if any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Kingsand is approximately 91 hectares. A small stream approximately 750m long enters the bay at the bathing water. The steep catchment means rain runs off rapidly into the stream.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26520/date/20160920/time/101500/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T10:15:00", "inXSDDateTime" : {"_value" : "2016-09-20T10:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Kingsand", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/kingsand", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26520", "easting" : 243570.0, "lat" : 50.3336128930897, "long" : -4.19937582310552, "name" : {"_value" : "Sampling point at Kingsand", "_lang" : "en"}
        , "northing" : 50500.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1998", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26520:1", "name" : {"_value" : "Zone of influence at Kingsand", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26530", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26530:1", "label" : [{"_value" : "Map bounds for Cawsand", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26530", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26530/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26530/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26530", "bathingWaterDescription" : {"_value" : "Cawsand is on the south coast of Cornwall. It is a sand and shingle beach resort, approximately 120 metres wide, close to the village of Cawsand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from Cawsand, that discharges into the sea 100m southeast of the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past there were four untreated sewage discharges that affected the water quality at Kingsand and Cawsand beaches. These continuous discharges were removed by South West Water in April 2001, and sewage is now pumped one and a half kilometres north to Millbrook sewage treatment works where it is treated to a secondary standard. The outfalls at Kingsand and Cawsand have been retained as combined sewer overflows.\nStorm overflow event duration monitoring (EDM) was installed at Cawsand South combined sewer overflow by April 2016.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26530/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Cawsand Stream in 2010, and will make recommendations for further improvements to protect and improve the bathing water quality.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26530/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Cawsand", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26530-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Cawsand", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Cawsand stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0322", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26530:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Cawsand Stream enters the sea at this bathing water. The Environment Agency have monitored the stream between 2009 and 2012, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Cawsand for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 32% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26530_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Cawsand is approximately 176 hectares. The Cawsand Stream is approximately 1.75 kilometres (km) long and is channelled underground as it flows through Cawsand and enters the sea at the bathing water. The steep catchment means rain runs off rapidly into the stream.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26530/date/20160920/time/102500/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T10:25:00", "inXSDDateTime" : {"_value" : "2016-09-20T10:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Cawsand", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/cawsand", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26530", "easting" : 243420.0, "lat" : 50.3308770287535, "long" : -4.20135718723489, "name" : {"_value" : "Sampling point at Cawsand", "_lang" : "en"}
        , "northing" : 50200.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1998", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26530:1", "name" : {"_value" : "Zone of influence at Cawsand", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26570", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26570:1", "label" : [{"_value" : "Map bounds for Whitsand Bay (Sharrow)", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26570", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26570/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/11", "name" : {"_value" : "Closed", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26570/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26570", "bathingWaterDescription" : {"_value" : "Sharrow beach is in Whitsand Bay on the south coast of Cornwall. It is a small sand and rock cove approximately 300 metres wide, backed by steep cliffs, and Sharrow Point headland to the east.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "There is no water company scheme associated directly with this bathing water.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26570/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26570/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Whitsand Bay (Sharrow)", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26570-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Whitsand Bay (Sharrow)", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from the surrounding area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0323", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26570:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There are two streams that flow onto this beach.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Whitsand Bay (Sharrow) for the three year (2013-2015) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 24% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26570_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There is one arable farm in the bathing water catchment. During and after periods of heavy rainfall, runoff to the streams from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Sharrow is approximately 95 hectares. There are two unnamed streams that enter the sea at the bathing water. The first is approximately 500 metres long and enters the sea at Sharrow Point. The second is approximately one kilometre long and flows past the village of Freathy before entering the sea approximately 300m southeast of Sharrow Point. The steep catchment means rain runs off rapidly into the streams. Land use is arable, with one farm, and Freathy village at the coast. The beach at Sharrow is within the Rame Head to Whitsand Bay Site of Special Scientific Interest (SSSI).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26570/date/20150817/time/142500/recordDate/20150817", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2015-08-17T14:25:00", "inXSDDateTime" : {"_value" : "2015-08-17T14:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2015", "ordinalYear" : 2015}
      }
      , "name" : {"_value" : "Whitsand Bay (Sharrow)", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/whitsand-bay-sharrow", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26570", "easting" : 239330.0, "lat" : 50.3476, "long" : -4.2596, "name" : {"_value" : "Sampling point at Whitsand Bay (Sharrow)", "_lang" : "en"}
        , "northing" : 52185.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/2012", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26570:1", "name" : {"_value" : "Zone of influence at Whitsand Bay (Sharrow)", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26600:1", "label" : [{"_value" : "Map bounds for Portwrinkle", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26600", "bathingWaterDescription" : {"_value" : "Portwrinkle is on the south coast of Cornwall. It is a remote sand and rock beach, approximately one kilometre wide, backed by cliffs. There are lots of rock pools to explore at low tide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Portwrinkle STW, that discharges into the sea 300m southeast of the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for Portwrinkle, which provides secondary treatment and discharges through an extended outfall, was completed in 1995. Storm overflow event duration monitoring (EDM) was installed at Portwrinkle Tank combined sewer overflow by May 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26600/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Portwrinkle", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26600-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Portwrinkle", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0324", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26600:1", "stwOutfallsStatement" : {"_value" : "The outfall from the Portwrinkle STW discharges to the sea 350 metres (m) southwest of the Environment Agency monitoring point. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Portwrinkle for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 54% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26600_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Portwrinkle is approximately 24 hectares. There are no streams within the beach area. The small urban area of Portwrinkle is set back behind the cliffs that surround the beach.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26600/date/20160920/time/105000/recordDate/20160920", "escherichiaColiCount" : 18, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T10:50:00", "inXSDDateTime" : {"_value" : "2016-09-20T10:50:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Portwrinkle", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/portwrinkle", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26600", "easting" : 235960.0, "lat" : 50.3614649870999, "long" : -4.30766544034371, "name" : {"_value" : "Sampling point at Portwrinkle", "_lang" : "en"}
        , "northing" : 53830.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26600:1", "name" : {"_value" : "Zone of influence at Portwrinkle", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26700:1", "label" : [{"_value" : "Map bounds for Downderry", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26700", "bathingWaterDescription" : {"_value" : "Downderry is on the south coast of Cornwall. It is a remote sand, shingle and pebble beach, approximately 1.1 kilometres wide, backed by cliffs. There are two streams that flow across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Downderry pumping station that discharges into the sea approximately 560m south east of the bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Seaton and Downderry, which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in early 1998. The scheme included the removal of untreated discharges which were retained as combined sewer overflows (CSO), and the construction of a sewage treatment works at Seaton. Storm overflow event duration monitoring (EDM) was installed at Downderry pumping station by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26700/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Downderry Stream in 2010, and will make recommendations for further improvements to protect and improve the bathing water quality.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Downderry", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26700-2017", "localAuthorityStatement" : {"_value" : "The urban area of Downderry immediately behind the beach is served by a combined (surface and sewer) system.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water has a history of large amounts of seaweed.", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Downderry", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Downderry stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0325", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26700:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Downderry Stream enters the sea at this beach. Another stream known as Treliddon Lake also enters the sea at the rocks to the east of the Environment Agency monitoring point. The Environment Agency have monitored the Downderry Stream between 1990 and 2012, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Downderry for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 50% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26700_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "During and after periods of heavy rainfall, runoff to the Downderry Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Downderry is approximately 60 hectares. The stream at Downderry beach starts inland at Lower Deviock and flows for approximately 1.2km through the village of Downderry before entering an underground channel at the beach next to the Environment Agency monitoring point, Downderry beach stretches along the coast in both directions, with two further streams entering the sea at the beach 500 metres (m) and 795m east of the Environment Agency monitoring point. \nThe steep catchment means rain runs off rapidly into the stream. Land use is part arable and improved grassland, with two farms, and Downderry village at the coast.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26700/date/20160920/time/110500/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T11:05:00", "inXSDDateTime" : {"_value" : "2016-09-20T11:05:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Downderry", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/downderry", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26700", "easting" : 231470.0, "lat" : 50.3610043414486, "long" : -4.37077575632986, "name" : {"_value" : "Sampling point at Downderry", "_lang" : "en"}
        , "northing" : 53920.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26700:1", "name" : {"_value" : "Zone of influence at Downderry", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26800:1", "label" : [{"_value" : "Map bounds for Seaton (Cornwall)", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26800", "bathingWaterDescription" : {"_value" : "Seaton is at the mouth of the River Seaton on the south coast of Cornwall. It is a remote sandy beach, approximately 550 metres wide, surrounded by cliffs and hills. The River Seaton flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Seaton pumping station that discharges into the sea approximately 260m southwest of the bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Seaton and Downderry, which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in early 1998. The scheme included the removal of untreated discharges which were retained as combined sewer overflows (CSO), and the construction of a sewage treatment works at Seaton. \nStorm overflow event duration monitoring (EDM) was installed at Seaton pumping station by December 2011, and at Church Square CSO, Scawns Hill CSO, and the Factory pumping station by April 2015. UV disinfection was installed at Menheniot sewage treatment works (STW) by April 2015, together with work to reduce the frequency of storm discharges from the Menheniot CSO.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26800/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "Since 2010 the Environment Agency has carried out additional catchment monitoring alongside  routine bathing water monitoring. The Environment Agency are using a DNA tracing technique that helps us identify whether sources of faecal pollution are animal or human with surveys carried out in wet and dry weather conditions.This work has shown that water quality can be impacted by both human and animal sources during periods of wet weather.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Seaton (Cornwall)", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26800-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Seaton (Cornwall)", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n14 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Seaton (Cornwall) bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach occasionally has patches of seaweed (macroalgae).", "_lang" : "en"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 14 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the River Seaton, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, occasional discharges from a storm overflow and discharges from private sewage treatment works.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0326", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26800:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The River Seaton enters the sea at this beach. The Environment Agency have monitored the river since 1986 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Seaton STW discharges into the River Seaton approximately 1.7km upstream of the bathing water. This discharge is disinfected and designed to protect bathing water quality.\nThe outfall and storm overflow from Menheniot STW  discharge to the River Seaton approximately 8.5km upstream of the bathing water. The operation of this works and its impact on bathing waters was reviewed, and the treated effluent is now disinfected to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Seaton (Cornwall) for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 65% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26800_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "During and after periods of heavy rainfall, runoff to the Seaton River from agricultural land is greatly increased, and the quality of the bathing water can be reduced. We are working with local farmers to reduce this runoff and referring them to our partners in Catchment Sensitive Farming for advice and possible grant aid for improvements.\nA number of grants have already been awarded in the locality and improvements completed, including fencing livestock out of streams, covering yards and stores to reduce the amount of dirty water produced, concreting yards and tracks.\nThe Cornwall Wildlife Trust also continue to work with farmers in the catchment.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are homes in the village of Hessenford that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency has identified a number of properties which are connected to failing treatment systems, which are contributing to poor water quality in the River Seaton. We are working with private householders and South West Water to try to tackle these polluting discharges and find alternative sewage treatment arrangements.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Seaton is approximately 5,600 hectares. The River Seaton rises on Bodmin Moor and flows through the village of Hessenford, before entering the sea at Seaton. The total length of the main river is approximately 18 kilometres (km) (61km including the major tributaries). The steep narrow valley in the upper catchment means rain runs off rapidly into the river. Below Hessenford, the river widens and a distinct floodplain has developed up to 100m wide. \nThe Seaton valley contains several wetland features such as spring-fed floodplain woodlands which are rare UK habitats. Land use is mainly unimproved acid grassland on the moor with improved grasslands in the upper half of the catchment. This gives way to arable as you move south towards the coast. There are some heavily wooded valleys, and urban areas including Liskeard, Seaton, Hessenford, Widegates, St Cleer and Tremar. The catchment contains two geological Sites of Special Scientific Interest (SSSI\u2019s) - Crows Nest and Clicker Tor Quarry.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/26800/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0096", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26800", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26800", "easting" : 230370.0, "lat" : 50.3643721667834, "long" : -4.38641162405235, "name" : {"_value" : "Sampling point at Seaton (Cornwall)", "_lang" : "en"}
          , "northing" : 54330.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26800/date/20160920/time/112000/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T11:20:00", "inXSDDateTime" : {"_value" : "2016-09-20T11:20:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Seaton (Cornwall)", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/seaton-cornwall", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26800", "easting" : 230370.0, "lat" : 50.3643721667834, "long" : -4.38641162405235, "name" : {"_value" : "Sampling point at Seaton (Cornwall)", "_lang" : "en"}
        , "northing" : 54330.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26800:1", "name" : {"_value" : "Zone of influence at Seaton (Cornwall)", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-26900:1", "label" : [{"_value" : "Map bounds for Millendreath", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-26900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/26900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26900", "bathingWaterDescription" : {"_value" : "Millendreath beach is on the south coast of Cornwall. It is a remote sandy beach, approximately 650 metres wide, backed by cliffs and hills. A stream flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Plaidy pumping station that discharges, 450m from the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The area immediately to the west of the beach drains to Looe Sewage Treatment Works (STW). The sewage treatment scheme for Looe which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in late 1998. The STW outfall discharges into the East Looe River, three and a half kilometres from the bathing water. Storm overflow event duration monitoring (EDM) was installed at Plaidy pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-26900/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "In 2010 the Environment Agency carried out additional stream monitoring alongside  routine bathing water monitoring.  The Environment Agency carried out further surveys in dry weather conditions. The aim was to pinpoint pollution problems in the streams and the local sewerage infrastructure at the holiday park so that the Environment Agency could improve water quality at the bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-26900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Millendreath", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-26900-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. We are working with Cornwall County Council and South West Water to identify and rectify any problems when they arise.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Millendreath", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Millendreath bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Millendreath stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0327", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-26900:1", "streamsRiversStatement" : {"_value" : "The St Martins stream enters the sea at this beach. The Environment Agency have monitored the St Martin stream since 1990, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Millendreath for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 42% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-26900_1-webres.jpg", "workingWithPrivateOwnersStatement" : {"_value" : "There are holiday parks which are not on the main sewerage system and have private sewage treatment arrangements. There is a private sewage treatment works serving a holiday park that discharges. This discharge is designed to protect bathing water quality. \nWrongly connected waste water pipes can also affect the bathing water quality. The Environment Agency have checked the local sewerage system for misconnections. The Environment Agency are working with holiday park owners to identify and rectify any problems.\nThere are also two holiday parks that are not on the main sewerage system and have private sewage treatment arrangements. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Millendreath is approximately 400 hectares. The Millendreath Stream is approximately two and a half kilometres (km) (6.2km long including tributaries). It flows through a wooded valley to the village of Millendreath and through an underground channel at the western side of the beach. The steep catchment means rain runs off rapidly into the stream. \nThe catchment is mostly agricultural, with five or six farms. The rural areas are improved grassland and arable with heavily wooded steep sided valleys. Urban areas include the settlement of Millendreath which includes a holiday village. There are also a number of other holiday parks in the catchment.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/26900/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0097", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-26900", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26900", "easting" : 226810.0, "lat" : 50.3610883752151, "long" : -4.43630361658836, "name" : {"_value" : "Sampling point at Millendreath", "_lang" : "en"}
          , "northing" : 54080.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/26900/date/20160920/time/115000/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T11:50:00", "inXSDDateTime" : {"_value" : "2016-09-20T11:50:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Millendreath", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/millendreath", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/26900", "easting" : 226810.0, "lat" : 50.3610883752151, "long" : -4.43630361658836, "name" : {"_value" : "Sampling point at Millendreath", "_lang" : "en"}
        , "northing" : 54080.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-26900:1", "name" : {"_value" : "Zone of influence at Millendreath", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-27000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3101-27000:1", "label" : [{"_value" : "Map bounds for East Looe", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3101-27000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/3", "name" : {"_value" : "Sufficient", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-27000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-27000", "bathingWaterDescription" : {"_value" : "East Looe is at the mouth of the Looe Estuary on the south coast of Cornwall. It is a sand and rock beach resort, approximately 280 metres wide, close to the town of Looe.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There are emergency and storm overflows that discharge into the estuary at Looe, and the river catchment upstream. The operation of the overflows can lead to a temporary drop in water quality in the Looe Estuary and at East Looe bathing water. \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for East Looe which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in late 1998. Extensive sewer rehabilitation works were also carried out at that time. Improvements to many combined sewer overflows (CSO) in East Looe were completed by the end of March 2000. By March 2006 improvements were completed to the continuous discharge and two intermittent discharges at the Liskeard (Lodge Hill) sewage treatment works (STW).\nStorm overflow event duration monitoring (EDM) was installed at four CSOs in East Looe by December 2011. In 2015, South West Water completed further improvements to urban drainage and sewage management in Liskeard and Looe.  The improvements concentrated on reducing the frequency of storm discharges, and increasing sewage treatment capacity. The work also addressed misconnections and leaks through old sewers along with saline intrusion and sewer flooding on spring tides.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3101-27000/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "Investigative monitoring has shown that the main sources of pollution impacting the bathing water are urban drainage and sewage from Liskeard and Looe, and agricultural run-off from the East Looe River catchment.  This is known because the Environment Agency has carried out extensive monitoring upstream and downstream of potential source sites and used DNA tracing techniques to identify the relative contribution from agriculture and sewage.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3101-27000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for East Looe", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27000-2017", "localAuthorityStatement" : {"_value" : "The urban area of East Looe immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach. The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water can have moderate amounts of seaweed (macro algae) in the water column following storms.  Seaweed washed up onto the beach is regularly moved to the back of the beach by the beach manager.", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. We are working with Cornwall County Council and South West Water to identify and rectify any problems when they arise.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for East Looe", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water is occasionally impacted by phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n13 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for East Looe bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "The bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 13 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the River Looe, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from storm overflows. Other possible sources can also include seagull faeces and a build up of seaweed (macroalgae).", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0328", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27000:1", "stepChangeStatement" : {"_value" : "A step change  improvement in water quality has been indentified in 2015, from 30/04/2015, due to improvements made to Water plc assets. Any monitoring samples collected prior to this date shall not be used for classification.", "_lang" : "en"}
        , "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. East Looe beach is next to the mouth of the Looe Estuary which is formed where the East and West Looe rivers flow into the sea. The Environment Agency have monitored the East Looe River at the beach since 1987, and found that water quality in the estuary is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Liskeard STW discharges into the East Looe River 11km from the bathing water. The outfall from the Looe STW discharges into the East Looe River 2.3km from the bathing water. Both these discharges are Ultraviolet disinfected, and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At East Looe for the two year (2015-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 41% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3101-27000_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "The catchment of the East Looe bathing water is largely agricultural with significant areas of land used for livestock. During and after periods of heavy rainfall, runoff to the Looe River from agricultural land is greatly increased, and the quality of the bathing water can be reduced.\nThe Environment Agency are working with Natural England, Cornwall Wildlife Trust and farmers to encourage better farming practices and improve water quality in the surrounding areas. A programme of farm improvements have been undertaken throughout the catchment to help reduce the impact of farming on water quality at the bathing water.", "_lang" : "en"}
        , "workingWithIndustryStatement" : {"_value" : "There is a fishing port at Looe, but this does not affect water quality at the bathing water.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "Local businesses have been visited and advised on ways to reduce the impact of their drainage on the environment.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding East Looe is approximately 10,700 hectares. The River Looe has two main branches, the East and the West Looe rivers, which drain from the southern slopes of Bodmin Moor to the coast. The eastern branch is approximately 16 kilometres (km) long. It starts near St Cleer and flows south, passing close to the western outskirts of Liskeard. The western branch is approximately 14km long and starts near Dobwalls. \nThere are many tributaries which flow to meet these main branches which increases the length of stream in the catchment significantly. The lower reaches of the two rivers form the Looe Estuary and come together as they flow through the town. From the headwaters to the estuary, both rivers fall steeply and are subject to rapid changes in water levels after periods of rainfall. \nIt is a rural area, ranging from open moorland to rolling hills with steep-sided river valleys running across them In the past there was extensive mining activity in the north of the catchment, which has left a legacy of abandoned mines and workings. \nThere are mostly grassland fields in the upper reaches of the catchment giving way to more arable land in the south of the catchment. The steep river valleys are often heavily wooded. Urban areas include Liskeard, Dobwalls, Duloe and Looe. There are holiday parks and campsites in the catchment concentrated at the coast around Looe.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/27000/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0098", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3101-27000", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27000", "easting" : 225700.0, "lat" : 50.3525841676456, "long" : -4.45147295019057, "name" : {"_value" : "Sampling point at East Looe", "_lang" : "en"}
          , "northing" : 53170.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27000/date/20160920/time/121000/recordDate/20160920", "escherichiaColiCount" : 45, "intestinalEnterococciCount" : 27, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T12:10:00", "inXSDDateTime" : {"_value" : "2016-09-20T12:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "East Looe", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/east-looe", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27000", "easting" : 225700.0, "lat" : 50.3525841676456, "long" : -4.45147295019057, "name" : {"_value" : "Sampling point at East Looe", "_lang" : "en"}
        , "northing" : 53170.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/TransitionalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3101-27000:1", "name" : {"_value" : "Zone of influence at East Looe", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27100", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27100:1", "label" : [{"_value" : "Map bounds for Readymoney", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27100", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27100/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27100/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27100", "bathingWaterDescription" : {"_value" : "Readymoney is at the mouth of the Fowey Estuary on the south coast of Cornwall. It is a remote sandy cove, approximately 70 metres wide, sheltered by tall cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the pumping station at Readymoney Cove, that discharges 100m from Readymoney beach. There are also other emergency/storm overflows that discharge to the River Fowey Estuary in the Fowey/Polruan and Readymoney areas. The operation of the overflows can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for Fowey, which provides secondary treatment, was completed in 1996. The scheme also included some resewerage and improvements to combined sewer overflows. Fowey STW was upgraded with ultraviolet (UV) disinfection in 2002, and storm overflows at Caffa Mill pumping station (PS), Polruan PS, Whitehouse Point, Readymoney Road and Readymoney SPS were improved in 2003. The intermittent discharge at Town Quay was improved in 2004. \nBetween 2011 and 2013 a number of actions were undertaken by South West Water to improve water quality in the River Fowey and Fowey Estuary.  Improvements included sewer re-habilitation in Fowey to stop saline infiltration, surface water separation in Golant, UV disinfection of discharges from Golant STW and Lostwithiel STW, and a large new storm tank for Lostwithiel pumping station. Storm overflow event duration monitoring (EDM) was installed at seven intermittent discharges in Fowey by December 2011, and at Caffa Mill CSO by April 2016.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27100/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "In 2010, the Environment Agency carried out additional catchment monitoring in the Readymoney Stream alongside the Environment Agency routine bathing water monitoring. The Environment Agency used a DNA tracing technique to help identify whether sources of faecal pollution were animal or human with surveys carried out in wet and dry weather conditions. The aim of this work was to pinpoint pollution problems and improve water quality at the bathing water. Investigations suggested that faecal pollution originated both from sewerage and drainage issues in Fowey and from diffuse and point source agricultural runoff from surrounding farms in wet weather.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27100/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Readymoney", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27100-2017", "localAuthorityStatement" : {"_value" : "The urban area of Fowey immediately behind the beach is served by a combined (surface and sewer) system.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. We are working with Cornwall County Council and South West Water to identify and rectify any problems when they arise.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Readymoney", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n7 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Readymoney bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 7 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Fowey Estuary and Readymoney stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0329", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27100:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. Readymoney beach is next to the River Fowey Estuary where water quality is temporarily worse during and after heavy rainfall, particularly at low tide. The Readymoney Stream flows onto this beach, and can also affect water quality after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Fowey STW discharges one and a half kilometres northeast of the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Readymoney for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 52% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27100_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are more than 50 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the River Fowey from agricultural land is greatly increased, and the quality of the bathing water can be reduced. In recent years Environment Agency officers have been working with farmers in the catchment to reduce this impact.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There is a private discharge located near the bathing water. The Environment Agency do not believe this is a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Readymoney is approximately 27,600 hectares. The River Fowey catchment includes the Colliford and Siblyback Reservoirs, which supply water to a large part of Cornwall. The River Fowey rises on Bodmin Moor and flows south for 35 kilometres (km) before reaching the tidal limit at Lostwithiel. The estuary continues for a further nine kilometres before reaching the coast at Fowey. There are several tributaries that enter the Fowey Estuary, the largest of which is the River Lerryn. \nThe area is rural, ranging from open moorland to rolling hills intersected by steep-sided river valleys. In the past there was extensive mining activity, especially in the north of the catchment, which has left a legacy of abandoned mines and workings. \nLand use is mostly agricultural, with more than 50 farms. In the northern moorland part of the catchment it is mostly acid and improved grassland with pockets of arable land further south. Urban areas include Fowey, Lostwithiel, Lerryn and a number of moorland villages. There are a number of Special Areas of Conservation (SAC) and Sites of Special Scientific Interest (SSSI\u2019s) within the catchment mostly on Bodmin Moor and along the coast. The catchment is partly within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/27100/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0099", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27100", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27100", "easting" : 211830.0, "lat" : 50.3295366717995, "long" : -4.6451849978973, "name" : {"_value" : "Sampling point at Readymoney", "_lang" : "en"}
          , "northing" : 51080.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27100/date/20160920/time/131500/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T13:15:00", "inXSDDateTime" : {"_value" : "2016-09-20T13:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Readymoney", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/readymoney", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27100", "easting" : 211830.0, "lat" : 50.3295366717995, "long" : -4.6451849978973, "name" : {"_value" : "Sampling point at Readymoney", "_lang" : "en"}
        , "northing" : 51080.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/TransitionalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27100:1", "name" : {"_value" : "Zone of influence at Readymoney", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27200:1", "label" : [{"_value" : "Map bounds for Polkerris", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27200", "bathingWaterDescription" : {"_value" : "Polkerris is on the south coast of Cornwall. It is a small, remote sandy bay, approximately 170 metres wide, surrounded by cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a storm/emergency overflow from the Polkerris pumping station, that discharges into the sea approximately 250m southwest of the bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. \nThe South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No-2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27200/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have recently investigated a broken outfall pipe from the screened sewage discharge at Polkerris Beach which has now been repaired.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Polkerris", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27200-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Polkerris", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Polkerris bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Par river, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0330", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27200:1", "stwOutfallsStatement" : {"_value" : "The outfall from Polkerris STW, discharges to the sea 250m southwest of the bathing water. The outfall from the Par STW discharges to St Austell Bay approximately 2.9km southwest of the bathing water. These discharges have been designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Polkerris for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 40% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27200_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the River Par catchment, which are used for dairy and beef livestock. During and after periods of heavy rainfall, runoff to the River Par from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithIndustryStatement" : {"_value" : "There is no affect on the bathing water quality from the China Clay industry in the catchment.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Polkerris is approximately 7,200 hectares. There are no streams flowing directly onto the beach. The catchment includes the Par River and tributaries, including Tywardreath Stream, Bokiddick Brook, Carbis Stream and Treverbyn Stream. The Par River rises near the A30 then flows for approximately 14.5km before reaching the sea. The upper half of the catchment follows fairly level ground, then quickly drops after it enters the steep sided Luxulyan. \nMuch of the remainder of the river flows within wide flood plains. In the past the Par River has been affected by the China clay industry. The combined effects of clay mining, cross catchment transfers and the porous nature of the catchment, have reduced runoff from the steep gradient of the Par River resulting in reduced peak flows to the bathing water. \nThe catchment is mostly agricultural, with more than 50 farms. The rural areas are dominated by improved grassland with smaller areas of arable, woodland and a significant area where china clay mining dominates the landscape. Urban areas include Par, Tywardreath, Luxulyan, Roche, and the small fishing village of Polkerris is behind the beach. The catchment is within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/27200/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0100", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27200", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27200", "easting" : 209280.0, "lat" : 50.3378794985352, "long" : -4.68148770272917, "name" : {"_value" : "Sampling point at Polkerris", "_lang" : "en"}
          , "northing" : 52100.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27200/date/20160920/time/133500/recordDate/20160920", "escherichiaColiCount" : 36, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T13:35:00", "inXSDDateTime" : {"_value" : "2016-09-20T13:35:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Polkerris", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/polkerris", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27200", "easting" : 209280.0, "lat" : 50.3378794985352, "long" : -4.68148770272917, "name" : {"_value" : "Sampling point at Polkerris", "_lang" : "en"}
        , "northing" : 52100.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27200:1", "name" : {"_value" : "Zone of influence at Polkerris", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27300", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27300:1", "label" : [{"_value" : "Map bounds for Par", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27300", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27300/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27300/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27300", "bathingWaterDescription" : {"_value" : "Par is on the south coast of Cornwall. It is a large sandy beach resort, approximately one kilometre wide, backed by sand dunes. The Polmear Stream flows across the beach into the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Par No.2 pumping station that discharges to the Par River 230m upstream from the beach. There is an emergency overflow from the Par No.1 pumping station that discharges to the sea at Par Spit one and a half kilometres from the beach. The operation of the overflow can lead to a temporary drop in water quality in the Par River and at Par bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. \nThe South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No-2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.\nStorm overflow event duration monitoring (EDM) was installed at Par No.2 pumping station and St Austell North STW by April 2011. Work to reduce the frequency of storm discharges from Tredenham Close CSO and EDM installation is scheduled for completion by April 2017.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27300/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The Environment Agency used a DNA tracing technique to help identify whether sources of faecal pollution are animal or human. Surveys carried out in wet and dry weather conditions. Results showed the sources of faecal pollution to be mixed. Catchment walkovers have been carried out with to identify potential problems from agriculture. \nThe Par River catchment is thought to affect water quality at the bathing water and all of this additional work aims to pinpoint pollution problems in the river improve water quality at the bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27300/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Par", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27300-2017", "localAuthorityStatement" : {"_value" : "The urban area of Par immediately behind the beach is served by a combined (surface and sewer) system.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.  We are working with Cornwall County Council and South West Water to identify and rectify any problems when they arise.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Par", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n11 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Par bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 11 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Par river and the Par stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0223", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27300:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Par River and Polmear Stream flow into the sea at this beach. The Environment Agency have monitored the Par River since 1987, and the Polmear Stream since 1992, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Par STW discharges to St Austell Bay approximately 2.9km southwest of the bathing water. This discharge has been designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Par for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 77% of visits. Tarry residue was not assessed as being sufficient to be objectionable, but was observed as being present on 2% of visits.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27300_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the River Par catchment, which are used for dairy and beef livestock. During and after periods of heavy rainfall, runoff to the River Par from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithIndustryStatement" : {"_value" : "There are outfalls from the China Clay Processing Works. The water at the beach may look cloudy at times from these discharges and runoff from the harbour. The Environment Agency investigations have shown that these discharges do not affect bathing water quality at Par.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Par is approximately 7,150 hectares. The catchment consists of the Par River and tributaries, including Tywardreath Stream, Bokiddick Brook, Carbis Stream and Treverbyn Stream. The Par River rises near the A30 then flows for approximately 14.5km before reaching the sea. The upper half of the catchment follows fairly level ground, then quickly drops after it enters the steep sided Luxulyan. \nMuch of the remainder of the river flows within wide flood plains. In the past the Par River has been affected by the China clay industry. The combined effects of clay mining, cross catchment transfers and the porous nature of the catchment, have reduced runoff from the steep gradient of the Par River resulting in reduced peak flows to the bathing water. \nA second smaller stream known as the Polmear Stream enters the sea at the eastern end of the beach approximately 220 metres (m) from the Environment Agency monitoring point. The catchment is mostly agricultural, with more than 50 farms. The rural areas are dominated by improved grassland with smaller areas of arable, woodland and a significant area where china clay mining dominates the landscape. Urban areas include Par, Tywardreath, Luxulyan and Roche. The catchment is within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/27300/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0101", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27300", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27300", "easting" : 208510.0, "lat" : 50.3469722189893, "long" : -4.69282422743833, "name" : {"_value" : "Sampling point at Par", "_lang" : "en"}
          , "northing" : 53140.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27300/date/20160920/time/141000/recordDate/20160920", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 27, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-20T14:10:00", "inXSDDateTime" : {"_value" : "2016-09-20T14:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Par", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/par", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27300", "easting" : 208510.0, "lat" : 50.3469722189893, "long" : -4.69282422743833, "name" : {"_value" : "Sampling point at Par", "_lang" : "en"}
        , "northing" : 53140.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27300:1", "name" : {"_value" : "Zone of influence at Par", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27400:1", "label" : [{"_value" : "Map bounds for Shorthorn", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27400", "bathingWaterDescription" : {"_value" : "Shorthorn beach is on the south coast of Cornwall. It is a sandy beach resort, approximately 630 metres wide, backed by sand dunes. A stream flows onto the beach. Shorthorn beach was previously named Crinnis Golf Links beach,", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a storm overflow from the Daniels Lane storage tank that discharges to the Crinnis Stream three kilometres upstream from the beach. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. \nThe South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No.2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.\nStorm overflow event duration monitoring (EDM) was installed at Par and St Austell North STWs, Par No.1  and 2 pumping stations and Daniels Lane storage tank by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27400/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out additional monitoring in the Crinnis Stream alongside the Environment Agency routine bathing water monitoring. Investigations found the main source of pollution to be from the urban drainage system. Investigations showed that Daniels Lane CSO is compliant with its permit, only operating  under extreme conditions. A drainage survey in ST Austell in 2013 discovered misconnections at Holmbush Industrial Estate. These have since been resolved.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Shorthorn", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27400-2017", "localAuthorityStatement" : {"_value" : "The urban area of St Austell immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.  We are working with Cornwall County Council and South West Water to identify and rectify any problems when they arise.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Shorthorn", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n5 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Shorthorn bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 5 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Crinnis stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0224", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Crinnis Stream flows across this beach. The Environment Agency have monitored the stream between 1989 and 2014, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Par STW discharges to the sea approximately 1.3km southeast of this bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Shorthorn for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 2% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 61% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27400_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Shorthorn is approximately 1,400 hectares. The Crinnis Stream enters the sea at the beach and collects water from two main tributaries. One tributary is approximately five kilometres (km) long and starts at St Austell. The other tributary is approximately four and a half kilometres long and rises northwest of St Blazey. The streams are channelled underground in many places, especially where they flow through St Austell and Carlyon Bay. \nLand use is split between agricultural land and urban/mining land. Urban areas include St Austell, Carlyon Bay and part of St Blazey. The Eden Project is in the northeast of the catchment. There are two geological Sites of Special Scientific Interest (SSSI\u2019s) associated with the mining activity.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/27400/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0102", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27400", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27400", "easting" : 206330.0, "lat" : 50.3376351846938, "long" : -4.72293484370012, "name" : {"_value" : "Sampling point at Shorthorn", "_lang" : "en"}
          , "northing" : 52180.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27400/date/20160921/time/100500/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T10:05:00", "inXSDDateTime" : {"_value" : "2016-09-21T10:05:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Shorthorn", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/shorthorn", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27400", "easting" : 206330.0, "lat" : 50.3376351846938, "long" : -4.72293484370012, "name" : {"_value" : "Sampling point at Shorthorn", "_lang" : "en"}
        , "northing" : 52180.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27400:1", "name" : {"_value" : "Zone of influence at Shorthorn", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27500:1", "label" : [{"_value" : "Map bounds for Crinnis", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27500", "bathingWaterDescription" : {"_value" : "Crinnis beach is on the south coast of Cornwall. It is a sandy beach resort, approximately 760 metres wide, backed by sand dunes. Crinnis beach was previously named Crinnis Leisure Centre beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. \nThe South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No.2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.\nStorm overflow event duration monitoring (EDM) was installed at Par and St Austell North STWs, and Par No.1  and 2 pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27500/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Crinnis", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27500-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Crinnis", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "There is a small stream flowing west to east behind the beach but this is not known to affect bathing water compliance.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0225", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27500:1", "stwOutfallsStatement" : {"_value" : "The outfall from Par STW discharges to the sea approximately 1.6km southeast of this bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Crinnis for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 2% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 58% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27500_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Crinnis is approximately 1,400 hectares. There are no streams flowing onto the beach. The immediate catchment is small (13.5 hectares), and surface water flows down the south facing slopes to the sea. There is a small stream flowing west to east behind the beach which takes some of the surface water to the next beach. \nThe water quality at the beach can also be affected by the Crinnis Stream which enters the sea at Crinnis Golf Links beach. The Crinnis Stream collects water from two main tributaries. One tributary is approximately five kilometres (km) long and starts at St Austell. The other tributary is approximately four and a half kilometres long and rises northwest of St Blazey. The streams are channelled underground in many places, especially where they flow through St Austell and Carlyon Bay. \nLand use is split between agricultural land and urban/mining land. Urban areas include St Austell, Carlyon Bay and part of St Blazey. The Eden Project is in the northeast of the catchment. There are two geological Sites of Special Scientific Interest (SSSI\u2019s) associated with the mining activity.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27500/date/20160921/time/101500/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T10:15:00", "inXSDDateTime" : {"_value" : "2016-09-21T10:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Crinnis", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/crinnis", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27500", "easting" : 205550.0, "lat" : 50.3361204799296, "long" : -4.73381042662777, "name" : {"_value" : "Sampling point at Crinnis", "_lang" : "en"}
        , "northing" : 52040.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27500:1", "name" : {"_value" : "Zone of influence at Crinnis", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27600:1", "label" : [{"_value" : "Map bounds for Charlestown", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27600", "bathingWaterDescription" : {"_value" : "Charlestown is on the south coast of Cornwall. It is a pebble and shingle beach resort, approximately 290 metres wide, surrounded by cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Charlestown Overflow pumping station, that discharges to the sea off Polmeor Island 330m from the bathing water. There is an emergency/storm overflow from the Charlestown Harbour pumping station, that discharges to the sea off Polmeor Island 350m from the bathing water. \nThe operation of the overflows can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. The South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No.2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.\nStorm overflow event duration monitoring (EDM) was installed at Charlestown Harbour and Overflow pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27600/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Charlestown", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27600-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can affect the bathing water quality, particularly after periods of rainfall.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Charlestown", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0226", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27600:1", "stwOutfallsStatement" : {"_value" : "The outfall from Par STW discharges to the sea approximately 2.7km southeast of this bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Charlestown for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 36% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27600_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Charlestown is approximately 235 hectares. The stream which enters the sea at Charlestown Harbour is approximately 2.4 kilometres (km) long and starts where the River Crinnis splits in the centre of St Austell via two sluice gates. Much of the length of the stream has been modified by man made structures such as leats and underground channels. The catchment slopes steadily from the northwest to the southeast. Land use is urban and includes part of St Austell as well as Charlestown.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27600/date/20160921/time/102500/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T10:25:00", "inXSDDateTime" : {"_value" : "2016-09-21T10:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Charlestown", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/charlestown", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27600", "easting" : 204000.0, "lat" : 50.3312049763154, "long" : -4.75530986762393, "name" : {"_value" : "Sampling point at Charlestown", "_lang" : "en"}
        , "northing" : 51550.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/shingle-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27600:1", "name" : {"_value" : "Zone of influence at Charlestown", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27700:1", "label" : [{"_value" : "Map bounds for Duporth", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27700", "bathingWaterDescription" : {"_value" : "Duporth is on the south coast of Cornwall. It is a privately owned sandy beach, approximately 450 metres wide, backed by cliffs and accessed by foot only.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There emergency/storm overflows from the Charlestown Overflow pumping station and from the Charlestown Harbour pumping station, that discharges to the sea off Polmeor Island 400m northeast of the Environment Agency monitoring point. \nThe operation of the overflows can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. \nThe South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No.2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.\nStorm overflow event duration monitoring (EDM) was installed at Charlestown Harbour and Overflow pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27700/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Duporth", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27700-2017", "localAuthorityStatement" : {"_value" : "The urban area of Duporth immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Duporth", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton increase in number at certain times of the year and this process is known as a phytoplankton bloom. These blooms can discolour the water or form as a foam on the water. The Environment Agency research shows that phytoplankton blooms can occur at this bathing water under certain conditions, but that such events are rare.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by a small stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0227", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27700:1", "stwOutfallsStatement" : {"_value" : "The outfall from Par STW discharges to the sea approximately 3.1km east of this bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Duporth for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 22% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27700_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Duporth is approximately 31 hectares. There is one small stream 200m long which enters the sea at the southern end of the beach. The catchment slopes steadily from the west to the east. Land use is mostly urban from the village of Duporth and surrounding settlements. In the centre of the catchment there is an area of woodland.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27700/date/20160921/time/104500/recordDate/20160921", "escherichiaColiCount" : 18, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T10:45:00", "inXSDDateTime" : {"_value" : "2016-09-21T10:45:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Duporth", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/duporth", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27700", "easting" : 203520.0, "lat" : 50.3274519056748, "long" : -4.7618374566786, "name" : {"_value" : "Sampling point at Duporth", "_lang" : "en"}
        , "northing" : 51150.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27700:1", "name" : {"_value" : "Zone of influence at Duporth", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27800:1", "label" : [{"_value" : "Map bounds for Porthpean", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27800", "bathingWaterDescription" : {"_value" : "Porthpean is on the south coast of Cornwall. It is a remote sandy beach, approximately 290 metres wide, surrounded by cliffs and hills.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The need for sewage treatment around the northern part of St Austell Bay was identified to protect the bathing waters at Polkerris, Par, Shorthorn, Crinnis, Charlestown, Duporth and Porthpean. \nThe South West Water sewage treatment scheme for Polkerris, which provides fine screening, was completed in 2003.\nA sewage treatment works (STW) for Par at Merthen Farm (north of Crinnis) was built by South West Water in 1992 and commissioned in 1993. The scheme included the collection of sewage from Par, Charlestown, Duporth, Porthpean and part of the St Austell catchment, and transfer via a tunnel sewer to Par STW where it receives secondary treatment before being discharged through a 1.3 kilometre (km) sea outfall south of Fishing Point in St Austell Bay. \nThe scheme also included extensive resewerage and removal of various untreated discharges and a primary treated effluent discharge at Par Spit. The storm tank at Par STW and Harbour Road (No.2) pumping station storm overflow were improved by April 2006. \nThe sewage treatment scheme for St Austell North (Luxulyan), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2006. Improvements to the storm discharge from St Austell North STW were also made at that time.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27800/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthpean", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27800-2017", "localAuthorityStatement" : {"_value" : "The urban area of Porthpean immediately behind the beach is served by a combined (surface and sewer) system. There is a surface water outfall from the slipway.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthpean", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and surface water outfalls.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0228", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27800:1", "stwOutfallsStatement" : {"_value" : "The outfall from Par STW discharges to the sea approximately 3.4km east of this bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthpean for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 30% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27800_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "During and after periods of heavy rainfall, runoff from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthpean is approximately 48 hectares. There is a tiny stream 250m long which flows through Lower Porthpean before entering the sea at the southern end of the beach. The catchment slopes steadily from the west to the east. A large part of the catchment is taken up by a golf course, and the rest is urban and agricultural land with just one or two farms. The small settlements of Higher and Lower Porthpean are in the south of the catchment.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27800/date/20160921/time/110000/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T11:00:00", "inXSDDateTime" : {"_value" : "2016-09-21T11:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthpean", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthpean", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27800", "easting" : 203230.0, "lat" : 50.323582322786, "long" : -4.76568765910925, "name" : {"_value" : "Sampling point at Porthpean", "_lang" : "en"}
        , "northing" : 50730.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27800:1", "name" : {"_value" : "Zone of influence at Porthpean", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-27900:1", "label" : [{"_value" : "Map bounds for Pentewan", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-27900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/27900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-27900", "bathingWaterDescription" : {"_value" : "Pentewan is on the south coast of Cornwall. It is a privately owned sandy beach resort, approximately 1.1 kilometres wide, close to a camp site.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Pentewan pumping station, that discharges to the St Austell River 250m from the beach. \nWithin the Pentewan bathing water catchment there are four emergency/storm overflows that discharge into the St Austell River at least one and a half kilometres upstream of the bathing water. \nThe operation of the overflows can lead to a temporary drop in water quality in the St Austell River and Pentewan bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water scheme for Menagwins (St Austell) sewage treatment works (STW), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in 1996, on a trial basis. The continuous untreated discharge at Mevagissey was transferred to Menagwins STW in 1997, and following completion of the trials, the UV system was permanently installed in early 1998. \nImprovements were made to the sewerage network in Mevagissey in 1999 which have reduced saline infiltration and flooding problems at both Mevagissey and Menagwins. Improvements were made to the storm discharges Menagwins STW in early 2000.\nStorm overflow event duration monitoring (EDM) was installed at Menagwins STW and Pentewan pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-27900/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-27900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Pentewan", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-27900-2017", "localAuthorityStatement" : {"_value" : "The urban area of St Austell (six kilometres upstream from the bathing water) is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Pentewan", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the St Austell River, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0229", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-27900:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The St Austell River flows onto this beach at the north end. The Environment Agency have monitored the river at Pentewan Bridge between 1986 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Menagwins (St Austell) STW discharges to the St Austell River approximately 4.6km upstream of the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Pentewan for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 30% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-27900_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Pentewan is approximately 3,960 hectares and includes the St Austell River which rises near Carthew. The river flows through areas of flood plain for much of its course south of St Austell and enters the sea at Pentewan Beach. \nIn the past the St Austell River has been affected by the China clay industry. The combined effects of clay mining, cross catchment transfers and the porous nature of the catchment, have reduced runoff from the steep gradient of the St Austell River resulting in reduced peak flows to the bathing water. Two much smaller streams also flow across the beach just south of the Environment Agency monitoring point. \nThe catchment is mostly agricultural, with around 20 farms. The rural areas are mostly improved grassland with pockets of arable land and woodland especially in the steeper valleys. The upper third of the catchment is characterised by the china clay mining landscape including the pits and associated spoil heaps. Urban areas include part of St Austell and Pentewan and there are camping and holiday parks close to the coast.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/27900/date/20160921/time/112000/recordDate/20160921", "escherichiaColiCount" : 36, "intestinalEnterococciCount" : 18, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T11:20:00", "inXSDDateTime" : {"_value" : "2016-09-21T11:20:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Pentewan", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/pentewan", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/27900", "easting" : 201880.0, "lat" : 50.2875583923612, "long" : -4.78255130253817, "name" : {"_value" : "Sampling point at Pentewan", "_lang" : "en"}
        , "northing" : 46770.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-27900:1", "name" : {"_value" : "Zone of influence at Pentewan", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-28000:1", "label" : [{"_value" : "Map bounds for Polstreath", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-28000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28000", "bathingWaterDescription" : {"_value" : "Polstreath is on the south coast of Cornwall. It is a remote sandy beach, approximately 330 metres wide, backed by cliffs and accessed by a coastal path.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a storm/emergency overflow from the Mevagissey pumping station, that discharges to the sea approximately 420m south of the bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water scheme for Menagwins (St Austell) sewage treatment works (STW), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in 1996, on a trial basis. The continuous untreated discharge at Mevagissey was transferred to Menagwins STW in 1997, and following completion of the trials, the UV system was permanently installed in early 1998. \nImprovements were made to the sewerage network in Mevagissey in 1999 which have reduced saline infiltration and flooding problems at both Mevagissey and Menagwins. Improvements were made to the storm discharges Menagwins STW in early 2000.\nStorm overflow event duration monitoring (EDM) was installed at Mevagissey pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28000/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-28000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Polstreath", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28000-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Polstreath", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Mevagissey stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0230", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28000:1", "stwOutfallsStatement" : {"_value" : "Sewage from the Polstreath area is pumped to Menagwins (St Austell) STW for treatment via the Mevagissey pumping. The outfall from Menagwins (St Austell) STW discharges to the St Austell River. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Polstreath for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was assessed as being sufficient to be objectionable for 1% of visits, with 40% of visits noting the presence of litter. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-28000_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are around 10 farms in the bathing water catchment. During and after periods of heavy rainfall, runoff from agricultural areas to the Mevagissey Stream is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Polstreath is approximately 560 hectares. There is a tiny stream 360m long which flows onto the beach, and the Mevagissey Stream enters the sea at Mevagissey Harbour 500m south of the bathing water. The catchment of the Mevagissey Stream includes several tributaries totalling eight and a half kilometres (km) which merge to the main stream at various points along the valley. The steep catchment means rain runs off rapidly into the stream.\nLand use is agricultural, with around 20 farms which are mostly beef, sheep, and some arable. The popular tourist attraction of \u2018The Lost Gardens of Heligan\u2019 is in this catchment, which is also partly within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28000/date/20160921/time/114000/recordDate/20160921", "escherichiaColiCount" : 18, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T11:40:00", "inXSDDateTime" : {"_value" : "2016-09-21T11:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Polstreath", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/polstreath", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28000", "easting" : 201710.0, "lat" : 50.2743864942043, "long" : -4.78416897141297, "name" : {"_value" : "Sampling point at Polstreath", "_lang" : "en"}
        , "northing" : 45310.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-28000:1", "name" : {"_value" : "Zone of influence at Polstreath", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28100", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-28100:1", "label" : [{"_value" : "Map bounds for Portmellon", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-28100", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28100/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28100/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28100", "bathingWaterDescription" : {"_value" : "Portmellon is on the south coast of Cornwall. It is a remote sandy beach, approximately 150 metres wide, backed by hills. Rock pools are accessible at low tide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Portmellon pumping station, that discharges into the Portmellon Stream 70m upstream of the bathing water. The operation of the overflow can lead to a temporary drop in water quality in the Portmellon Stream and Portmellon bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "There is no water company scheme associated directly with this bathing water. The Gorran Churchtown sewage treatment works (STW) is two and a half kilometres inland and discharges sewage treated by filter beds to the Portmellon Stream. South West Water improved Gorran Churchtown STW in 1999. The Portmellon pumping station pumps local sewage via Mevagissey to Menagwins (St Austell) STW for treatment.\nStorm overflow event duration monitoring (EDM) was installed at Gorran Churchtown STW and Portmellon pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28100/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The aim of this work was to pinpoint pollution problems in the catchment and improve water quality at the bathing water.This monitoring included DNA tracing techniques to identify whether faecal pollution was from human or ruminant sources.  Surveys were carried out in wet and dry weather conditions. Source of pollution were found to be mainly of ruminant origin in extreme wet weather and from cattle watering in streams in dry weather.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-28100/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Portmellon", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28100-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water has a history of large amounts of seaweed.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Portmellon", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Portmellon bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Portmellon stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0231", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28100:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Portmellon Stream flows onto this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The Gorran Churchtown STW outfall discharges to the Portmellon Stream two and a half kilometres upstream of the bathing water. This STW can affect the water quality of Portmellon Stream.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Portmellon for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 18% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-28100_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 20 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the Portmellon Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Portmellon is approximately 715 hectares. The Portmellon Stream including tributaries is approximately 10 kilometres (km) long and flows through a steeply sloping woodland valley. The stream collects water from various tributaries which come together approximately one kilometre from the bathing water. \nLand use is agricultural, with around 20 farms. It is mainly improved grassland with smaller amounts of arable land and woodland. The urban areas are Portmellon and Gorran Churchtown. The catchment is partly within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/28100/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0103", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28100", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28100", "easting" : 201560.0, "lat" : 50.2618500765446, "long" : -4.78554234471881, "name" : {"_value" : "Sampling point at Portmellon", "_lang" : "en"}
          , "northing" : 43920.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28100/date/20160921/time/120000/recordDate/20160921", "escherichiaColiCount" : 27, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T12:00:00", "inXSDDateTime" : {"_value" : "2016-09-21T12:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Portmellon", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/portmellon", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28100", "easting" : 201560.0, "lat" : 50.2618500765446, "long" : -4.78554234471881, "name" : {"_value" : "Sampling point at Portmellon", "_lang" : "en"}
        , "northing" : 43920.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-28100:1", "name" : {"_value" : "Zone of influence at Portmellon", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-28200:1", "label" : [{"_value" : "Map bounds for Gorran Haven Little Perhaver", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-28200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28200", "bathingWaterDescription" : {"_value" : "Gorran Haven Little Perhaver is on the south coast of Cornwall. It is a sand and shingle beach resort, approximately 290 metres wide, backed partly by cliffs.", "_lang" : "en"}
        , "controllerName" : "St Goran", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Gorran Haven pumping station. The overflow discharges to the sea 230m southeast of the Environment Agency monitoring point, through the same outfall as the STW. The operation of the overflow may lead to a temporary drop in water quality at the bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past the main water company influence on the bathing water was the Gorran Haven continuous untreated outfall 230m southeast of the bathing water. The South West Water sewage treatment scheme for Gorran Haven, which provides secondary treatment, was completed in early 1996. The STW was upgraded with ultraviolet (UV) disinfection in 1997, and the discharge outfall extended by approximately 10m. Sewer rehabilitation work was carried out in 2000.\nStorm overflow event duration monitoring (EDM) was installed at Gorran Churchtown STW and pumping station by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28200/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Trelispen Park Stream in 2010, and found it can affect the bathing water quality. The mains source of pollution was found in the culverted section of the stream, near to the beach. A DNA tracing technique was used and identified that the source of faecal pollution was human in origin.\nIn 2011 additional monitoring was carried out higher in the catchment. This showed that the upper catchment only contributes to pollution at bathing water during wet weather.\nIn 2012 the Environment Agency completed a catchment walkover in lower part of catchment to investigate outfall pipes and the culverted section of the Trelispen Stream. DNA tracing was used again and found the predominant source  of pollution to be animal in origin. The previous human source and issue were not seen again in 2012. No issues were found and the stream was cleaner than in previous years. \nIn 2013 catchment monitoring indicated faecal contamination from both human and animal sources in the catchment.  Further targeted catchment monitoring, including drainage surveys, is ongoing to identify the sources of this contamination.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-28200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Gorran Haven Little Perhaver", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28200-2017", "localAuthorityStatement" : {"_value" : "The urban area of Gorran Haven immediately behind the beach is served by a combined (surface and sewer) system. The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. We are working with Cornwall Council and South West Water to identify and rectify any problems when they arise.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Gorran Haven Little Perhaver", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Gorran Haven Little Perhaver bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Trelispen Park stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0232", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28200:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Trelispen Park Stream flows onto this beach. The Environment Agency have monitored the stream since 1992 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The Gorran Haven STW outfall discharges to the sea 230m southeast of the Environment Agency monitoring point. This discharge is disinfected during the bathing season (May to September) and is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Gorran Haven Little Perhaver for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 19% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-28200_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are five farms in the catchment which are beef and arable. During and after periods of heavy rainfall, runoff from agricultural land is greatly increased, and the quality of the bathing water can be reduced. Environment Agency officers are working with farmers in the catchment to reduce pollution from this source.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Gorran Haven Little Perhaver is approximately 165 hectares. The Trelispen Park Stream is approximately one kilometre long. It rises west of the village of Gorran Haven and is largely channelled underground as it flows through the village to the beach. The steep catchment means rain runs off rapidly into the stream. \nThe catchment is mostly taken up by the village of Goran Haven. The surrounding rural land is a combination of improved grassland and arable land with five farms. The Cuckoo Rock to Turbot Point Site of Special Scientific Interest (SSSI) is at the coast and the catchment is within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/28200/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0104", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28200", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28200", "easting" : 201330.0, "lat" : 50.240842939759, "long" : -4.78754286817743, "name" : {"_value" : "Sampling point at Gorran Haven Little Perhaver", "_lang" : "en"}
          , "northing" : 41590.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28200/date/20160921/time/122000/recordDate/20160921", "escherichiaColiCount" : 18, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T12:20:00", "inXSDDateTime" : {"_value" : "2016-09-21T12:20:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Gorran Haven Little Perhaver", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/gorran-haven-little-perhaver", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28200", "easting" : 201330.0, "lat" : 50.240842939759, "long" : -4.78754286817743, "name" : {"_value" : "Sampling point at Gorran Haven Little Perhaver", "_lang" : "en"}
        , "northing" : 41590.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-28200:1", "name" : {"_value" : "Zone of influence at Gorran Haven Little Perhaver", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28300", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-28300:1", "label" : [{"_value" : "Map bounds for Gorran Haven (Vault)", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-28300", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28300/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28300/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28300", "bathingWaterDescription" : {"_value" : "Gorran Haven (Vault) is on the south coast of Cornwall. It is a remote sand and shingle beach, approximately 730 metres wide, backed by high cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28300/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-28300/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Gorran Haven (Vault)", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28300-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water has a history of large amounts of seaweed.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Gorran Haven (Vault)", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0243", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28300:1", "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Gorran Haven (Vault) for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 31% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-28300_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Gorran Haven (Vault) is approximately 38 hectares. There are no streams which discharge directly to the bathing water. The steep catchment means rain runs off rapidly into the beach. Land use in this small catchment is a combination of improved grassland with a patch of coastal woodland, and one beef farm. The catchment is within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28300/date/20160921/time/125000/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T12:50:00", "inXSDDateTime" : {"_value" : "2016-09-21T12:50:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Gorran Haven (Vault)", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/gorran-haven-vault", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28300", "easting" : 201300.0, "lat" : 50.2349042272139, "long" : -4.78761701530411, "name" : {"_value" : "Sampling point at Gorran Haven (Vault)", "_lang" : "en"}
        , "northing" : 40930.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : false, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-28300:1", "name" : {"_value" : "Zone of influence at Gorran Haven (Vault)", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-28400:1", "label" : [{"_value" : "Map bounds for Porthluney", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-28400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28400", "bathingWaterDescription" : {"_value" : "Porthluney is on the south coast of Cornwall. It is a remote, sheltered sandy beach, approximately 380 metres wide. Several small streams collect behind the beach and flow across the sand to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-28400/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The Environment Agency have used DNA tracing technique to help us identify whether sources of faecal pollution are animal or human with surveys carried out in wet and dry weather conditions. Results have suggested the predominant source is ruminant in both dry and wet weather conditions. There is little or no sewerage infrastructure in the area and investigations have focussed almost entirely on identifying affects from agriculture. The aim is to resolve sources of faecal pollution in the Caerhays Stream, which is known to affect water quality at the bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-28400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthluney", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28400-2017", "localAuthorityStatement" : {"_value" : "The Environment Agency are investigating the extent of surface water runoff with the aim of working with the local authority to improve highway drainage.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthluney", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton increase in number at certain times of the year and this process is known as a phytoplankton bloom. These blooms can discolour the water or form as a foam on the water. A phytoplankton bloom was recorded at this bathing water in August 2009.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n15 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Porthluney bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 15 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Caerhays stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0244", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Caerhays Stream flows into the sea at this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "St Ewes STW discharges to the Caerhays stream 5km from the beach but has not been shown to have an impact on water quality at the beach.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthluney for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 61% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-28400_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are around 20 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the Caerhays Stream and tributaries from agricultural land is greatly increased, and the quality of the bathing water can be reduced. \nThe Environment Agency are working with Natural England and farmers on Catchment Sensitive Farming programmes to encourage better farming practices and improve water quality in the surrounding areas. The Porthluney catchment was a national pilot catchment for cattle in streams fencing work, and there was extensive work to fence cattle from streams in a significant proportion of the lower half of the catchment.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks, local toilet facilities, and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.\nIn 2015, the Environment Agency in partnership with local landowners completed phase one of a rural SUDs project, to restore wetlands on the Rescassa & Trevascus streams. Phase two of this project, a constructed summer wetland on the Trevascus Stream, was completed in 2016. These wetlands impound and treat rainfall during storm events, and this should significantly improve water quality on the River Luney and therefore reduce impact on the bathing water at Porthluney Beach.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthluney is approximately 2,900 hectares. This includes the Caerhays Stream and tributaries (St Ewe Stream and Hewas Water). The Caerhays Stream is approximately 13 kilometres long and enters the sea at Porthluney Beach. The upper catchment has been affected by historical mineral/metal mining activities. The steep catchment means rain runs off rapidly into the streams. \nLand use is agricultural, with around 20 farms which are mostly dairy, beef, and sheep. A significant amount of land is used for growing bulbs and maize. There are patches of woodland throughout the catchment mostly in the steeper valleys. Urban areas include the villages of Sticker, Hewas Water, Polmassick and St Ewe and there are at least four caravan and camping sites. The Cuckoo Rock to Turbot Point Site of Special Scientific Interest (SSSI) is at the coast and the catchment is within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/28400/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0105", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-28400", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28400", "easting" : 197340.0, "lat" : 50.2367931235688, "long" : -4.84326651369793, "name" : {"_value" : "Sampling point at Porthluney", "_lang" : "en"}
          , "northing" : 41290.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28400/date/20160921/time/134000/recordDate/20160921", "escherichiaColiCount" : 91, "intestinalEnterococciCount" : 127, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T13:40:00", "inXSDDateTime" : {"_value" : "2016-09-21T13:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthluney", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthluney", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28400", "easting" : 197340.0, "lat" : 50.2367931235688, "long" : -4.84326651369793, "name" : {"_value" : "Sampling point at Porthluney", "_lang" : "en"}
        , "northing" : 41290.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-28400:1", "name" : {"_value" : "Zone of influence at Porthluney", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-28500:1", "label" : [{"_value" : "Map bounds for Pendower", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-28500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28500", "bathingWaterDescription" : {"_value" : "Pendower is on the south coast of Cornwall. It is a remote sandy beach, approximately 850 metres wide, backed by low cliffs. There are three streams that flow onto the beach. There are rock pools on the beach at low tide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28500/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-28500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Pendower", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28500-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Pendower", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Carne stream and two other small streams, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0245", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28500:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Carne Stream flows onto this beach along with two other small streams. The Environment Agency have monitored the stream between 1992 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Pendower for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 44% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-28500_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are around 10 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the Carne Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced. \nThe Environment Agency are working with Natural England and farmers on Catchment Sensitive Farming programmes to encourage better farming practices and improve water quality in the surrounding areas.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Pendower is approximately 715 hectares. The Carne River and tributaries are approximately 9.8 kilometres long and flow through the river valley which joins Pendower beach at its west end. The steep slopes close to the beach mean rain runs off rapidly into the river. To the east the adjoining Carne beach has a small unnamed stream flowing onto it. \nLand use is mostly improved grassland and arable, with approximately 10 farms. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB). The beach and cliffs are part of the Fal and Helford Special Area of Conservation (SAC) and Gerrans Bay to Camels Cove Site of Special Scientific Interest (SSSI).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28500/date/20160921/time/141000/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T14:10:00", "inXSDDateTime" : {"_value" : "2016-09-21T14:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Pendower", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/pendower", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28500", "easting" : 189750.0, "lat" : 50.2056700645544, "long" : -4.94779756978228, "name" : {"_value" : "Sampling point at Pendower", "_lang" : "en"}
        , "northing" : 38120.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-28500:1", "name" : {"_value" : "Zone of influence at Pendower", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28550", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-28550:1", "label" : [{"_value" : "Map bounds for Porthcurnick", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-28550", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28550/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28550/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28550", "bathingWaterDescription" : {"_value" : "Porthcurnick is on the south coast of Cornwall. It is a remote sandy beach, approximately 210 metres wide, backed by cliffs and accessed by a footpath. A stream flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency overflow from the Portscatho STW pumping station that discharges into the sea approximately 660m south of the bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Portscatho which provides secondary treatment, was completed by South West Water in late 2005. Improvements to the Portscatho pumping station were also carried out at that time.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28550/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-28550/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthcurnick", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28550-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthcurnick", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Porthcurnick bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by a small stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0246", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28550:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There is a small stream which flows onto this beach. The Environment Agency have found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Portscatho sewage treatment works (STW) discharges to the sea 780m south of the beach at Pencabe Point. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthcurnick for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 30% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-28550_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are three farms in the catchment. During and after periods of heavy rainfall, runoff from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. These do not affect bathing water quality. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthcurnick is approximately 80 hectares. The stream discharging to the beach is approximately one and a half kilometres long and flows south from Trewithian. The upper catchment is fairly flat above the A3078 and gently slopes to the sea. Land use is mostly improved grassland and arable, with three farms. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/28550/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0106", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28550", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28550", "easting" : 187900.0, "lat" : 50.1861488307772, "long" : -4.97251413001177, "name" : {"_value" : "Sampling point at Porthcurnick", "_lang" : "en"}
          , "northing" : 36020.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28550/date/20160921/time/143000/recordDate/20160921", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-21T14:30:00", "inXSDDateTime" : {"_value" : "2016-09-21T14:30:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthcurnick", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthcurnick", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28550", "easting" : 187900.0, "lat" : 50.1861488307772, "long" : -4.97251413001177, "name" : {"_value" : "Sampling point at Porthcurnick", "_lang" : "en"}
        , "northing" : 36020.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1998", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-28550:1", "name" : {"_value" : "Zone of influence at Porthcurnick", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-28600:1", "label" : [{"_value" : "Map bounds for Gyllyngvase", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-28600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28600", "bathingWaterDescription" : {"_value" : "Gyllyngvase is on the south coast of Cornwall. It is a sandy beach resort, approximately 350 metres wide, backed by the Queen Mary Gardens.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the pumping station at Queen Mary Gardens that discharges to the sea approximately 400m southwest of the bathing water. The operation of the overflow can lead to a temporary drop in the bathing water quality, although such events appear to be rare.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Falmouth was partially completed by South West Water in 1998. The scheme included the replacement of the untreated sewage discharges at Middle Point and Pennance Point with a 690m long outfall off Black Rock in Carrick Roads. Screened effluent was discharged through this outfall on the ebb tide only, using a storm sewage tunnel for tidal storage. \nThe final scheme for Falmouth, which provides secondary treatment, sand filtration and ultraviolet (UV) disinfection for sewage from Falmouth and Flushing, was completed in 2000. The scheme also included the removal of the Severn Stars combined sewer overflow (CSO) at Flushing, and improvements to the CSOs at Mylor Bridge, and Market Street and Bake House Yard in the Penryn River in 2001. \nFurther upper the catchment, improvements were made in 2002 to the continuous discharges at Ladock, Mylor, St Mawes and 13 CSOs in Truro. A further three CSOs in Truro were improved in 2003, together with CSOs at Malpas, Ladock and Truro STWs, and the pumping station at Devoran.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28600/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-28600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Gyllyngvase", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28600-2017", "localAuthorityStatement" : {"_value" : "The urban area of Falmouth immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Gyllyngvase", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0247", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28600:1", "stwOutfallsStatement" : {"_value" : "The outfall from Falmouth STW discharges to the Carrick Roads two and a half kilometres east of the bathing water. This discharge is disinfected and designed to protect water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Gyllyngvase for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 20% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-28600_1-webres.jpg", "workingWithIndustryStatement" : {"_value" : "There is no affect on the bathing water quality from industries at Falmouth.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Gyllyngvase is approximately 33 hectares. There are no streams directly to the beach. It is a small urban catchment within Falmouth in the Fal Estuary, which is fed by the Fal, Carnon, Allen and Tresillian rivers. These streams have a slow response to rainfall although the upper reaches of the rivers react rapidly. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB), and next to the Fal and Helford Special Area of Conservation (SAC).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28600/date/20160924/time/100000/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T10:00:00", "inXSDDateTime" : {"_value" : "2016-09-24T10:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Gyllyngvase", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/gyllyngvase", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28600", "easting" : 180940.0, "lat" : 50.1446385955148, "long" : -5.06736772446128, "name" : {"_value" : "Sampling point at Gyllyngvase", "_lang" : "en"}
        , "northing" : 31680.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-28600:1", "name" : {"_value" : "Zone of influence at Gyllyngvase", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-28700:1", "label" : [{"_value" : "Map bounds for Swanpool", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-28700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28700", "bathingWaterDescription" : {"_value" : "Swanpool is on the south coast of Cornwall. It is a pebble and sandy beach resort, approximately 140 metres wide, backed by the Swanpool Nature Reserve.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Queen Mary Gardens pumping station that discharges to the sea approximately 420m east of the bathing water. The operation of the overflow can lead to a temporary drop in the bathing water quality, although such events appear to be rare.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Falmouth was partially completed by South West Water in 1998. The scheme included the replacement of the untreated sewage discharges at Middle Point and Pennance Point with a 690m long outfall off Black Rock in Carrick Roads. Screened effluent was discharged through this outfall on the ebb tide only, using a storm sewage tunnel for tidal storage. \nThe final scheme for Falmouth, which provides secondary treatment, sand filtration and ultraviolet (UV) disinfection for sewage from Falmouth and Flushing, was completed in 2000. The scheme also included the removal of the Severn Stars combined sewer overflow (CSO) at Flushing, and improvements to the CSOs at Mylor Bridge, and Market Street and Bake House Yard in the Penryn River in 2001. \nFurther upper the catchment, improvements were made in 2002 to the continuous discharges at Ladock, Mylor, St Mawes and 13 CSOs in Truro. A further three CSOs in Truro were improved in 2003, together with CSOs at Malpas, Ladock and Truro STWs, and the pumping station at Devoran.\nStorm overflow event duration monitoring (EDM) was installed at Queen Mary Gardens, Swanvale, and Swanpool pumping stations by December 2011, and at Trescobeas Road CSO by April 2016.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28700/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-28700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Swanpool", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28700-2017", "localAuthorityStatement" : {"_value" : "The urban area of Swanpool immediately behind the beach is served by a combined (surface and sewer) system. The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Swanpool", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Swanpool stream, and may reduce during or after periods of heavy rainfall due to run off from urban areas, and occasional discharges from a storm overflow. Bird faeces can also affect the water quality.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0248", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28700:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Swanpool Stream flows onto this beach. The Environment Agency have monitored the stream between 1992 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Falmouth STW discharges to the Carrick Roads 3.3km east of the bathing water. This discharge is disinfected and designed to protect water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Swanpool for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 28% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-28700_1-webres.jpg", "workingWithIndustryStatement" : {"_value" : "The Environment Agency have worked with businesses on the small industrial estate at Swanpool to ensure there is no effect on the bathing water quality from this site.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Swanpool is approximately 340 hectares. The Swanpool Stream (also known as Bickland Water) is a small stream approximately 3.2 kilometres (km) long which collects runoff from the Swanvale urban catchment. The stream feeds the Swan Pool, which is a 500m wide lagoon behind the beach designated as a Site of Special Scientific Interest (SSSI). The pool is cut off from the sea by a shingle bar forming a large freshwater lake, but is still connected to the sea via a tidal underground channel. This maintains brackish water conditions in the pool. \nThe upper catchment is fairly flat around Higher Kergilliack and gently slopes down to Swanpool. Land use is mostly urban.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28700/date/20160924/time/101000/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T10:10:00", "inXSDDateTime" : {"_value" : "2016-09-24T10:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Swanpool", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/swanpool", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28700", "easting" : 180320.0, "lat" : 50.1406373490229, "long" : -5.07579001240729, "name" : {"_value" : "Sampling point at Swanpool", "_lang" : "en"}
        , "northing" : 31260.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-28700:1", "name" : {"_value" : "Zone of influence at Swanpool", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-28800:1", "label" : [{"_value" : "Map bounds for Maenporth", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-28800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28800", "bathingWaterDescription" : {"_value" : "Maenporth is on the south coast of Cornwall. It is a remote, sheltered sandy beach, approximately 200 metres wide, surrounded by low hills.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Maenporth pumping station that discharges to the Maenporth Stream approximately 100m upstream of the bathing water. The operation of the overflow can lead to a temporary drop in water quality in the Maenporth Stream and Maenporth bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Falmouth was partially completed by South West Water in 1998. The scheme included the replacement of the untreated sewage discharges at Middle Point and Pennance Point with a 690m long outfall off Black Rock in Carrick Roads. Screened effluent was discharged through this outfall on the ebb tide only, using a storm sewage tunnel for tidal storage. \nThe final scheme for Falmouth, which provides secondary treatment, sand filtration and ultraviolet (UV) disinfection for sewage from Falmouth and Flushing, was completed in 2000. The scheme also included the removal of the Severn Stars combined sewer overflow (CSO) at Flushing, and improvements to the CSOs at Mylor Bridge, and Market Street and Bake House Yard in the Penryn River in 2001.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-28800/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Maenporth Stream in 2013, to help make recommendations for further improvements to protect and improve the bathing water quality. DNA tracing techniques were used to determine if the faecal pollution in the stream is from human or ruminant sources. Results showed faecal pollution to be predominantly from ruminant sources. Investigations at the Pennance Mill Tidal Tank that discharges storm sewage to the Maenporth Stream approximately 1000m upstream of the bathing water showed no impact at the bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-28800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Maenporth", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28800-2017", "localAuthorityStatement" : {"_value" : "The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Maenporth", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n1 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Maenporth bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 1 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Maenporth stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0249", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28800:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Maenporth Stream flows onto this beach. The Environment Agency have monitored the stream between 1986 and 2011, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Maenporth catchment is pumped to Falmouth for treatment. The outfall from Falmouth STW discharges to the Carrick Roads five kilometres northeast of the bathing water. This discharge is disinfected and designed to protect water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Maenporth for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 30% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-28800_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are around 20 small farms in the catchment, most of which are dairy, beef, and arable. During and after periods of heavy rainfall, runoff to the Maenporth Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.\nStudies in 2013 showed that water quality can also be impacted by cattle watering during periods of dry weather. The Environment Agency and their partners work with farmers to minimise the effects of such events.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Maenporth is approximately 860 hectares. The Maenporth Stream extends approximately five kilometres (km) to the north of the beach and is joined behind the beach to another smaller stream which extends approximately two kilometres to the west. The network of streams is approximately 11km in total. The Maenporth Stream is channelled underground at the beach. The upper catchment is fairly flat and then slopes gently to the coast from the northwest to the southeast. \n\nLand use is agricultural, with around 20 small farms, and a mixture of improved grassland and arable. The catchment includes the settlements of Budock Water and Mawnan Smith and includes at least three caravan sites. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB), and is next to the Fal and Helford Special Area of Conservation (SAC).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/28800/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0107", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-28800", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28800", "easting" : 178980.0, "lat" : 50.1249624436234, "long" : -5.09353481382533, "name" : {"_value" : "Sampling point at Maenporth", "_lang" : "en"}
          , "northing" : 29570.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28800/date/20160924/time/102500/recordDate/20160924", "escherichiaColiCount" : 136, "intestinalEnterococciCount" : 55, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T10:25:00", "inXSDDateTime" : {"_value" : "2016-09-24T10:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Maenporth", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/maenporth", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28800", "easting" : 178980.0, "lat" : 50.1249624436234, "long" : -5.09353481382533, "name" : {"_value" : "Sampling point at Maenporth", "_lang" : "en"}
        , "northing" : 29570.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-28800:1", "name" : {"_value" : "Zone of influence at Maenporth", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-28900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-28900:1", "label" : [{"_value" : "Map bounds for Porthallow", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-28900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/28900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-28900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-28900", "bathingWaterDescription" : {"_value" : "Porthallow is on the south coast of Cornwall. It is a remote pebble and shingle beach, approximately 150 metres wide, surrounded by hills. A stream flows onto the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "The emergency/storm overflow from the Porthallow STW, that discharges to the Porthallow Stream approximately 80m upstream of the bathing water. The operation of the overflow can lead to a temporary drop in water quality in the Porthallow Stream and Porthallow bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Porthallow which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in early 2000. A total of around 60 homes, including all the houses that used to discharge to the Porthallow Stream, are now connected to the STW. Storm overflow event duration monitoring (EDM) was installed at Porthallow pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-28900/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-28900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthallow", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-28900-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthallow", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Porthallow bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Porthallow stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0250", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-28900:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Porthallow Stream flows onto this beach. The Environment Agency have monitored the stream between 1986 and 2014, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Porthallow STW discharges to the Porthallow Stream approximately 400m upstream of the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthallow for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 40% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-28900_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are 10 farms in the catchment, most of which are arable. During and after periods of heavy rainfall, runoff to the Porthallow Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthallow is approximately 650 hectares. The Porthallow Stream (including tributaries) is approximately seven and a half kilometres long and enters the sea at Porthallow beach. The steep areas in the middle of the catchment mean rain runs off rapidly into the stream. Land use is mainly agricultural, with around 10 farms, a mixture of improved grassland, arable and some woodland. \nThe catchment is located in the Cornwall Area of Outstanding Natural Beauty (AONB). It is next to the Fal and Helford Special Area of Conservation (SAC) and Meneage Coastal Section Site of Special Scientific Interest (SSSI).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/28900/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0108", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-28900", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28900", "easting" : 179740.0, "lat" : 50.0685773406125, "long" : -5.07928041433367, "name" : {"_value" : "Sampling point at Porthallow", "_lang" : "en"}
          , "northing" : 23260.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/28900/date/20160924/time/111000/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T11:10:00", "inXSDDateTime" : {"_value" : "2016-09-24T11:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthallow", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthallow", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/28900", "easting" : 179740.0, "lat" : 50.0685773406125, "long" : -5.07928041433367, "name" : {"_value" : "Sampling point at Porthallow", "_lang" : "en"}
        , "northing" : 23260.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/shingle-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-28900:1", "name" : {"_value" : "Zone of influence at Porthallow", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29000:1", "label" : [{"_value" : "Map bounds for Porthoustock", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29000", "bathingWaterDescription" : {"_value" : "Porthoustack is on the south coast of Cornwall. It is a remote pebble beach, approximately 240 metres wide, backed by cliffs. There is a stream flowing across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for St Keverne, which provides secondary treatment, was completed in early 1972. Storm overflow event duration monitoring (EDM) was installed at St Keverne STW by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29000/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthoustock", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29000-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthoustock", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the St Keverne stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0251", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29000:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The St Keverne Stream flows onto this beach. The Environment Agency have monitored the stream between 1986 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from St Keverne STW discharges to the St Keverne Stream 1.8km upstream of the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthoustock for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 60% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29000_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 10 farms in the catchment. During and after periods of heavy rainfall, runoff to the St Keverne Stream from agricultural areas is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There is a private surface water outfall near the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthoustock is approximately 295 hectares. The St Keverne Stream is approximately three kilometres (km) long and flows from the hamlet of Treskewes to the beach. This is a gently sloping coastal catchment which becomes steeper at the beach. The steep slopes in the lower catchment mean rain runs off rapidly into the stream. \nLand use is agricultural, with around 10 farms, a mixture of improved grassland and arable, and some woodland. The catchment includes the village of St Keverne and is located in the Cornwall Area of Outstanding Natural Beauty (AONB). The top of the catchment is in the Lizard Special Area of Conservation (SAC) and East Lizard Heathlands Site of Special Scientific Interest (SSSI).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29000/date/20160924/time/113000/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T11:30:00", "inXSDDateTime" : {"_value" : "2016-09-24T11:30:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthoustock", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthoustock", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29000", "easting" : 180760.0, "lat" : 50.0555729641758, "long" : -5.06419511534881, "name" : {"_value" : "Sampling point at Porthoustock", "_lang" : "en"}
        , "northing" : 21770.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/shingle-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29000:1", "name" : {"_value" : "Zone of influence at Porthoustock", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29100", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29100:1", "label" : [{"_value" : "Map bounds for Coverack", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29100", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29100/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29100/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29100", "bathingWaterDescription" : {"_value" : "Coverack is located on the Lizard Peninsula on south coast of Cornwall. It is a rural shingle beach approximately 790 metres wide, backed by the fishing village of Coverack.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There are emergency/storm overflows from Coverack Harbour pumping station and Coverack Mill pumping station, which discharge to the sea at the beach. The operation of the overflows can lead to a temporary drop in water quality in the sea around Coverack Cove.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Coverack was partially completed by South West Water in March 2000. The scheme included storm storage and pumps at Coverack Mill pumping station (PS), and a outfall and pumps for Coverack Harbour PS. The Coverack sewage treatment works (STW) was upgraded with secondary treatment in March 2003. Storm overflow event duration monitoring (EDM) was installed at Coverack Mill and Coverack Harbour pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29100/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29100/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Coverack", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29100-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Coverack", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by three small streams, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0252", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29100:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There is a small stream which flows onto this beach close to the Environment Agency monitoring point. The Environment Agency have monitored the stream between 1986 and 2014, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Coverack STW, discharges to the sea approximately 750m northeast of the Environment Agency monitoring point. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Coverack for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 19% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29100_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There is one farm in the catchment. During and after periods of heavy rainfall, runoff to the stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Coverack is approximately 400 hectares. Three streams enter the sea at the bathing water, two of which are tiny and located to the north of the Environment Agency monitoring point. The third stream starts at Penhallick at the western end of the catchment. It flows for approximately 1.8 kilometres (km) and enters the sea at the south of the beach.\nThe catchment slopes gently down to the coast where there are some steep cliffs. Land use is mostly agricultural with a farm, natural heath land and grassland, pockets of improved grassland and arable. The natural areas are part of the Lizard Special Area of Conservation (SAC) and East Lizard Heathlands Site of Special Scientific Interest (SSSI). The catchment is located in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29100/date/20160924/time/114500/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T11:45:00", "inXSDDateTime" : {"_value" : "2016-09-24T11:45:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Coverack", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/coverack", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29100", "easting" : 178260.0, "lat" : 50.024381672247, "long" : -5.09711731719632, "name" : {"_value" : "Sampling point at Coverack", "_lang" : "en"}
        , "northing" : 18400.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/shingle-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29100:1", "name" : {"_value" : "Zone of influence at Coverack", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29200:1", "label" : [{"_value" : "Map bounds for Kennack Sands", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29200", "bathingWaterDescription" : {"_value" : "Kennack Sands is on the south coast of Cornwall. It is a rural sandy cove, approximately 250 metres wide, backed by sand dunes. A stream flows onto the beach and spreads out over the sand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29200/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Kennack Sands", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29200-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Kennack Sands", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Kennack and Kuggar streams, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0233", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29200:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There are two streams that flow onto Kennack Sands, We have monitored the streams between 1986 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Kennack Sands for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 29% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29200_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are four farms in the catchment. During and after periods of heavy rainfall, runoff to the streams from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Kennack Sands is approximately 775 hectares. There are two separate streams which flow to the beach with a combined length of approximately seven kilometres. The Kuggar Stream is approximately two and a half kilometres long and enters the sea at the centre of the beach. The Kennack Stream is approximately three and a half kilometres long. It rises in the Goonhilly Downs and flows south to the sea at the north eastern end of the bathing water. This catchment slopes gently from north to south and becomes steeper at the coast. The steep slopes in the lower catchment mean rain runs off rapidly into the stream.\nMost of the catchment is natural heath land which forms part of the Lizard Special Area of Conservation (SAC) and Goonhilly Downs Site of Special Scientific Interest (SSSI). The remainder is made up of pockets of arable, improved grassland and woodland with approximately four farms and five camping and caravan sites. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29200/date/20160924/time/120500/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 18, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T12:05:00", "inXSDDateTime" : {"_value" : "2016-09-24T12:05:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Kennack Sands", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/kennack-sands", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29200", "easting" : 173410.0, "lat" : 50.0051345550698, "long" : -5.16357592477975, "name" : {"_value" : "Sampling point at Kennack Sands", "_lang" : "en"}
        , "northing" : 16460.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29200:1", "name" : {"_value" : "Zone of influence at Kennack Sands", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29400:1", "label" : [{"_value" : "Map bounds for Polurrian Cove", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29400", "bathingWaterDescription" : {"_value" : "Polurrian Cove is on the south coast of Cornwall. It is a rural sandy cove, approximately 330 metres wide, surrounded by rocks and steep cliffs. A stream flows onto the beach and disperses over the sand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency overflow from the Polbream pumping station, that discharges to the sea 270m from the Environment Agency monitoring point.\nThere is an emergency overflow from the pumping station at Polurrian Cove Public Conveniences, that discharges to the Mullion Brook 160m from the Environment Agency monitoring point. The operation of the overflows can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water scheme for The Lizard sewage treatment works (STW), which provides secondary treatment, was completed in September 2005. Sewage from the Mullion catchment is pumped to The Lizard STW for treatment, and discharges to the east of Lizard Point. Storm overflow event duration monitoring (EDM) was installed at the Mullion Transfer pumping station by April 2012.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29400/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Polurrian Cove", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29400-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Polurrian Cove", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Polurrian stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0234", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Pollurian Stream (also known as the Mullion Brook) flows onto this beach. The Environment Agency have monitored the stream between 1990 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Polurrian Cove for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was assessed as being sufficient to be objectionable for 1% of visits, with 70% of visits noting the presence of litter. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29400_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are very few farms in the catchment. During and after periods of heavy rainfall, runoff from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Polurrian Cove is approximately 80 hectares. The Mullion Brook is a small stream approximately 800m long which flows from the village of Mullion to the beach. The catchment slopes gently from north to south and becomes steeper at the coast. The steep slopes in the lower catchment mean rain runs off rapidly into the stream.\nThe catchment is mostly taken up by the village of Mullion village, and there is some arable and grass land closer to the coast. A section of the Lizard Special Area of Conservation (SAC) and Baulk Head to Mullion Site of Special Scientific Interest (SSSI) can be found on the coast and lower reach of the stream. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29400/date/20160924/time/123500/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T12:35:00", "inXSDDateTime" : {"_value" : "2016-09-24T12:35:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Polurrian Cove", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/polurrian-cove", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29400", "easting" : 166860.0, "lat" : 50.0233499057156, "long" : -5.25623485684049, "name" : {"_value" : "Sampling point at Polurrian Cove", "_lang" : "en"}
        , "northing" : 18770.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29400:1", "name" : {"_value" : "Zone of influence at Polurrian Cove", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29500:1", "label" : [{"_value" : "Map bounds for Poldhu Cove", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29500", "bathingWaterDescription" : {"_value" : "Poldhu Cove is on the south coast of Cornwall. It is a small sandy cove, approximately 250 metres wide, backed by sand dunes. A stream flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water scheme for The Lizard sewage treatment works (STW), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in September 2005. Sewage from the Mullion catchment is pumped to The Lizard STW for treatment, and discharges to the east of Lizard Point.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29500/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Poldhu Stream in 2010, and found that diffuse inputs can affect the bathing water quality during wet weather. Investigations have shown that there is a risk of agricultural pollution impacting bathing water quality.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Poldhu Cove", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29500-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Poldhu Cove", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 15, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Poldhu stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0235", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29500:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Poldhu Stream flows across this beach. The Environment Agency have monitored the stream between 1990 and 2014, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Poldhu Cove for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 55% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29500_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are six farms in the catchment, used for dairy and beef livestock. During and after periods of heavy rainfall, runoff to the Poldhu Stream from agricultural areas is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Poldhu Cove is approximately 1,250 hectares. The Poldhu Stream is approximately five and a half kilometres (km) (11.8km long including tributaries) and enters the sea at the bathing water. The top of the catchment is gently sloping to the west with steeper valley sides in the middle and lower reaches of the stream. The steep slopes in the lower catchment mean rain runs off rapidly into the stream.\nLand use is agricultural, with around six farms. There is a patchwork of arable, improved grassland and woodland with a large area of natural heath land at the top of the catchment which forms part of the Lizard Special Area of Conservation (SAC) and Goonhilly Downs Site of Special Scientific Interest (SSSI). The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29500/date/20160924/time/125500/recordDate/20160924", "escherichiaColiCount" : 36, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T12:55:00", "inXSDDateTime" : {"_value" : "2016-09-24T12:55:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Poldhu Cove", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/poldhu-cove", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29500", "easting" : 166550.0, "lat" : 50.0335544983364, "long" : -5.26125534124518, "name" : {"_value" : "Sampling point at Poldhu Cove", "_lang" : "en"}
        , "northing" : 19920.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29500:1", "name" : {"_value" : "Zone of influence at Poldhu Cove", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29501", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29501:1", "label" : [{"_value" : "Map bounds for Church Cove", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29501", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29501/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29501/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29501", "bathingWaterDescription" : {"_value" : "Church Cove is on the south coast of Cornwall. It is a rural sand and pebble beach, approximately 140 metres wide, backed by sand dunes. A stream flows onto the beach and disperses over the sand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water scheme for The Lizard sewage treatment works (STW), which provides secondary treatment and ultraviolet (UV) disinfection, was completed in September 2005. Sewage from the Mullion catchment is pumped to The Lizard STW for treatment, and discharges to the east of Lizard Point.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29501/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29501/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Church Cove", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29501-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Church Cove", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Gunwalloe stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0236", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29501:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Gunwalloe Stream which flows onto this beach can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Church Cove for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 51% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29501_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 15 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the Gunwalloe Stream from agricultural areas is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Church Cove is approximately 1,050 hectares. The Gunwalloe Stream which enters the sea at the beach is approximately five and a half kilometres (km) (13.7km long including tributaries). The catchment has fairly steeply sloping valley sides with the main stream running northeast to southwest. Land use is agricultural, with around 15 farms in a patchwork of arable and improved grassland. \nA section of the Lizard Special Area of Conservation (SAC) and Baulk Head to Mullion Site of Special Scientific Interest (SSSI) can be found on the coast and lower reach of the stream. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29501/date/20160924/time/131500/recordDate/20160924", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-24T13:15:00", "inXSDDateTime" : {"_value" : "2016-09-24T13:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Church Cove", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/church-cove", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29501", "easting" : 166100.0, "lat" : 50.0385857260958, "long" : -5.26788220436883, "name" : {"_value" : "Sampling point at Church Cove", "_lang" : "en"}
        , "northing" : 20500.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/2004", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29501:1", "name" : {"_value" : "Zone of influence at Church Cove", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29800:1", "label" : [{"_value" : "Map bounds for Porthleven West", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29800", "bathingWaterDescription" : {"_value" : "Porthleven West is at the western end of Porthleven Sands on the south coast of Cornwall. It is a shingle beach resort approximately 330 metres wide backed by cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There are emergency/storm overflows from the pumping stations at Breageside, and Harbour Tank. These overflows are, and discharge into the sea near Porthleven Harbour entrance. The operation of the overflows can lead to a temporary drop in bathing water quality at Porthleven West.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for Porthleven, which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 1997. Storm overflow event duration monitoring (EDM) was installed at the Breageside, and Harbour Tank pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29800/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthleven West", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29800-2017", "localAuthorityStatement" : {"_value" : "The urban area of Porthleven immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthleven West", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 10, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Porthleven stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from three storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0237", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29800:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Porthleven Stream flows into the sea through the harbour. The Environment Agency have monitored the stream upstream of the harbour between 1994 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Porthleven STW discharges to the sea near Porthleven Harbour entrance. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthleven West for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 18% of visits. Tarry residue was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29800_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Porthleven West is approximately 1,290 hectares. The Porthleven Stream (also known as the Methleigh Stream) is approximately four kilometres long. It flows from Carnmeal Downs to Porthleven Harbour 250m west of the bathing water. The catchment is fairly steep with a patchwork of arable land, improved grassland and more natural grassland. The area also includes the settlements of Porthleven, Breage and Sithney.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29800/date/20160925/time/100000/recordDate/20160925", "escherichiaColiCount" : 64, "intestinalEnterococciCount" : 18, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T10:00:00", "inXSDDateTime" : {"_value" : "2016-09-25T10:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthleven West", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthleven-west", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29800", "easting" : 162950.0, "lat" : 50.0810654983874, "long" : -5.31481129754882, "name" : {"_value" : "Sampling point at Porthleven West", "_lang" : "en"}
        , "northing" : 25370.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29800:1", "name" : {"_value" : "Zone of influence at Porthleven West", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-29900:1", "label" : [{"_value" : "Map bounds for Praa Sands East", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-29900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/29900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-29900", "bathingWaterDescription" : {"_value" : "Praa Sands is on the south coast of Cornwall. It is a sandy beach resort, approximately 1.3 kilometres wide, backed by sand dunes. There are rock pools at the eastern end of the beach at low tide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-29900/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-29900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Praa Sands East", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-29900-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Praa Sands East", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by a small stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0238", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-29900:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. A small stream flows onto this beach.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Praa Sands East for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 28% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-29900_1-webres.jpg", "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks, homes, and hotels that have private sewage treatment arrangements. There is no mains sewerage in the village. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Praa Sands East is approximately 105 hectares. A small stream approximately 300 metres long and channelled underground, enters the sea at the beach. Most of the freshwater reaching Praa Sands East is from direct runoff along the steeply sloping coast. Land use is agricultural with just one or two farms, and there is a large amount of arable land. The catchment is located in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/29900/date/20160925/time/102500/recordDate/20160925", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T10:25:00", "inXSDDateTime" : {"_value" : "2016-09-25T10:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Praa Sands East", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/praa-sands-east", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/29900", "easting" : 158470.0, "lat" : 50.0992826747151, "long" : -5.37872709464994, "name" : {"_value" : "Sampling point at Praa Sands East", "_lang" : "en"}
        , "northing" : 27600.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-29900:1", "name" : {"_value" : "Zone of influence at Praa Sands East", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-30000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-30000:1", "label" : [{"_value" : "Map bounds for Praa Sands West", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-30000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-30000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-30000", "bathingWaterDescription" : {"_value" : "Praa Sands is on the south coast of Cornwall. It is a sandy beach resort, approximately 1.3 kilometres wide, backed by sand dunes. The western end of the beach is less rocky and the Germoe Stream flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-30000/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-30000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Praa Sands West", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30000-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Praa Sands West", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Germoe stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land and urban areas.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0239", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30000:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Germoe Stream flows onto this beach. The Environment Agency have monitored the stream between 1986 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Praa Sands West for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 27% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-30000_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are five farms in the catchment. During and after periods of heavy rainfall, runoff to the Germoe Stream from agricultural areas is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks, homes, and hotels that have private sewage treatment arrangements. There is no mains sewerage in the village but the discharge from the largest caravan park is now disinfected. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Praa Sands West is approximately 295 hectares. The Germoe Stream is approximately one kilometre and flows south to the beach from the village of Germoe just south of the A394. The steep catchment means rain runs off rapidly into the stream. \nLand use is agricultural with five farms, and there is a large amount of arable land. The catchment includes the settlements of Germoe and Praa Sands, and there are also at least three caravan sites close to the coast. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30000/date/20160925/time/104500/recordDate/20160925", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T10:45:00", "inXSDDateTime" : {"_value" : "2016-09-25T10:45:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Praa Sands West", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/praa-sands-west", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30000", "easting" : 157620.0, "lat" : 50.1032457805843, "long" : -5.39089540088006, "name" : {"_value" : "Sampling point at Praa Sands West", "_lang" : "en"}
        , "northing" : 28080.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-30000:1", "name" : {"_value" : "Zone of influence at Praa Sands West", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30100", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30100:1", "label" : [{"_value" : "Map bounds for Perranuthnoe", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30100", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30100/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30100/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30100", "bathingWaterDescription" : {"_value" : "Perran Sands is on the south coast of Cornwall. It is a rural sandy beach, approximately 350 metres wide, backed by cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "This bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water scheme for Perranuthnoe sewage treatment works (STW) was completed in June 1999, with the untreated sewage discharge at Maen-du Point retained as a combined sewer overflow and pumping station emergency overflow. \nSewage from Perranuthnoe is pumped to the Hayle STW, where it receives secondary treatment and discharges through a 2.7 kilometre (km) long sea outfall west of Godrevy Head in St Ives Bay. The STW at Hayle was enlarged and upgraded in 1995 to take the additional flow.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30100/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30100/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Perranuthnoe", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30100-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Perranuthnoe", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0240", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30100:1", "stwOutfallsStatement" : {"_value" : "Sewage from the Penzance area is pumped to Hayle STW for treatment, and discharges to the sea off the North Cornwall coast. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Perranuthnoe for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 9% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30100_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Perran Sands is approximately 83 hectares and includes the small village of Perranuthnoe and surrounding hamlets. There are no streams discharging directly to the beach. Surface water drains to the beach from the catchment. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30100/date/20160925/time/110000/recordDate/20160925", "escherichiaColiCount" : 18, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T11:00:00", "inXSDDateTime" : {"_value" : "2016-09-25T11:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Perranuthnoe", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/perranuthnoe", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30100", "easting" : 153980.0, "lat" : 50.1122525406346, "long" : -5.44245580831161, "name" : {"_value" : "Sampling point at Perranuthnoe", "_lang" : "en"}
        , "northing" : 29250.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : false, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30100:1", "name" : {"_value" : "Zone of influence at Perranuthnoe", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30200:1", "label" : [{"_value" : "Map bounds for Mounts Bay Marazion", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30200", "bathingWaterDescription" : {"_value" : "Mounts Bay is on the south coast of Cornwall. There are four designated bathing waters located around the bay - Wherry Town, Penzance, Heliport and Marazion. All the beaches are sandy resorts backed by sea defences. Marazion beach is approximately 880 metres wide. The Red River flows onto the centre of Marazion beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past there were a number of private discharges and combined sewer overflows (CSO) that affected this bathing water, as well as the general contamination of Penzance Bay from numerous sources. The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. \nThe scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. Wastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000. In 1998, further improvements were also made to CSOs at Long Rock, and Marazion pumping station CSO was sealed in November 2001.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30200/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out additional catchment monitoring throughout the Penzance/Marazion area of Mounts Bay alongside the Environment Agency routine bathing water monitoring. The Environment Agency have  used a DNA tracing technique to help us identify whether sources of faecal pollution are animal or human with surveys carried out in wet and dry weather conditions.\nThese studies have shown that water quality in the Marazion River and Marazion bathing water is generally excellent but that it may become reduced during periods of wet weather. DNA tracing has indicated that the impacts during wet weather are predominantly animal in origin, probably due to runoff from farmland throughout the river catchment.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Mounts Bay Marazion", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30200-2017", "localAuthorityStatement" : {"_value" : "The urban area of Marazion immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. We have carried out an investigation of the sewerage network close to the sea front using CCTV. Further investigations are required to pinpoint any issues.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Mounts Bay Marazion", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n5 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Mounts Bay Marazion bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 5 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "The bathing water quality is influenced by the Marazion River, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0241", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30200:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Red River flows into the sea at this beach. The Environment Agency have monitored the Red River since 1986 and found that is can affect water quality during or after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Penzance area is pumped to Hayle STW for treatment, and discharges to the sea off the North Cornwall coast. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Mounts Bay Marazion for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 57% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30200_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Mounts Bay Marazion is approximately 3,370 hectares. The Red River (also known as Marazion River) flows through a shallow valley to Mounts Bay at Marazion Beach. The Red River is approximately 10 kilometres (km) (27.5km long including major tributaries) and rises from the rolling lowland in the northwest of the catchment. The northern parts of the catchment are mostly improved and acid grassland. The south facing slopes near Marazion contain the only Grade 1 agricultural land in Cornwall and are used for vegetable and horticultural production. \nMost of the remaining farmland is used for dairy and beef farming, with around 20 farms. The catchment also contains the urban areas of Marazion, Goldsithney and Crowlas. The Marazion Marsh Special Protection Area (SPA) and Site of Special Scientific Interest (SSSI) is located just behind the beach.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/30200/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0109", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30200", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30200", "easting" : 151317.0, "lat" : 50.1265050340743, "long" : -5.480736172252, "name" : {"_value" : "Sampling point at Mounts Bay Marazion", "_lang" : "en"}
          , "northing" : 30962.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30200/date/20160925/time/112500/recordDate/20160925", "escherichiaColiCount" : 55, "intestinalEnterococciCount" : 46, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T11:25:00", "inXSDDateTime" : {"_value" : "2016-09-25T11:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Mounts Bay Marazion", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/mounts-bay-marazion", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30200", "easting" : 151317.0, "lat" : 50.1265050340743, "long" : -5.480736172252, "name" : {"_value" : "Sampling point at Mounts Bay Marazion", "_lang" : "en"}
        , "northing" : 30962.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30200:1", "name" : {"_value" : "Zone of influence at Mounts Bay Marazion", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30300", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30300:1", "label" : [{"_value" : "Map bounds for Mounts Bay Long Rock", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30300", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30300/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30300/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30300", "bathingWaterDescription" : {"_value" : "Mounts Bay is on the south coast of Cornwall. There are four designated bathing waters located around the bay - Wherry Town, Penzance, Heliport and Marazion. All the beaches are sandy resorts backed by sea defences. Heliport beach is approximately one kilometre wide. The Ponsandane Brook flows onto the western end of Heliport beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a storm overflow from the Finns CSO. The overflow discharges to the Ponsandane Brook, 130m from the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality in Mounts Bay.\nWithin the Heliport bathing water catchment there are three emergency/storm overflows that discharge into the Trevaylor Stream and four that discharge into the sea east and west of the bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past there were a number of private discharges and combined sewer overflows (CSO) that affected this bathing water, as well as the general contamination of Penzance Bay from numerous sources. The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. \nThe scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. Wastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000. In 1998, further improvements were also made to CSOs at Long Rock, and Marazion pumping station CSO was sealed in November 2001.\nStorm overflow event duration monitoring (EDM) was installed at six CSOs in Penzance by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30300/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring throughout the Penzance/Marazion area of Mounts Bay alongside the Environment Agency routine bathing water monitoring. The Environment Agency are using a DNA tracing technique to help us identify whether sources of faecal pollution are animal or human, with surveys carried out in wet and dry weather conditions. The aim is to pinpoint pollution problems in the freshwater streams flowing into Mounts Bay and the local sewerage infrastructure, so that the Environment Agency can improve water quality at the bathing waters.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30300/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Mounts Bay Long Rock", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30300-2017", "localAuthorityStatement" : {"_value" : "The urban area of Penzance immediately behind the beach is served by a combined (surface and sewer) system.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Mounts Bay Long Rock", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n3 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Mounts Bay Long Rock bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 3 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "The bathing water quality is influenced by the Chy-an-dour stream and the Ponsandane Brook, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0242", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30300:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Chy-an-dour Stream flows to the sea to the west of this beach, and the Ponsandane Brook (Trevaylor Stream) flows across the beach to the sea. The Environment Agency have monitored these streams since 1986 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Penzance area is pumped to Hayle STW for treatment, and discharges to the sea off the North Cornwall coast. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Mounts Bay Long Rock for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 28% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30300_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Mounts Bay Heliport is approximately 2,315 hectares. There are a number of streams which drain to this part of Mount\u2019s Bay. The Chy-an-dour Brook at the western end of the beach is approximately five and a half kilometres long and flows through mining country before skirting the eastern edge of Penzance and entering the bay just east of the harbour. The Trevaylor Stream is approximately seven kilometres long and joins with the Rosemorran Stream to form the Ponsandane Brook (Trevaylor Stream) which passes through the urban area of Trevarrack before entering the bay 400 metres (m) to the west of the Environment Agency monitoring point. \nA small stream approximately one and a half kilometres long also drains through an underground channel 200m east of the Environment Agency monitoring point. In total the river network in the catchment is approximately 22km including major tributaries. The catchment rises in the moorland close to the northern coast and slopes steeply in the headwaters then fairly gently south to the coast. The catchment is a patchwork of improved and unimproved grassland, arable and heath. The catchment lies within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/30300/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0110", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30300", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30300", "easting" : 148650.0, "lat" : 50.1263574538717, "long" : -5.51805830864849, "name" : {"_value" : "Sampling point at Mounts Bay Long Rock", "_lang" : "en"}
          , "northing" : 31070.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30300/date/20160925/time/115000/recordDate/20160925", "escherichiaColiCount" : 127, "intestinalEnterococciCount" : 36, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T11:50:00", "inXSDDateTime" : {"_value" : "2016-09-25T11:50:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Mounts Bay Long Rock", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/mounts-bay-long-rock", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30300", "easting" : 148650.0, "lat" : 50.1263574538717, "long" : -5.51805830864849, "name" : {"_value" : "Sampling point at Mounts Bay Long Rock", "_lang" : "en"}
        , "northing" : 31070.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30300:1", "name" : {"_value" : "Zone of influence at Mounts Bay Long Rock", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30400:1", "label" : [{"_value" : "Map bounds for Mounts Bay Penzance", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30400", "bathingWaterDescription" : {"_value" : "Mounts Bay is on the south coast of Cornwall. There are four designated bathing waters located around the bay - Wherry Town, Penzance, Heliport and Marazion. All the beaches are sandy resorts backed by sea defences. Penzance beach is approximately 530 metres wide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There are no storm or emergency overflows affecting this bathing water, however, there are several that discharge directly and indirectly into the Mounts Bay area. The operation of the overflows can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past there were a number of private discharges and combined sewer overflows (CSO) that affected this bathing water, as well as the general contamination of Penzance Bay from numerous sources. The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. \nThe scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. Wastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000. In 1998, further improvements were also made to CSOs at Long Rock, and Marazion pumping station CSO was sealed in November 2001.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30400/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring throughout the Penzance/Marazion area of Mounts Bay alongside the Environment Agency routine bathing water monitoring. The Environment Agency are using a DNA tracing technique to help us identify whether sources of faecal pollution are animal or human with surveys carried out in wet and dry weather conditions. The aim is to pinpoint pollution problems in the freshwater streams flowing into Mounts Bay and the local sewerage infrastructure so that the Environment Agency can improve water quality at the bathing waters.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Mounts Bay Penzance", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30400-2017", "localAuthorityStatement" : {"_value" : "The urban area of Penzance immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Mounts Bay Penzance", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Mounts Bay Penzance bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by Mounts Bay and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0331", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There are no streams directly affecting this bathing water, however, there are several flowing into Mounts Bay nearby which can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Penzance area is pumped to Hayle STW for treatment, and discharges to the sea off the North Cornwall coast. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Mounts Bay Penzance for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 31% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30400_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Mounts Bay Penzance is approximately 3,350 hectares. There are no streams which flow directly to the beach at the Environment Agency monitoring point, however, the catchment affecting the water quality at the beach contains the rivers Newlyn Coombe and Lariggan which enter Mounts Bay at distances of 1300 metres (m) and 700m west of the Environment Agency monitoring point respectively. These two streams have a combined length of approximately 30km and rise from the high ground of the Penwith peninsula sloping steeply in the headwaters and then more gently towards the coast. \nLand use is a mixture of rural and urban. The rural areas are mostly improved and unimproved grasslands and heath, the urban areas are concentrated at the coast and includes most of Penzance and Newlyn. The catchment lies within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/30400/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0111", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30400", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30400", "easting" : 147340.0, "lat" : 50.1146703148637, "long" : -5.53552896653342, "name" : {"_value" : "Sampling point at Mounts Bay Penzance", "_lang" : "en"}
          , "northing" : 29830.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30400/date/20160925/time/122500/recordDate/20160925", "escherichiaColiCount" : 55, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T12:25:00", "inXSDDateTime" : {"_value" : "2016-09-25T12:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Mounts Bay Penzance", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/mounts-bay-penzance", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30400", "easting" : 147340.0, "lat" : 50.1146703148637, "long" : -5.53552896653342, "name" : {"_value" : "Sampling point at Mounts Bay Penzance", "_lang" : "en"}
        , "northing" : 29830.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30400:1", "name" : {"_value" : "Zone of influence at Mounts Bay Penzance", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30500:1", "label" : [{"_value" : "Map bounds for Mounts Bay Wherry Town", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30500", "bathingWaterDescription" : {"_value" : "Mounts Bay is on the south coast of Cornwall. There are four designated bathing waters located around the bay - Wherry Town, Penzance, Heliport and Marazion. All the beaches are sandy resorts backed by sea defences. Wherry Town beach is approximately one kilometre wide. The Newlyn River flows onto the beach at the western end of Wherry Town and the Larrigan River flows onto the eastern end of the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a disused outfall from the Newlyn Art Galley.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past there were a number of private discharges and combined sewer overflows (CSO) that affected this bathing water, as well as the general contamination of Penzance Bay from numerous sources. The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. \nThe scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. Wastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000. In 1998, further improvements were also made to CSOs at Long Rock, and Marazion pumping station CSO was sealed in November 2001.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30500/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring throughout the Penzance/Marazion area of Mounts Bay alongside the Environment Agency routine bathing water monitoring. The Environment Agency used a DNA tracing technique to help identify whether sources of faecal pollution are animal or human with surveys carried out in wet and dry weather conditions. The aim was to pinpoint pollution problems in the freshwater streams flowing into Mounts Bay and the local sewerage infrastructure so that the Environment Agency can improve water quality at the bathing waters. While results showed pollution at Wherrytown bathing water to be predominantly dominated by animal sources the pollution in the Newlyn River can alternate between animal and human sources.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Mounts Bay Wherry Town", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30500-2017", "localAuthorityStatement" : {"_value" : "The urban area of Penzance immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Mounts Bay Wherry Town", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n8 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Mounts Bay Wherry Town bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 8 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Newlyn and Lariggan rivers, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0332", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30500:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Lariggan and the Newlyn rivers flow into the sea on either side of this beach. The Environment Agency have monitored these rivers between 1986 and 2010, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Penzance area is pumped to Hayle STW for treatment, and discharges to the sea off the North Cornwall coast. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Mounts Bay Wherry Town for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 40% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30500_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Mounts Bay Wherry Town is approximately 3,350 hectares. The Lariggan River is approximately six kilometres long and flows through mining country before entering the bay at Wherry Town. The Newlyn Coombe River also originates in mining country and follows an 11km route to enter the bay at Newlyn approximately 600 metres (m) southwest of Wherry Town beach. These two streams have a combined length of approximately 30km and rise from the high ground of the Penwith peninsula sloping steeply in the headwaters and then more gently towards the coast. \nLand use is a mixture of rural and urban. The rural areas are mostly improved and unimproved grasslands and heath, the urban areas are concentrated at the coast and includes most of Penzance and Newlyn. The catchment lies within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/30500/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0112", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30500", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30500", "easting" : 146643.0, "lat" : 50.1089269853027, "long" : -5.5448462256399, "name" : {"_value" : "Sampling point at Mounts Bay Wherry Town", "_lang" : "en"}
          , "northing" : 29224.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30500/date/20160925/time/123500/recordDate/20160925", "escherichiaColiCount" : 36, "intestinalEnterococciCount" : 27, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T12:35:00", "inXSDDateTime" : {"_value" : "2016-09-25T12:35:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Mounts Bay Wherry Town", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/mounts-bay-wherry-town", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30500", "easting" : 146643.0, "lat" : 50.1089269853027, "long" : -5.5448462256399, "name" : {"_value" : "Sampling point at Mounts Bay Wherry Town", "_lang" : "en"}
        , "northing" : 29224.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30500:1", "name" : {"_value" : "Zone of influence at Mounts Bay Wherry Town", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30600:1", "label" : [{"_value" : "Map bounds for Porthcurno", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30600", "bathingWaterDescription" : {"_value" : "Porthcurno is on the south coast of Cornwall. It is a rural sandy beach, approximately 130 metres wide, set in a picturesque cove backed by cliffs. There is a small stream that flows onto the beach and disperses over the sand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Porthcurno Valley pumping station, that discharges 170m from the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality. \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for Sennen, which provides secondary treatment, was completed in 2008. Storm overflow event duration monitoring (EDM) was installed at the Porthcurno pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30600/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthcurno", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30600-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthcurno", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by a small stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0333", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30600:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There is a small stream which flows onto this beach which can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from Porthcurno is pumped to the Sennen sewage treatment works (STW), and discharges to the sea nine kilometres northwest of Porthcurno bathing water.\nThe outfall from a private sewer discharges treated sewage to the sea 170m from the Environment Agency monitoring point . \nThese discharges are designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthcurno for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 16% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30600_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are two farms in the catchment. During and after periods of heavy rainfall, runoff to the stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthcurno is approximately 113 hectares. The stream which enters the sea at the beach is approximately 1.2 kilometres (km) long and flows through the village of Porthcurno to the beach. The valley is short and steep and the small cove is surrounded by steep cliffs. The steep catchment means rain runs off rapidly into the stream. A smaller stream about 300m enters the bay at Percella Cove about 200m east of the Environment Agency monitoring point. \nLand use is mostly arable with only one or two farms. The small village of Porthcurno is located centrally and the Minack open air theatre is located on the cliffs just to the west of the cove. The coastal cliffs have been designated as Treen cliff Site of Special Scientific Interest (SSSI) and the catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30600/date/20160925/time/134000/recordDate/20160925", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T13:40:00", "inXSDDateTime" : {"_value" : "2016-09-25T13:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthcurno", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthcurno", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30600", "easting" : 138740.0, "lat" : 50.0429147873402, "long" : -5.65039285876609, "name" : {"_value" : "Sampling point at Porthcurno", "_lang" : "en"}
        , "northing" : 22250.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30600:1", "name" : {"_value" : "Zone of influence at Porthcurno", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30700:1", "label" : [{"_value" : "Map bounds for Sennen", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30700", "bathingWaterDescription" : {"_value" : "Sennen Cove is 1.6 kilometres northeast of Lands End in Cornwall. It is a large sandy beach resort, approximately 940 metres wide, backed by sand dunes. There are two small streams that flow onto the beach and disperse over the sand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Sennen pumping station, that discharges to the sea approximately 600m west of the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in water quality at Sennen.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for Sennen, which provides secondary treatment, was completed in 2006. Storm overflow event duration monitoring (EDM) was installed at the Sennen Cove pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30700/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Sennen", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30700-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Sennen", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0334", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30700:1", "stwOutfallsStatement" : {"_value" : "The outfall from Sennen STW, discharges to the sea approximately 600m west of the Environment Agency monitoring point. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Sennen for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 22% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30700_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Sennen is approximately 150 hectares. There is a small stream 400m long that discharges close to the Environment Agency monitoring point and disappears into the sand. A second larger stream 800m long flows through the dunes and onto the beach 400m north of the Environment Agency monitoring point. Land use is mostly urban containing a number of small villages with some arable land on the southern slopes. The catchment lies within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30700/date/20160925/time/141500/recordDate/20160925", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-25T14:15:00", "inXSDDateTime" : {"_value" : "2016-09-25T14:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Sennen", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/sennen", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30700", "easting" : 135560.0, "lat" : 50.0787565561387, "long" : -5.69757684991096, "name" : {"_value" : "Sampling point at Sennen", "_lang" : "en"}
        , "northing" : 26400.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30700:1", "name" : {"_value" : "Zone of influence at Sennen", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30800:1", "label" : [{"_value" : "Map bounds for Porthmeor", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30800", "bathingWaterDescription" : {"_value" : "Porthmeor is the main tourist beach in St Ives on the north coast of Cornwall. It is a sandy beach resort, approximately 640 metres wide, close to the town.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past Porthmeor bathing water was affected by the untreated outfall at Bamaluz Point. The outfall was removed as part of the South West Water scheme for Penzance and St Ives completed in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. \nWastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7 kilometre (km) long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30800/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthmeor", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30800-2017", "localAuthorityStatement" : {"_value" : "This beach has a series of pipes that drain surface water from the surrounding area.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthmeor", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0335", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30800:1", "stwOutfallsStatement" : {"_value" : "Sewage from the St Ives area is pumped to Hayle STW for treatment, and discharges to the sea 4.7km northeast of the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthmeor for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 20% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30800_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Porthmeor is approximately 26 hectares. There are no streams discharging directly to the beach. Surface water collects on the steep northeast facing slopes and migrates down to the beach. Land use is largely urban and contains part of the resort town of St Ives and one caravan site. Part of the coast is designated as Aire Point to Carrick Du Site of Special Scientific Interest (SSSI), and the catchment lies within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30800/date/20160919/time/110000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T11:00:00", "inXSDDateTime" : {"_value" : "2016-09-19T11:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthmeor", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthmeor", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30800", "easting" : 151590.0, "lat" : 50.2153000175372, "long" : -5.48338305416661, "name" : {"_value" : "Sampling point at Porthmeor", "_lang" : "en"}
        , "northing" : 40840.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : false, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30800:1", "name" : {"_value" : "Zone of influence at Porthmeor", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-30900:1", "label" : [{"_value" : "Map bounds for Porthgwidden", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-30900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/30900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-30900", "bathingWaterDescription" : {"_value" : "Porthgwidden is in St Ives Bay on the north coast of Cornwall. It is a small, sheltered, sandy beach resort approximately 110 metres wide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from Porthgwidden pumping station, that discharges to the sea approximately 120m east of the bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past Porthgwidden bathing water was affected by the untreated outfall at Bamaluz Point. The outfall was removed as part of the South West Water scheme for Penzance and St Ives completed in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. \nWastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7 kilometre (km) long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000.\nStorm overflow event duration monitoring (EDM) was installed at the Porthgwidden pumping station by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-30900/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-30900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthgwidden", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-30900-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthgwidden", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0336", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-30900:1", "stwOutfallsStatement" : {"_value" : "Sewage from the St Ives area is pumped to Hayle STW for treatment, and discharges to the sea four and a half kilometres northeast of the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthgwidden for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 14% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-30900_1-webres.jpg", "zoiDescription" : {"_value" : "The small catchment surrounding Porthgwidden is approximately 1.7 hectares. There are no streams discharging directly to the beach. Land use is evenly split between coastal grassland and urban.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/30900/date/20160919/time/112000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T11:20:00", "inXSDDateTime" : {"_value" : "2016-09-19T11:20:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthgwidden", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthgwidden", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/30900", "easting" : 152080.0, "lat" : 50.2172111971261, "long" : -5.47665213877545, "name" : {"_value" : "Sampling point at Porthgwidden", "_lang" : "en"}
        , "northing" : 41030.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-30900:1", "name" : {"_value" : "Zone of influence at Porthgwidden", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-31000:1", "label" : [{"_value" : "Map bounds for Porthminster", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-31000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31000", "bathingWaterDescription" : {"_value" : "Porthminster is on the north coast of Cornwall. It is a sandy beach resort, approximately 1.1 kilometres wide, with a gentle slope making it easily accessible.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a storm overflow from the Wescots Quay CSO. The overflow discharges to Porthminster Beach 410m from our monitoring point. The overflow prevents local homes from being flooded with sewage after very heavy rainfall. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past Porthminster bathing water was affected by the untreated outfall at Bamaluz Point, although the outfall was removed as part of the South West Water scheme for Penzance and St Ives completed in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. \nWastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000.The combined sewer overflows (CSO) at Pedn Olva and Stennack Culvert were sealed in November 2001.\nStorm overflow event duration monitoring (EDM) was installed at the Wescots Quay pumping station by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31000/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-31000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthminster", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31000-2017", "localAuthorityStatement" : {"_value" : "The urban area of Porthminster immediately behind the beach is served by a combined (surface and sewer) system. There is a surface water outfall from Smeaton's Pier that discharges 620m north of the designated monitoring point.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Modern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthminster", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "There are two streams entering the sea near this beach, streams are frequently the cause of reduced water quality, particularly after rainfall. There is a storm overflow from the Wescots Quay, heavy rainfall may cause operation of this overflow which can affect water quality.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0337", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31000:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There are two streams entering the sea near this beach (marked by the green circles on the bathing water map) which can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the St Ives area is pumped to Hayle STW for treatment, and discharges to the sea five kilometres northeast of the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthminster for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 28% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-31000_1-webres.jpg", "workingWithPrivateOwnersStatement" : {"_value" : "There are private  and trade discharges within the catchment but we do not believe these are a source of pollution to the bathing water. If any concerns arise, we will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthminster is approximately 650 hectares. A small stream 1.2km long enters the sea close to our monitoring point and is mostly channelled underground. The Stennack Stream is approximately three and a half kilometres (4.7km long including tributaries). It enters the sea to the south of St Ives harbour 400 metres (m) northeast of the Environment Agency's monitoring point. \nThis is a fairly gently sloping coastal catchment with two or three high carns becoming steeper in St Ives and at the coast. Land use is mostly agricultural with just one or two farms. The catchment contains the majority of the resort town of St Ives, the rural area is mostly improved grassland.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31000/date/20160919/time/114000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T11:40:00", "inXSDDateTime" : {"_value" : "2016-09-19T11:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthminster", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthminster", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31000", "easting" : 152060.0, "lat" : 50.2086747709166, "long" : -5.47631146879273, "name" : {"_value" : "Sampling point at Porthminster", "_lang" : "en"}
        , "northing" : 40080.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-31000:1", "name" : {"_value" : "Zone of influence at Porthminster", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31100", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-31100:1", "label" : [{"_value" : "Map bounds for Carbis Bay Station Beach", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-31100", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31100/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31100/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31100", "bathingWaterDescription" : {"_value" : "Carbis Bay Station Beach is on the north coast of Cornwall. It is a privately owned sandy beach resort, approximately one kilometre wide, backed by sand dunes.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency overflow from the Porthminster Point pumping station, that discharges 670m northwest of the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. \nWastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000.\nStorm overflow event duration monitoring (EDM) was installed at the Porthminster Point pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31100/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-31100/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Carbis Bay Station Beach", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31100-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Carbis Bay Station Beach", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Carbis Bay stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0338", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31100:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There is a very small stream flowing onto this beach which is not known to affect bathing water quality.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Carbis Bay area is pumped to Hayle STW for treatment, and discharges to the sea five kilometres northeast of the bathing water. This discharge is designed to protect bathing water quality.\nThere is a disused outfall from Carbis Bay.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Carbis Bay Station Beach for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 18% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-31100_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Carbis Bay Station Beach is approximately 200 hectares. The Carbis Bay Stream is an intermittent stream approximately 1.6km long that discharges at the bathing water. The steep catchment means rain runs off rapidly into the stream. The Hayle Estuary enters St Ives Bay approximately two kilometres east of the beach.\nThe River Hayle is approximately 19km long rising southwest of Crowan village. It flows west for approximately eight kilometres and through a steep wooded valley north of the granite high ground at Trescowe Common, formerly a mining area. The river turns north near the hamlet of Relubbus, and flows nine and a half kilometres passing St Erth before reaching the Hayle Estuary. \nTributaries to the Hayle Estuary include the Nance Stream, the St Erth Stream and the Angarrack Stream, which extend the main river network in the catchment to approximately 42km. The Hayle Estuary encompasses a disused port on the east bank and a substantial area of salt marsh named Lelant Saltings to the west. This is an important habitat for birds and the Royal Society for the Protection of Birds runs a nature reserve there. Much of the estuary is designated as a Site of Special Scientific Interest (SSSI), including the area directly surrounding the bathing water.\nLand use is mostly urban from the coastal settlement of Carbis Bay. In the upper catchment there is some improved grassland and arable land.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31100/date/20160919/time/120300/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T12:03:00", "inXSDDateTime" : {"_value" : "2016-09-19T12:03:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Carbis Bay Station Beach", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/carbis-bay-station-beach", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31100", "easting" : 152820.0, "lat" : 50.1987589771395, "long" : -5.46493862733191, "name" : {"_value" : "Sampling point at Carbis Bay Station Beach", "_lang" : "en"}
        , "northing" : 38940.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-31100:1", "name" : {"_value" : "Zone of influence at Carbis Bay Station Beach", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-31200:1", "label" : [{"_value" : "Map bounds for Carbis Bay Porth Kidney Sands", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-31200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31200", "bathingWaterDescription" : {"_value" : "Carbis Bay Porth Kidney Sands is on the north coast of Cornwall. Porth Kidney Sands is a large sandy remote beach, approximately 1.3 kilometres wide, backed by sand dunes and cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "This bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. \nWastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000.\nStorm overflow event duration monitoring (EDM) was installed at the Porthgwidden pumping station and at five intermittent discharges to the Hayle estuary by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31200/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-31200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Carbis Bay Porth Kidney Sands", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31200-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Carbis Bay Porth Kidney Sands", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Hayle Estuary, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0339", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31200:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There are no streams directly affecting this bathing water but it is immediately next to the Hayle Estuary which can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Carbis Bay area is pumped to Hayle STW for treatment, and discharges to the sea four and a half kilometres from the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Carbis Bay Porth Kidney Sands for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 27% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-31200_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the catchment, most of which are dairy and arable. During and after periods of heavy rainfall, runoff from agricultural areas is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Carbis Bay Porth Kidney Sands is approximately 9,750 hectares. The bathing water is at the mouth of the Hayle Estuary. The River Hayle is approximately 19km long rising southwest of Crowan village. It flows west for approximately eight kilometres and through a steep wooded valley north of the granite high ground at Trescowe Common, formerly a mining area. The river turns north near the hamlet of Relubbus, and flows nine and a half kilometres passing St Erth before reaching the Hayle Estuary. \nTributaries to the Hayle Estuary include the Nance Stream, the St Erth Stream and the Angarrack Stream, which extend the main river network in the catchment to approximately 42km. The Hayle Estuary encompasses a disused port on the east bank and a substantial area of salt marsh named Lelant Saltings to the west. This is an important habitat for birds and the Royal Society for the Protection of Birds runs a nature reserve there. Much of the estuary is designated as a Site of Special Scientific Interest (SSSI), including the area directly surrounding the bathing water.\nLand use is mostly arable with improved grassland concentrated in the southeast of the catchment. There is a significant amount of urban area concentrated at the coast including Hayle, Lelant and Connor Downs.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31200/date/20160919/time/101800/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T10:18:00", "inXSDDateTime" : {"_value" : "2016-09-19T10:18:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Carbis Bay Porth Kidney Sands", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/carbis-bay-porth-kidney-sands", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31200", "easting" : 154620.0, "lat" : 50.1941216239555, "long" : -5.43937723793687, "name" : {"_value" : "Sampling point at Carbis Bay Porth Kidney Sands", "_lang" : "en"}
        , "northing" : 38340.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/TransitionalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-31200:1", "name" : {"_value" : "Zone of influence at Carbis Bay Porth Kidney Sands", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31300", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-31300:1", "label" : [{"_value" : "Map bounds for The Towans (Hayle)", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-31300", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31300/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31300/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31300", "bathingWaterDescription" : {"_value" : "The Towans (Hayle) is north of the mouth of the Hayle Estuary on the north coast of Cornwall. It is a sandy beach resort, approximately one kilometre wide, backed by sand dunes.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency overflow from the Towans pumping station that discharges 1.2km southwest of the Environment Agency monitoring point.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. \nWastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31300/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-31300/2017", "label" : [{"_value" : "2017 Bathing Water Profile for The Towans (Hayle)", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31300-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for The Towans (Hayle)", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Hayle Estuary, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0340", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31300:1", "streamsRiversStatement" : {"_value" : "There are no streams affecting this bathing water directly, although the Hayle Estuary is just to the west and can affect water quality during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from Hayle is pumped to Hayle STW for treatment, and discharges to the sea 3.2km from the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At The Towans (Hayle) for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 43% of visits. Tarry residue was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-31300_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the catchment, most of which are dairy and arable. During and after periods of heavy rainfall, runoff from agricultural areas is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding The Towans (Hayle) is approximately 9,750 hectares. The bathing water is approximately 1.8km northeast of the mouth of the Hayle Estuary system, and is backed by an extensive dune system (The Towans) which extends three and a half kilometres northeast from Phillack to Gwithian. \nThe River Hayle is approximately 19km long rising southwest of Crowan village. It flows west for approximately eight kilometres and through a steep wooded valley north of the granite high ground at Trescowe Common, formerly a mining area. The river turns north near the hamlet of Relubbus, and flows nine and a half kilometres passing St Erth before reaching the Hayle Estuary. \nTributaries to the Hayle Estuary include the Nance Stream, the St Erth Stream and the Angarrack Stream, which extend the main river network in the catchment to approximately 42km. The Hayle Estuary encompasses a disused port on the east bank and a substantial area of salt marsh named Lelant Saltings to the west. This is an important habitat for birds and the Royal Society for the Protection of Birds runs a nature reserve there. Much of the estuary is designated as a Site of Special Scientific Interest (SSSI), including the area directly surrounding the bathing water.\nLand use is mostly arable with improved grassland concentrated in the southeast of the catchment. There is a significant amount of urban area concentrated at the coast including Hayle, Lelant and Connor Downs.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31300/date/20160919/time/124000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T12:40:00", "inXSDDateTime" : {"_value" : "2016-09-19T12:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "The Towans (Hayle)", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/the-towans-hayle", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31300", "easting" : 156270.0, "lat" : 50.2047682940131, "long" : -5.41701497977548, "name" : {"_value" : "Sampling point at The Towans (Hayle)", "_lang" : "en"}
        , "northing" : 39450.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-31300:1", "name" : {"_value" : "Zone of influence at The Towans (Hayle)", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3105-31400:1", "label" : [{"_value" : "Map bounds for The Towans (Godrevy)", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3105-31400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3105-31400", "bathingWaterDescription" : {"_value" : "The Towans (Godrevy) is on the north coast of Cornwall. It is a sand and rock beach resort, approximately 670 metres wide, backed by sand dunes.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There are two emergency/storm overflows which discharge into the Red River several kilometres upstream of the bathing water. The operation of the overflows can lead to a temporary drop in water quality in the Red River and at Godrevy bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Penzance and St Ives was completed by South West Water in early 1995. The scheme included extensive sewerage, improvements to intermittent discharges and the removal of untreated sewage discharges. Wastewater from St Ives is pumped to Hayle sewage treatment works (STW), where it receives secondary treatment before its discharge through a 2.7km long sea outfall west of Godrevy Head. The Hayle STW was enlarged and upgraded in 1995 and again in 2000. \nImprovements were made to the Knave-Go-By combined sewer overflow (CSO) in the Red River catchment in 1999, as part of the Camborne and Redruth sewage treatment scheme. This scheme was completed by December 2001, and included improvements to the Reskadinnick CSO.\nStorm overflow event duration monitoring (EDM) was installed at the Reskadinnick pumping station by April 2011, and at the Tolvaddon pumping station by February 2013.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3105-31400/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency has carried out additional monitoring of the Red River and is working with South West Water and other partners to improve knowledge of the impact of combined sewer overflow discharges on the Red River. Recent studies have suggested that during times of extreme wet weather there are impacts throughout the whole Red River catchment from agriculture as well as urban drainage.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3105-31400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for The Towans (Godrevy)", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31400-2017", "localAuthorityStatement" : {"_value" : "The urban areas of Cambourne and Redruth in the Godrevy catchment are served by combined (surface and sewer) systems. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for The Towans (Godrevy)", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Red River, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from two storm overflows several kilometres upstream.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0341", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Red River flows onto this beach. The Environment Agency have monitored the river since 1986 and found that water quality is temporarily worse during and after heavy rainfall. There can also be water discolouration issues related to the resuspension of ochre from minewater.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from Hayle is pumped to Hayle STW for treatment, and discharges to the sea 2.3km from the bathing water. Sewage from Camborne is treated at Camborne STW and discharged to the sea at North Cliffs, five and a half kilometres from the bathing water. These discharges are designed to protect bathing water quality.\nThe Gwithian Churchtown STW, which includes tertiary treatment by reed bed, discharges to a tributary of the Red River, 1.2km from the bathing area.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At The Towans (Godrevy) for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 26% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3105-31400_1-webres.jpg", "workingWithIndustryStatement" : {"_value" : "There is no heavy industry within this catchment. Discharges from historic mining activity can affect the Red River. During wet weather the Red River can become discoloured by the re-suspension of ochre from the river bed and banks.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding The Towans (Godrevy) is approximately 6,200 hectares. The Red River enters St Ives Bay approximately 280m north of the Environment Agency monitoring point at Godrevy, and the Hayle Estuary system is approximately three kilometres (km) to the south. The Red River is approximately 13km (35km long including major tributaries) and rises from springs near Bolenowe. The steep catchment means rain runs off rapidly into the river.\nIn the past the Red River has been affected by the mining industry at Tuckingmill, Pool, Redruth, and Camborne. Land use in the rural areas is mostly arable near the coast and improved grassland with some dairy farming on the higher ground. Much of the coast in this part of Cornwall has been designated as a Site of Special Scientific Interest (SSSI).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31400/date/20160919/time/131500/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T13:15:00", "inXSDDateTime" : {"_value" : "2016-09-19T13:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "The Towans (Godrevy)", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/the-towans-godrevy", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31400", "easting" : 158180.0, "lat" : 50.2279961593516, "long" : -5.39189088555596, "name" : {"_value" : "Sampling point at The Towans (Godrevy)", "_lang" : "en"}
        , "northing" : 41950.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3105-31400:1", "name" : {"_value" : "Zone of influence at The Towans (Godrevy)", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-31500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3103-31500:1", "label" : [{"_value" : "Map bounds for Portreath", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3103-31500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-31500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3103-31500", "bathingWaterDescription" : {"_value" : "Portreath is on the north coast of Cornwall. It is a sand and shingle beach resort, approximately 520 metres wide, backed by cliffs. There is a stream that flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past untreated sewage from Redruth entered the Portreath Stream at the Portreath Tunnel, and flowed downstream to the bathing water. The sewage treatment scheme for Camborne and Redruth, which provides secondary treatment, was completed by South West Water in 2001. The sewage from Redruth is pumped to a sewage treatment works (STW) at Kieve Mill to the northwest of Camborne. The treated sewage is then discharged to the sea at North Cliffs approximately three and a half kilometres to the southwest of Portreath. \nThe Portreath Tunnel discharge has been retained as an emergency overflow/combined sewer overflow to the Bridge pumping station, which received storm overflow event duration monitoring (EDM) by May 2011 together with the Sunnyside combined sewer overflow by April 2016.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3103-31500/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3103-31500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Portreath", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31500-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water has a history of large amounts of seaweed from time to time.", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can affect the bathing water quality at Portreath beach.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Portreath", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Portreath stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0342", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31500:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Portreath Stream flows onto this beach. The Environment Agency have monitored the stream between 1986 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from Portreath, Redruth, and the surrounding area, is treated at Camborne STW and discharges to the sea at North Cliffs, 3.8km west of the bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Portreath for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 60% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3103-31500_1-webres.jpg", "workingWithPrivateOwnersStatement" : {"_value" : "The outfall to a private STW for a small number of properties discharges to a stream at SW6511045290, 30m from the beach. The discharge is disinfected and designed to protect bathing water quality. The Environment Agency do not believe this is a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Portreath is approximately 3,130 hectares. There are two streams at Portreath. The smaller unnamed stream is just 300m and is channelled underground for about half its length. It enters the sea at the western end of the beach approximately 200m from the Environment Agency monitoring point. \nThe Portreath Stream is approximately eight kilometres (km) long and includes a number of tributaries which drain to it along steep narrow valleys. The stream network is 17.7km in total including the major tributaries. The stream enters the sea very close to the Environment Agency monitoring point. \nThe old Nancekuke military site is located along the flat coastal strip to the north of the catchment. Land use is mostly agricultural, with around 20 farms. The arable land is close to the coast, and improved grassland is inland on higher ground. Much of the catchment is urban and contains part of the largest urban conurbation in Cornwall (Camborne, Pool, Redruth), as well as Portreath.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31500/date/20160919/time/135000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T13:50:00", "inXSDDateTime" : {"_value" : "2016-09-19T13:50:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Portreath", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/portreath", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31500", "easting" : 165350.0, "lat" : 50.2612329369265, "long" : -5.29363312652798, "name" : {"_value" : "Sampling point at Portreath", "_lang" : "en"}
        , "northing" : 45330.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3103-31500:1", "name" : {"_value" : "Zone of influence at Portreath", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-31600:1", "label" : [{"_value" : "Map bounds for Porthtowan", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-31600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31600", "bathingWaterDescription" : {"_value" : "Porthtowan is on the north coast of Cornwall. It is a sandy beach resort, approximately 370 metres wide, backed by cliffs. There is a stream that disperses over the sand in the centre of the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Porthtowan Beach pumping station, that discharges into the Porthtowan Stream at the beach. The emergency/storm overflow from the Echo Corner pumping station discharges to the Porthtowan Stream 800m upstream of the bathing water. The emergency/storm overflow from the Porthtowan STW discharges approximately two kilometres upstream of the bathing water. The operation of the overflows can lead to a temporary drop in water quality in the Porthtowan Stream and Porthtowan bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "Porthtowan sewage treatment works (STW) has provided secondary treatment since 1972. The sewage treatment scheme for Porthtowan, which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in early 1999. Further upgrades were installed in July 2002.\nStorm overflow event duration monitoring (EDM) was installed at the Porthtowan Beach and Echo Corner pumping stations by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31600/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-31600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthtowan", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31600-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthtowan", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Porthtowan stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0343", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31600:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Porthtowan Stream flows onto this beach. The Environment Agency have monitored the stream between 1989 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Porthtowan STW discharges to the Porthtowan Stream approximately two kilometres upstream of the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthtowan for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 64% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-31600_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are 15 farms in the catchment, most of which are dairy and arable. During and after periods of heavy rainfall, runoff from agricultural areas to the Porthtowan Stream is greatly increased, and the quality of the bathing water may be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthtowan is approximately 1,050 hectares. The Porthtowan Stream is approximately four kilometres (km) (6.3km long including tributaries). It flows around the village of Mount Hawke and then through Porthtowan before entering the sea at the beach. The catchment slopes gently from the headwaters in the valley and becomes very steep through Porthtowan to the coast. \nThe catchment is mostly agricultural with 15 farms and the rural areas are a patchwork of improved grassland and arable land. Urban areas include the villages of Mount Hawke and Porthtowan. Parts of the coast are designated as Godrevy Head to St Agnes Site of Special Scientific Interest (SSSI) and Special Area of Conservation (SAC).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31600/date/20160919/time/141500/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T14:15:00", "inXSDDateTime" : {"_value" : "2016-09-19T14:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthtowan", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthtowan", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31600", "easting" : 169127.0, "lat" : 50.2875216194933, "long" : -5.24241622838034, "name" : {"_value" : "Sampling point at Porthtowan", "_lang" : "en"}
        , "northing" : 48092.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-31600:1", "name" : {"_value" : "Zone of influence at Porthtowan", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31650", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-31650:1", "label" : [{"_value" : "Map bounds for Chapel Porth", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-31650", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31650/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31650/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31650", "bathingWaterDescription" : {"_value" : "Chapel Porth is on the north coast of Cornwall, approximately three kilometres from St Agnes. At high tide the beach is a small sand and shingle cove approximately 130 metres wide. At low tide a large stretch of sandy beach approximately one kilometre wide is exposed between Tubby\u2019s Head and the neighbouring beach at Porthtowan. The beach is backed by large moorland covered cliffs which are dotted with caves and several natural arches.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "There is no water company scheme associated directly with this bathing water.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31650/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-31650/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Chapel Porth", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31650-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Chapel Porth", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Chapel Coombe stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0344", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31650:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Chapel Coombe stream flows onto this beach.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Chapel Porth for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 21% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-31650_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are nine farms in the catchment, most of which are arable and dairy. During and after periods of heavy rainfall, runoff to the streams from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Chapel Porth is approximately 460 hectares. There are two unnamed streams that enter the sea at the bathing water. The southernmost stream is approximately two kilometres long and the northernmost stream approximately one kilometre long. The streams meet at Wheal Charlotte Moor and flow directly onto the beach. The steep catchment means rain runs off rapidly into the streams. \nThe Chapel Porth catchment is an old mining valley with several disused tin and copper mines including the Charlotte United Mines. There are small urban settlements at Goonvrea and Mingoose along with several other properties dispersed around the catchment. Land use is mainly agricultural, with approximately nine farms and several campsites. The catchment is within a number of national and international designations including, the Cornwall Area of Outstanding Natural Beauty (AONB), the Godrevy Head to St Agnes Site of Special Scientific Interest (SSSI) and Special Area of Conservation (SAC), and the St Agnes Heritage Coast.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31650/date/20160919/time/144000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T14:40:00", "inXSDDateTime" : {"_value" : "2016-09-19T14:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Chapel Porth", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/chapel-porth", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31650", "easting" : 169729.0, "lat" : 50.3004, "long" : -5.2348, "name" : {"_value" : "Sampling point at Chapel Porth", "_lang" : "en"}
        , "northing" : 49503.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/2012", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-31650:1", "name" : {"_value" : "Zone of influence at Chapel Porth", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-31700:1", "label" : [{"_value" : "Map bounds for Trevaunance Cove", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-31700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31700", "bathingWaterDescription" : {"_value" : "Trevaunance Cove is on the north coast of Cornwall. It is a sand and rock beach resort, approximately 250 metres wide, backed by cliffs. There is a small stream that disperses over the sand.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Cove pumping station. The overflow discharges to the Trevaunance Stream 70m from the beach. There is an emergency/storm overflow from the Peterville pumping station that discharges to the Trevaunance Stream 750m from the beach. \nThe operation of the overflows can lead to a temporary drop in water quality in the Trevaunance Stream and Trevaunance Cove bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past untreated effluent was discharged off Trevaunance Point very close to the bathing water. The sewage treatment scheme for St Agnes which provides Chemically Assisted Sedimentation, was completed by South West Water in 1996. The scheme also included a new relocated outfall, some resewerage and improvements to combined sewer overflows. The treatment at St Agnes STW was upgraded with ultraviolet (UV) disinfection and an advanced membrane filtration process in 2004.\nStorm overflow event duration monitoring (EDM) was installed at St Agnes STW, and the Peterville and Cove pumping stations by May 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31700/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "Environment Agency investigations have shown that the St Agnes stream catchment can be impacted by urban drainage as it flows through and under St Agnes. Investigations are ongoing to pinpoint and resolve these impacts and reduce the risk to Trevaunance Cove bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-31700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Trevaunance Cove", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31700-2017", "localAuthorityStatement" : {"_value" : "The village area of St Agnes immediately behind the beach is served by a combined (surface and sewer) system.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Trevaunance Cove", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Trevaunance stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0345", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31700:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Trevaunance Stream flows onto this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from St Agnes STW is discharged to the sea 640m west of bathing water. The discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Trevaunance Cove for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 23% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-31700_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are two farms in the catchment. During and after periods of heavy rainfall, runoff to the Trevaunance Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Trevaunance Cove is approximately 960 hectares, with two streams entering the sea at the beach. The Trevaunance Stream is approximately 2.2 kilometres (km) long and flows through the village of St Agnes before entering the sea at the bathing water. The Trevellas Stream is approximately four and a half kilometres long and flows through a valley which has been modified by historical mining activities. The stream enters the sea at the north eastern end of Trevaunace Cove approximately 500m from the Environment Agency monitoring point. St Agnes beacon is nearly 200m in height and is located in the northwest of the catchment, the stream valleys are generally steepest at or close to the coast. \nThe catchment is mostly agricultural with just one or two farms. Urban areas include the village of St Agnes and there are at least three caravan sites, the rural areas are a patchwork of improved grassland and arable land. Much of the coast is designated as a Site of Special Scientific Interest (SSSI).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31700/date/20160922/time/102500/recordDate/20160922", "escherichiaColiCount" : 136, "intestinalEnterococciCount" : 18, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T10:25:00", "inXSDDateTime" : {"_value" : "2016-09-22T10:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Trevaunance Cove", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/trevaunance-cove", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31700", "easting" : 172220.0, "lat" : 50.3204028346129, "long" : -5.2011963562627, "name" : {"_value" : "Sampling point at Trevaunance Cove", "_lang" : "en"}
        , "northing" : 51620.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-31700:1", "name" : {"_value" : "Zone of influence at Trevaunance Cove", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-31800:1", "label" : [{"_value" : "Map bounds for Perranporth Village End", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-31800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31800", "bathingWaterDescription" : {"_value" : "Perranporth Village End is at the southern end of Perran Sands on the north coast of Cornwall. It is a sandy beach resort approximately 700 metres wide, backed by sand dunes. A stream flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Perranzabuloe", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Station Road pumping station, that discharges into the Bolingey Stream 700m upstream of the bathing water. The operation of the overflow can lead to a temporary drop in water quality in the Bolingey Stream and Perranporth Village End bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past the water quality at Perranporth was affected by an untreated sewage outfall near Cligga Head and unsatisfactory combined sewer overflows (CSO) discharging to the Bolingey Stream. A sewage treatment works (STW) for Perranporth was built at Cligga Head by South West Water in late 1997. The scheme included a new relocated outfall, resewerage and improvements to CSOs. \nThe outfall from the STW was relocated again in April 2005 and treatment was upgraded to full secondary treatment and ultraviolet (UV) disinfection. Storm overflow event duration monitoring (EDM) was installed at the Station Road pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31800/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-31800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Perranporth Village End", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31800-2017", "localAuthorityStatement" : {"_value" : "The urban area of Perranporth immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Perranporth Village End", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Bolingey and Perrancoombe streams, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0346", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31800:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Bolingey and Perrancoombe streams join on the beach at Perranporth and flow into the sea at Perranporth Village End. The Environment Agency have monitored these streams upstream from where they join between 1986 and 2008, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Perranporth STW discharges to the sea approximately 1.3km southwest of the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Perranporth Village End for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 52% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-31800_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 20 farms in the catchment, most of which are arable and livestock. During and after periods of heavy rainfall, runoff to the Bolingey and Perrancoombe streams from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Perranporth Village End is approximately 3,650 hectares. The Bolingey and Perrancoombe streams join just before entering the bathing water. The Perrancoombe Stream is approximately 7.6 kilometres (km) long and rises just north of the A30 flowing northwards to Perranporth. The Bolingey Stream is approximately 16km long (including tributaries). The steep catchment means rain runs off rapidly into the streams. \nThe catchment is mostly agricultural, with around 20 farms, and the rural areas are mostly improved grassland, with some arable and wooded valleys, particularly on the Bolingey Stream. Urban areas include Perranporth and Goonhavern and there are many holiday camps and caravan sites in the catchment. Much of the coastline is designated as a Site of Special Scientific Interest (SSSI) or Special Area of Conservation (SAC).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31800/date/20160922/time/110000/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T11:00:00", "inXSDDateTime" : {"_value" : "2016-09-22T11:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Perranporth Village End", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/perranporth-village-end", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31800", "easting" : 175640.0, "lat" : 50.349372204644, "long" : -5.1550635763185, "name" : {"_value" : "Sampling point at Perranporth Village End", "_lang" : "en"}
        , "northing" : 54700.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-31800:1", "name" : {"_value" : "Zone of influence at Perranporth Village End", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-31900:1", "label" : [{"_value" : "Map bounds for Perranporth Penhale Sands", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-31900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/31900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-31900", "bathingWaterDescription" : {"_value" : "Perranporth Penhale Sands is in the centre of Perran Sands on the north coast of Cornwall. It is a sandy beach resort approximately one kilometre wide, backed by sand dunes. A stream flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past the water quality at Perranporth was affected by an untreated sewage outfall near Cligga Head and unsatisfactory combined sewer overflows (CSO) discharging to the Bolingey Stream. A sewage treatment works (STW) for Perranporth was built at Cligga Head by South West Water in late 1997. The scheme included a new relocated outfall, resewerage and improvements to CSOs. \nThe outfall from the STW was relocated again in April 2005 and treatment was upgraded to full secondary treatment and ultraviolet (UV) disinfection. Storm overflow event duration monitoring (EDM) was installed at the Perranuthnoe  pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-31900/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-31900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Perranporth Penhale Sands", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-31900-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Perranporth Penhale Sands", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0347", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-31900:1", "stwOutfallsStatement" : {"_value" : "The outfall from Perranporth STW discharges to the sea approximately 2.3km southwest of the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Perranporth Penhale Sands for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 45% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-31900_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Perranporth Penhale Sands is approximately 3,650 hectares. There are no streams entering the sea at the bathing water, however, the Bolingey and Perrancoombe streams enter the sea one kilometre south at Perranporth Village End. The Perrancoombe Stream is approximately 7.6 kilometres (km) long and rises just north of the A30 flowing northwards to Perranporth. The Bolingey Stream is approximately 16km long (including tributaries). The steep catchment means rain runs off rapidly into the streams. \nThe catchment is mostly agricultural, with around 20 farms, and the rural areas are mostly improved grassland, with some arable and wooded valleys, particularly on the Bolingey Stream. Urban areas include Perranporth and Goonhavern and there are many holiday camps and caravan sites in the catchment. Much of the coastline is designated as a Site of Special Scientific Interest (SSSI) or Special Area of Conservation (SAC).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/31900/date/20160922/time/114000/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T11:40:00", "inXSDDateTime" : {"_value" : "2016-09-22T11:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Perranporth Penhale Sands", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/perranporth-penhale-sands", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/31900", "easting" : 175950.0, "lat" : 50.3593678651711, "long" : -5.1513676068956, "name" : {"_value" : "Sampling point at Perranporth Penhale Sands", "_lang" : "en"}
        , "northing" : 55800.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : false, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-31900:1", "name" : {"_value" : "Zone of influence at Perranporth Penhale Sands", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-32000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3102-32000:1", "label" : [{"_value" : "Map bounds for Holywell Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3102-32000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-32000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3102-32000", "bathingWaterDescription" : {"_value" : "Holywell Bay is on the north coast of Cornwall. It is a rural sandy beach, approximately 1.2 kilometres wide, backed by cliffs and sand dunes. There is a stream that flows across the southern end of the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Holywell Road pumping station, that discharges to the Holywell Stream approximately 400 metres from the beach. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet (UV) disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.\nThe sewage treatment works (STW) at Newlyn (East) and Fraddon received UV disinfection in 2001 and 2002 respectively. Sewage from Mitchell STW are pumped to Newlyn (East). Storm overflow event duration monitoring (EDM) was installed at the Holywell Road  pumping station by May 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3102-32000/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3102-32000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Holywell Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32000-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Holywell Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Holywell stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0348", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32000:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Holwell Stream flows onto this beach. The Environment Agency monitored the Holywell Stream at Holywell Bay Bridge for the period between 1986 and 1997, and found that it can affect water quality during and after heavy rainfall. There can also be water discolouration issues related to the resuspension of ochre from minewater.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from the Holywell Bay area is pumped to Newquay for treatment. The outfall for the Newquay STW discharges into the sea approximately 5.8km northeast of Holywell bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Holywell Bay for the four year (2013-2016) assessment period where data is available, sewage debris was assessed as being sufficient to be objectionable for 1% of visits, with 0% of visits noting the presence of sewage debris. Litter was assessed as being sufficient to be objectionable for 1% of visits, with 61% of visits noting the presence of litter. Tarry residue was assessed as being sufficient to be objectionable for 1% of visits, with 0% of visits noting the presence of tarry residue.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3102-32000_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 20 farms in the catchment, most of which are dairy and arable. During and after periods of heavy rainfall, runoff to the Holywell Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Holywell Bay is approximately 2,420 hectares. The Holywell Stream is approximately 8.8km (14.5km long including tributaries) and enters the sea at Holywell beach. The steep parts of the catchment mean rain runs off rapidly into the stream. Land use is mostly agricultural, with around 20 farms. The rural areas are comprised of a patchwork of improved grassland, arable and woodland. \nPenhale sand dunes are located in the east of the catchment and are designated as both a Site of Special Scientific Interest (SSSI) and Special Area of Conservation (SAC). Urban areas include Holywell and part of Goonhavern and there are holiday camps and caravan sites in the catchment.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32000/date/20160922/time/122000/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T12:20:00", "inXSDDateTime" : {"_value" : "2016-09-22T12:20:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Holywell Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/holywell-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32000", "easting" : 176520.0, "lat" : 50.3919113546784, "long" : -5.1455057863139, "name" : {"_value" : "Sampling point at Holywell Bay", "_lang" : "en"}
        , "northing" : 59400.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3102-32000:1", "name" : {"_value" : "Zone of influence at Holywell Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32100", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32100:1", "label" : [{"_value" : "Map bounds for Crantock", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32100", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32100/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestOpenIncident" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/pollution-incident/12345678-27032017-144900/recordDateTime/20170331112455", "expectedEndOfIncident" : {"_value" : "2017-03-28", "_datatype" : "date"}
        , "incidentNotation" : "12345678-27032017-144900", "incidentType" : {"_about" : "http://environment.data.gov.uk/def/incident-type/011", "label" : [{"_value" : "agricultural waste", "_lang" : "en"}
          ]}
        , "nirsRef" : "12345678", "som_recordDateTime" : {"_value" : "2017-03-31T11:24:55", "_datatype" : "dateTime"}
        , "startOfIncident" : {"_value" : "2017-03-27T14:49:00", "_datatype" : "dateTime"}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32100/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32100", "bathingWaterDescription" : {"_value" : "Crantock Beach is on the north coast of Cornwall at the mouth of the Gannel Estuary. It is a sandy beach resort, approximately 940 metres wide, surrounded by sand dunes and cliffs. The River Gannel flows the length of the beach to the sea at the north end of the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency overflow from the West Pentire pumping station, that discharges to the sea 700m southwest of the Environment Agency monitoring point. \nThere is an emergency/storm overflow from the Crantock pumping station, that discharges to the River Gannel 500m upstream from the beach. There is also an emergency/storm overflow from the Fern Pit pumping station, that discharges to the River Gannel close to the beach. The operation of these overflows can lead to a temporary drop in water quality in the River Gannel and Crantock bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.\nThe sewage treatment works (STW) at Newlyn (East) and Fraddon received tertiary treatment in 2001 and 2002 respectively. Sewage from Mitchell STW are pumped to Newlyn (East).\nStorm overflow event duration monitoring (EDM) was installed at the Gusti Veor, Crantock, and Fern Pitt pumping stations by December 2011, and at the Tresean pumping station by April 2016.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32100/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the River Gannel in 2010, and will made recommendations for further improvements to protect and improve the bathing water quality.\nInvestigations indicated that water quality was generally good in the River Gannel but may occasionally be affected by agricultural runoff in the upper catchment during wet weather and sewerage operations in the lower catchment. Lower water quality in the bathing water was most likely to occur at low tide.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32100/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Crantock", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32100-2017", "localAuthorityStatement" : {"_value" : "The urban area of Crantock immediately behind the beach is served by a combined (surface and sewer) system.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Crantock", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Crantock bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Crantock bathing water quality is influenced by the River Gannel, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from three storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0349", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32100:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The River Gannel flows across the northern end of this beach. The Environment Agency have monitored the stream between 1987 and 2014, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 2.5km northeast of Crantock bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Crantock for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 43% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32100_1-webres.jpg", "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Crantock is approximately 6,000 hectares. The River Gannel rises just north of the A30 at Fraddon and flows approximately 10 kilometres (km) to the tidal limit of the Gannel Estuary. The estuary flows for three and a half kilometres and enters the sea at Crantock Beach, to the west of Newquay. The streams which drain into the Gannel Estuary include the Benny Stream and the Trencreek Stream. The river network in the catchment is approximately 32km in total. \nThe steep parts of the catchment mean rain runs off rapidly into the river. Land use is mostly agricultural for the production of early potatoes, brassicas and daffodils, along with mixed dairy units. The majority of farms in the catchment are small to medium, with beef, sheep and small areas of arable. There are also a number of dairy farms and a few larger specialist arable farms. \nThe urban areas in the catchment include most of the resort town of Newquay, St Newlyn East and Fraddon. There are holiday camps and caravan sites in the catchment. Newlyn Downs Site of Special Scientific Interest (SSSI) and Special Area of Conservation (SAC) is at the top of the catchment around the Benny Stream headwaters.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/32100/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0113", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32100", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32100", "easting" : 178460.0, "lat" : 50.4068339291915, "long" : -5.11918706120216, "name" : {"_value" : "Sampling point at Crantock", "_lang" : "en"}
          , "northing" : 60980.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32100/date/20160922/time/131500/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T13:15:00", "inXSDDateTime" : {"_value" : "2016-09-22T13:15:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Crantock", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/crantock", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32100", "easting" : 178460.0, "lat" : 50.4068339291915, "long" : -5.11918706120216, "name" : {"_value" : "Sampling point at Crantock", "_lang" : "en"}
        , "northing" : 60980.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/TransitionalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32100:1", "name" : {"_value" : "Zone of influence at Crantock", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32200:1", "label" : [{"_value" : "Map bounds for Fistral", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32200", "bathingWaterDescription" : {"_value" : "Fistral Beach is on the north coast of Cornwall. It is a sandy beach resort, approximately 950 metres wide, backed by high cliffs.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Yellowsands pumping station, that discharges to the sea at the southern end of Fistral beach off Pentire Headland. There is also an emergency/storm overflow from the Towan Head pumping station, that discharges to the sea at Towan Head. \nThe operation of the overflows can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.\nStorm overflow event duration monitoring (EDM) was installed at the Towan Head, and Yellowsands pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32200/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Fistral", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32200-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Fistral", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0350", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32200:1", "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 850m north of Fistral bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Fistral for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 36% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32200_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Fistral is approximately 82 hectares. There are no streams which enter the sea at this bathing water. Surface water within this small catchment drains directly to the beach as runoff on the northwest facing slopes. The River Gannel is approximately two kilometres (km) to the southwest beyond Pentire Headland. Land use is mostly urban from the town of Newquay. The main area of grassland is a golf course directly behind the beach.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32200/date/20160922/time/135900/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T13:59:00", "inXSDDateTime" : {"_value" : "2016-09-22T13:59:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Fistral", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/fistral", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32200", "easting" : 179980.0, "lat" : 50.4177321832166, "long" : -5.09850302983969, "name" : {"_value" : "Sampling point at Fistral", "_lang" : "en"}
        , "northing" : 62130.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32200:1", "name" : {"_value" : "Zone of influence at Fistral", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32300", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32300:1", "label" : [{"_value" : "Map bounds for Towan", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32300", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32300/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32300/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32300", "bathingWaterDescription" : {"_value" : "Towan is in Newquay Bay on the north coast of Cornwall. It is a shingle beach resort approximately 300 metres wide backed by cliffs and the town of Newquay.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Fly Cellars pumping station, that discharges to the sea 300m northwest of the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.\nStorm overflow event duration monitoring (EDM) was installed at the Fly Cellars pumping station by May 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32300/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32300/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Towan", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32300-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Towan", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to occasional discharges from a storm overflow. Seagull faeces can also affect the water quality.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0351", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32300:1", "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 1.3km northwest of Towan bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Towan for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 30% of visits. Tarry residue was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32300_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Towan is approximately 60 hectares. There are no streams at this bathing water. Surface water within this small catchment drains directly to the beach as runoff on the northeast facing slopes. Land use is urban.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32300/date/20160922/time/143500/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T14:35:00", "inXSDDateTime" : {"_value" : "2016-09-22T14:35:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Towan", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/towan", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32300", "easting" : 180977.0, "lat" : 50.4182930793456, "long" : -5.08417872138159, "name" : {"_value" : "Sampling point at Towan", "_lang" : "en"}
        , "northing" : 61791.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/shingle-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32300:1", "name" : {"_value" : "Zone of influence at Towan", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32310", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32310:1", "label" : [{"_value" : "Map bounds for Great Western", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32310", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32310/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32310/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32310", "bathingWaterDescription" : {"_value" : "Great Western is in Newquay Bay on the north coast of Cornwall. It is a sandy beach resort approximately 250 metres wide backed by cliffs and the town of Newquay.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32310/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32310/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Great Western", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32310-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Great Western", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0352", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32310:1", "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 1.8km northwest of Great Western bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Great Western for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 2% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 35% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32310_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Great Western is approximately 2.6 hectares. There are no streams at this bathing water. Surface water within this small catchment drains directly to the beach as runoff. Land use is urban.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32310/date/20160922/time/144500/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T14:45:00", "inXSDDateTime" : {"_value" : "2016-09-22T14:45:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Great Western", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/great-western", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32310", "easting" : 181530.0, "lat" : 50.415976061967, "long" : -5.07656644368544, "name" : {"_value" : "Sampling point at Great Western", "_lang" : "en"}
        , "northing" : 61870.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : false, "yearDesignated" : "http://reference.data.gov.uk/id/year/1996", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32310:1", "name" : {"_value" : "Zone of influence at Great Western", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32320", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32320:1", "label" : [{"_value" : "Map bounds for Tolcarne", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32320", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32320/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32320/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32320", "bathingWaterDescription" : {"_value" : "Tolcarne is in Newquay Bay on the north coast of Cornwall. It is a sandy beach resort approximately 250 metres wide backed by cliffs and the town of Newquay.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32320/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32320/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Tolcarne", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32320-2017", "localAuthorityStatement" : {"_value" : "The urban area of Newquay immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Tolcarne", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0353", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32320:1", "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 1.9km northwest of Great Western bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Tolcarne for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 39% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32320_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Tolcarne is approximately five and a half hectares. There are no streams which enter the sea at this bathing water. Surface water within this small catchment drains directly to the beach as runoff on the northwest facing slope. Land use is urban being on the edge of Newquay.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32320/date/20160922/time/145500/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T14:55:00", "inXSDDateTime" : {"_value" : "2016-09-22T14:55:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Tolcarne", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/tolcarne", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32320", "easting" : 181760.0, "lat" : 50.4176780168458, "long" : -5.07343859800726, "name" : {"_value" : "Sampling point at Tolcarne", "_lang" : "en"}
        , "northing" : 62050.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : false, "yearDesignated" : "http://reference.data.gov.uk/id/year/1996", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32320:1", "name" : {"_value" : "Zone of influence at Tolcarne", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32330", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32330:1", "label" : [{"_value" : "Map bounds for Lusty Glaze", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32330", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32330/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32330/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32330", "bathingWaterDescription" : {"_value" : "Lusty Glaze is a privately owned beached in Newquay Bay on the north coast of Cornwall. It is a sandy beach resort approximately 220 metres wide backed by cliffs and the town of Newquay.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "This bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32330/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32330/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Lusty Glaze", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32330-2017", "localAuthorityStatement" : {"_value" : "The urban area of Newquay immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Lusty Glaze", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Porth Stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0354", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32330:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Porth Stream flows the sea 350m northeast of this beach. The Environment Agency have monitored the stream since 1990 and found that it does not affect the bathing water.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 2.4km northwest of Lusty Glaze bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Lusty Glaze for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 38% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32330_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Lusty Glaze is approximately 3,680 hectares. There is no stream which enters the sea at this bathing water, however, the mouth of the Porth Stream is 350 metres (m) to the northeast. The Porth (Whipsiderry) Stream is approximately 12 kilometres (km) (18km long including major tributaries) and rises near Ruthvoes at the eastern edge of the catchment close to the A30. The stream feeds the Porth Reservoir eight kilometres inland then flows to the coast at Porth where it enters the sea at the northern end of the beach. \nThe steep catchment means rain runs off rapidly into the stream especially towards the coast. Land use is mostly agricultural, with around 20 farms. The rural areas are a patchwork of improved grassland, arable and mixed woodland. The urban areas include parts of Newquay, St Columb Major and Indian Queens and there are caravan sites within the catchment.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32330/date/20160922/time/150900/recordDate/20160922", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-22T15:09:00", "inXSDDateTime" : {"_value" : "2016-09-22T15:09:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Lusty Glaze", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/lusty-glaze", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32330", "easting" : 182380.0, "lat" : 50.4217696277222, "long" : -5.06497385525916, "name" : {"_value" : "Sampling point at Lusty Glaze", "_lang" : "en"}
        , "northing" : 62480.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1996", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32330:1", "name" : {"_value" : "Zone of influence at Lusty Glaze", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32340", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32340:1", "label" : [{"_value" : "Map bounds for Porth", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32340", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32340/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/3", "name" : {"_value" : "Sufficient", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32340/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32340", "bathingWaterDescription" : {"_value" : "Porth Beach is on the north coast of Cornwall. It is a rural sandy beach, approximately 230 metres wide, surrounded by cliffs with a stream flowing the across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Porth pumping station, that discharges to the Porth Stream 100m from the beach. The operation of the overflow can lead to a temporary drop in water quality in the Porth Stream and Porth bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time. Storm overflow event duration monitoring (EDM) was installed at the Porth pumping station by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32340/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The Environment Agency have used a DNA tracing technique to help us identify whether sources of faecal pollution are human or animal. This has indicated a mixture of human and animal faeces in the catchment. The reduced salinities of bathing water samples and salinity surveys demonstrate a strong freshwater influence from the Porth Stream on the bathing water sample point. Reduced water quality at the bathing water sampling point can occur during heavy rain and certain states of the tide. The Environment Agency have completed catchment walkovers and used continuous water quality monitors to identify sources of pollution to the Porth Stream catchment. The use of continuous water quality monitors will be ongoing during the 2017 bathing season.\nEnvironment Agency and South West Water misconnection investigations are ongoing within Porth. No issues have been identified so far.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32340/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porth", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32340-2017", "localAuthorityStatement" : {"_value" : "The Environment Agency have regularly inspected and sampled surface water outfalls and are working with the local authority to reduce the impact of drainage from urban areas.\nAfter discussions with the Environment Agency, Cornwall Council agreed that all gully pot clearing would occur outside of the bathing season to minimise the risk of pollution to the bathing water at Porth.\nIn partnership with the Environment Agency, Surfer's Against Sewage have launched their Cleaner Coastal Catchments initiative in this catchment. The initiative focuses on community engagement and encouraging the public to pledge to take a number of actions that will contribute to improving water quality at Porth. Further information can be found at http://www.cleanercoastalcatchments.org.uk/ .", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porth", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms, however, the Porth Reservoir upstream of the bathing water does have a history of algal blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n18 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Porth bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 18 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Porth bathing water quality is influenced by the Porth stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0355", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32340:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Porth Stream flows across this beach. The Environment Agency have monitored the stream since 1990 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 2.9km west of Porth bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porth for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 52% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32340_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 20 farms in the catchment, including sheep, cattle and arable. During and after periods of heavy rainfall, runoff to the Porth Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced. The Environment Agency are working with the farming community to reduce the runoff in areas of greatest risk.\nIn 2015,the Environment Agency funded fencing materials for two farms in the lower catchment to prevent cattle access to streams. Catchment Sensitive Farming are also working in catchment to provide advice and guidance on available grants.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are two private sewage treatment works with discharge consents to the Whipsiderry Stream tributary of the Porth Stream. There are also a number of minor private sewage treatment systems with discharge consents serving holiday parks and private dwellings throughout the catchment. The Environment Agency are working with the owners to protect water quality and continue to monitor compliance with consent conditions.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porth is approximately 3,650 hectares. The Porth Stream is approximately 12 kilometres (km) (24 km long including major tributaries) and rises near Ruthvoes in the east of the catchment close to the A30. The stream feeds the Porth Reservoir eight kilometres inland then flows to the coast at Porth where it enters the sea at the northern end of the beach. \nThe steep catchment means rain runs off rapidly into the stream especially towards the coast. Land use is mostly agricultural, with around 20 farms. The rural areas are a patchwork of improved grassland, arable and mixed woodland. The urban areas include parts of Newquay, St Columb Major and Indian Queens and there are caravan sites within the catchment.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/32340/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0114", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32340", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32340", "easting" : 182960.0, "lat" : 50.4246784173834, "long" : -5.05699471231187, "name" : {"_value" : "Sampling point at Porth", "_lang" : "en"}
          , "northing" : 62780.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32340/date/20160919/time/105500/recordDate/20161104", "escherichiaColiCount" : 45, "intestinalEnterococciCount" : 118, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T10:55:00", "inXSDDateTime" : {"_value" : "2016-09-19T10:55:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porth", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porth", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32340", "easting" : 182960.0, "lat" : 50.4246784173834, "long" : -5.05699471231187, "name" : {"_value" : "Sampling point at Porth", "_lang" : "en"}
        , "northing" : 62780.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1996", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32340:1", "name" : {"_value" : "Zone of influence at Porth", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32400:1", "label" : [{"_value" : "Map bounds for Watergate Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32400", "bathingWaterDescription" : {"_value" : "Watergate Bay is on the north coast of Cornwall. It is a rural sandy beach approximately one kilometre wide, backed by steep cliffs. There is a stream that disperses over the sand at the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Watergate pumping station, that discharges to the Watergate Stream 150m from the beach. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for Newquay, which provides secondary treatment and ultraviolet disinfection, was completed by South West Water in April 2000. Extensive sewerage work to combined sewer overflows in the Newquay area was also carried out at that time. Wastewater from Watergate is pumped to Newquay for treatment. Storm overflow event duration monitoring (EDM) was installed at the Watergate Bay pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32400/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out additional monitoring in the Watergate Stream alongside the Environment Agency routine bathing water monitoring. This work aims to pinpoint pollution problems and improve water quality at the bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Watergate Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32400-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Watergate Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Watergate stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0356", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Watergate Stream flows onto this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall for the Newquay STW discharges into the sea approximately 1.8km northwest of Great Western bathing water at Towan Head. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Watergate Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was assessed as being sufficient to be objectionable for 1% of visits, with 57% of visits noting the presence of litter. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32400_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are two farms in the catchment which are used for livestock. During and after periods of heavy rainfall, runoff to the Watergate Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Watergate Bay is approximately 330 hectares. The Watergate Stream is two kilometres long and flows onto the beach. The steep catchment means rain runs off rapidly into the stream. Land use is mostly agricultural, with two farms. The catchment contains part of the RAF St Mawgan complex, the hamlet of Tregurrian, and at least two caravan sites.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32400/date/20160919/time/112500/recordDate/20160919", "escherichiaColiCount" : 73, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T11:25:00", "inXSDDateTime" : {"_value" : "2016-09-19T11:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Watergate Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/watergate-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32400", "easting" : 184070.0, "lat" : 50.4437670324647, "long" : -5.04258913278166, "name" : {"_value" : "Sampling point at Watergate Bay", "_lang" : "en"}
        , "northing" : 64860.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32400:1", "name" : {"_value" : "Zone of influence at Watergate Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3106-32500:1", "label" : [{"_value" : "Map bounds for Mawgan Porth", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3106-32500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3106-32500", "bathingWaterDescription" : {"_value" : "Mawgan Porth is on the north coast of Cornwall. It is a rural, sandy beach, approximately 720 metres wide, backed by sand dunes and cliffs. The River Menalhyl flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Trenance Porth pumping station, that discharges to a tiny stream 230m north of the Environment Agency monitoring point. There is also an emergency/storm overflow from the Mawgan Porth pumping station, that discharges to the River Menalhyl 150m from the beach. The operation of the overflows can lead to a temporary drop in water quality in the receiving waters and at the bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The sewage treatment scheme for St Columb Major which provides secondary treatment and ultraviolet disinfection was completed by South West Water in July 1994. Improvements to the inlet works to improve flow handling, and to the storm discharges from the sewage treatment works were also completed at that time. Storm overflow event duration monitoring (EDM) was installed at the St Columb STW, St Mawgan, Trenance Porth, and Mawgan Porth pumping stations by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3106-32500/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The Environment Agency are using a DNA tracing technique to help us identify whether sources of faecal pollution are animal or human. This will help us target further investigations to pinpoint pollution problems and improve bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3106-32500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Mawgan Porth", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32500-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Mawgan Porth", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Menalhyl and Gluvian rivers, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0357", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32500:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Menalhyl and Gluvian rivers join at Mawgan Porth and flow across the south of the beach. The Environment Agency have monitored the river at the beach since 1986, and both rivers have been sampled upstream since 1992. The Environment Agency have found that water quality is temporarily worse after heavy rainfall. There is also a very small stream which flows onto the beach at the north.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "There is a STW outfall discharging into the River Menalhyl approximately six and a half kilometres upstream of the bathing water. This discharge is disinfected during the bathing season and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Mawgan Porth for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 59% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3106-32500_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are around 30 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the Menalhyl River from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Mawgan Porth is approximately 4,500 hectares. The River Menalhyl rises on the Borlasevath and Retallack Moor Site of Special Scientific Interest (SSSI) and flows for approximately 14 kilometres (km) before entering the sea at Mawgan Porth. The river consists of a main channel which rises to the east of St Columb Major, and the Gluvian tributary which drains the north of the catchment and joins the Menalhyl at Mawgan Porth. The steep catchment means rain runs off rapidly into the river.\nThe catchment is mostly agricultural, with around 30 farms. The rural areas are a patchwork of improved grassland, arable, mixed woodland and heath. The catchment includes the town of St Columb Major as well as St Mawgan and Mawgan Porth and part of RAF St Mawgan.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32500/date/20160919/time/120000/recordDate/20160919", "escherichiaColiCount" : 18, "intestinalEnterococciCount" : 18, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T12:00:00", "inXSDDateTime" : {"_value" : "2016-09-19T12:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Mawgan Porth", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/mawgan-porth", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32500", "easting" : 184830.0, "lat" : 50.4674853014895, "long" : -5.03340112417438, "name" : {"_value" : "Sampling point at Mawgan Porth", "_lang" : "en"}
        , "northing" : 67470.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3106-32500:1", "name" : {"_value" : "Zone of influence at Mawgan Porth", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32550", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-32550:1", "label" : [{"_value" : "Map bounds for Porthcothan", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-32550", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32550/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32550/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32550", "bathingWaterDescription" : {"_value" : "Porthcothan Bay is on the north coast of Cornwall. It is a rural, sheltered sandy bay, approximately 400 metres wide, backed by sand dunes. There is a stream that flows across the beach. Porthcothan is popular with tourists and surfers and is patrolled by lifeguards during the day in the summer.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32550/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Porthcothan Stream in 2010, and will make recommendations for further improvements to protect and improve the bathing water quality.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-32550/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Porthcothan", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32550-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Porthcothan", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Porthcothan stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0358", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32550:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Porthcothan Stream flows onto this beach. The Environment Agency have monitored the stream between 1993 and 2014, and found that water quality is temporarily worse after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Porthcothan for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 46% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-32550_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 20 farms in the catchment, most of which are used for livestock. During and after periods of heavy rainfall, runoff to the Porthcothan Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Porthcothan is approximately 1,500 hectares. The Porthcothan Stream is approximately seven kilometres (km) (13.5km long including tributaries) and rises close to Bear\u2019s Downs. The steep catchment means rain runs off rapidly into the stream.\nThe catchment is agricultural, with around 20 farms. The rural areas are a patchwork of improved grassland and arable. The catchment includes the settlements of St Eval and Porthcothan as well as several smaller villages and at least four caravan sites.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32550/date/20160919/time/124000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T12:40:00", "inXSDDateTime" : {"_value" : "2016-09-19T12:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Porthcothan", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/porthcothan", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32550", "easting" : 185720.0, "lat" : 50.5090318571474, "long" : -5.02351046811618, "name" : {"_value" : "Sampling point at Porthcothan", "_lang" : "en"}
        , "northing" : 72060.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1992", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-32550:1", "name" : {"_value" : "Zone of influence at Porthcothan", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-32600:1", "label" : [{"_value" : "Map bounds for Treyarnon Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-32600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32600", "bathingWaterDescription" : {"_value" : "Treyarnon Bay is on the north coast of Cornwall. It is a rural sheltered sandy bay approximately 200 metres wide, backed by sand dunes and cliffs. A stream flows across the beach towards the sea, spreading out over the sand at low tide. There are also rock pools to explore.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32600/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-32600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Treyarnon Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32600-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Treyarnon Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Treyarnon stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0359", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32600:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Treyarnon Stream flows onto this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Treyarnon Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 48% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-32600_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are five farms in the Treyarnon Bay catchment. During and after periods of heavy rainfall, runoff to the Treyarnon Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Treyarnon Bay is approximately 515 hectares. The Treyarnon Stream is approximately two and a half kilometres (km) long, with a 2.8km tributary joining at Trethias Farm, around 600m before the stream reaches the sea at Treyarnon Bay. This gently sloping catchment is rural, with five farms in a patchwork of improved grassland and arable land. The catchment includes some small villages and at least five caravan sites. It is partially within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32600/date/20160919/time/131000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T13:10:00", "inXSDDateTime" : {"_value" : "2016-09-19T13:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Treyarnon Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/treyarnon-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32600", "easting" : 185860.0, "lat" : 50.5261459739228, "long" : -5.02262948465841, "name" : {"_value" : "Sampling point at Treyarnon Bay", "_lang" : "en"}
        , "northing" : 73960.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-32600:1", "name" : {"_value" : "Zone of influence at Treyarnon Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-32700:1", "label" : [{"_value" : "Map bounds for Constantine Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-32700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32700", "bathingWaterDescription" : {"_value" : "Constantine Bay is on the north coast of Cornwall. It is a rural sandy beach, approximately 660 metres wide, backed by sand dunes and edge by rocky outcrops. There are several rock pools exposed at low tide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32700/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-32700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Constantine Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32700-2017", "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, although it can be noticeable at times.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Constantine Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by a small stream, and may reduce during or after periods of heavy rainfall due to run off from the small rural settlement of Constantine Bay.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0360", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32700:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There is a very small stream flowing onto this beach which can affect water quality after heavy rainfall.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Constantine Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 46% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-32700_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Constantine Bay is approximately 250 hectares. The stream that enters the sea at the beach is approximately two and a half kilometres (km) long. It flows through the small rural settlement of Constantine Bay before disappearing into the sand at the beach. This is not a very steep catchment and there is an area of flat dunes behind the bay which includes a golf course. This area and much of the lower part of the catchment is designated as Trevose Head and Constantine Bay Site of Special Scientific Interest (SSSI). The catchment is within the Cornwall Area of Outstanding Natural Beauty (AONB).\nLand use is split between improved grassland and arable, and also includes the urban areas of Constantine Bay and St Merryn.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32700/date/20160919/time/134000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T13:40:00", "inXSDDateTime" : {"_value" : "2016-09-19T13:40:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Constantine Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/constantine-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32700", "easting" : 185890.0, "lat" : 50.533251504212, "long" : -5.02266055940275, "name" : {"_value" : "Sampling point at Constantine Bay", "_lang" : "en"}
        , "northing" : 74750.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-32700:1", "name" : {"_value" : "Zone of influence at Constantine Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32800", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-32800:1", "label" : [{"_value" : "Map bounds for Mother Ivey`s Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-32800", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32800/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32800/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32800", "bathingWaterDescription" : {"_value" : "Mother Ivey's Bay is on the north coast of Cornwall. It is a rural sandy beach, approximately 480 metres wide, backed by cliffs. Access to the beach is via the coast path.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is a storm overflow from St Merryn that discharges to the sea approximately 450m to the east of this bathing water. The operation of the overflow can lead to a temporary drop in bathing water quality.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme known as the Trevone Scheme collects sewage from the various settlements around the Camel Estuary. It is split into two schemes centred on the Porthilly sewage treatment works (STW) (East Bank Scheme), and a works at Trecerus near Padstow (West Bank Scheme). \nTrecerus STW was completed for the 1997 bathing season with chemically assisted sedimentation and ultraviolet (UV) disinfection for sewage from St Merryn, Trevone and Padstow. Improvements were also made to the sewerage in Padstow, St Merryn, Harlyn and Trevone at that time. The treatment was subsequently upgraded to full secondary treatment and UV disinfection by April 2004.\nStorm overflow event duration monitoring (EDM) was installed at St Merryn by October 2012.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32800/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-32800/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Mother Ivey`s Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32800-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Mother Ivey`s Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by a tiny stream, and may reduce during or after periods of heavy rainfall due to occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0361", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32800:1", "streamsRiversStatement" : {"_value" : "There is a tiny stream 150m long which enters the sea at eastern edge of the bathing water. The Harlyn Stream enters the sea approximately one and a half kilometres to the east of Mother Ivey's Bay and could potentially affect water quality at this bathing water.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Trecerus STW discharges to the sea approximately 450m to the east of this bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Mother Ivey`s Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 22% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-32800_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Mother Ivey`s Bay is approximately 30 hectares. There is a tiny stream 150m long which enters the sea at eastern edge of the beach. Most of the surface water within this small catchment drains directly to the beach as runoff. Land use is rural with one farm and one caravan site. The catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32800/date/20160919/time/140000/recordDate/20160919", "escherichiaColiCount" : 27, "intestinalEnterococciCount" : 18, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T14:00:00", "inXSDDateTime" : {"_value" : "2016-09-19T14:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Mother Ivey`s Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/mother-iveys-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32800", "easting" : 186450.0, "lat" : 50.5441430460904, "long" : -5.01545210516686, "name" : {"_value" : "Sampling point at Mother Ivey`s Bay", "_lang" : "en"}
        , "northing" : 75940.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-32800:1", "name" : {"_value" : "Zone of influence at Mother Ivey`s Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32900", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-32900:1", "label" : [{"_value" : "Map bounds for Harlyn Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-32900", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/32900/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32900/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-32900", "bathingWaterDescription" : {"_value" : "Harlyn Bay is on the north coast of Cornwall. It is a large fairly remote sandy beach, approximately 770 metres wide, backed by sand dunes and cliffs. The Harlyn Stream flows across the beach. Harlyn Bay is a very popular family and surfing beach and is suitable for novice surfers.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Harlyn Bay pumping station, that discharges to the Harlyn Stream 70m upstream of Harlyn Bay bridge. The operation of the overflow can lead to a temporary drop in water quality in the Harlyn Stream and Harlyn Bay bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme known as the Trevone Scheme collects sewage from the various settlements around the Camel Estuary. It is split into two schemes centred on the Porthilly sewage treatment works (STW) (East Bank Scheme), and a works at Trecerus near Padstow (West Bank Scheme). \nTrecerus STW was completed for the 1997 bathing season with chemically assisted sedimentation and ultraviolet (UV) disinfection for sewage from St Merryn, Trevone and Padstow. Improvements were also made to the sewerage in Padstow, St Merryn, Harlyn and Trevone at that time. The treatment was subsequently upgraded to full secondary treatment and UV disinfection by April 2004.\nStorm overflow event duration monitoring (EDM) was installed at the Harlyn Bay pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-32900/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-32900/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Harlyn Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-32900-2017", "localAuthorityStatement" : {"_value" : "The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Harlyn Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Harlyn stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0362", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-32900:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Harlyn Stream flows onto this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Trecerus STW discharges to the sea approximately 1.3km to the northwest of this bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Harlyn Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 57% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-32900_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are approximately 15 farms in the catchment, most of which are arable or used for livestock. During and after periods of heavy rainfall, runoff to the Harlyn Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Harlyn Bay is approximately 1,125 hectares. The Harlyn Stream is approximately six kilometres (km) (9.2km long including tributaries) and flows from south to north through farmland before reaching the beach. \nThe catchment is gently sloping and rural, with around 15 farms in a patchwork of improved grassland and arable land. Nearby are the villages of St Merryn and Harlyn and at least two caravan sites. The catchment lies within part of the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/32900/date/20160919/time/143000/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T14:30:00", "inXSDDateTime" : {"_value" : "2016-09-19T14:30:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Harlyn Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/harlyn-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/32900", "easting" : 187720.0, "lat" : 50.5402949099934, "long" : -4.99727977974794, "name" : {"_value" : "Sampling point at Harlyn Bay", "_lang" : "en"}
        , "northing" : 75460.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-32900:1", "name" : {"_value" : "Zone of influence at Harlyn Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33000", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33000:1", "label" : [{"_value" : "Map bounds for Trevone Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33000", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33000/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33000/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33000", "bathingWaterDescription" : {"_value" : "Trevone Bay is on the north coast of Cornwall. It is a fairly remote sandy beach, approximately 170 metres wide, in a sheltered cove. There is a stream which flows across the beach to the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Trevone pumping station, that discharges to the sea 450m from the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme known as the Trevone Scheme collects sewage from the various settlements around the Camel Estuary. It is split into two schemes centred on the Porthilly sewage treatment works (STW) (East Bank Scheme), and a works at Trecerus near Padstow (West Bank Scheme). \nTrecerus STW was completed for the 1997 bathing season with chemically assisted sedimentation and ultraviolet (UV) disinfection for sewage from St Merryn, Trevone and Padstow. Improvements were also made to the sewerage in Padstow, St Merryn, Harlyn and Trevone at that time. The treatment was subsequently upgraded to full secondary treatment and UV disinfection by April 2004.\nStorm overflow event duration monitoring (EDM) was installed at the Trevone pumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33000/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33000/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Trevone Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33000-2017", "localAuthorityStatement" : {"_value" : "The urban area of Trevone immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system on the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Trevone Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Trevone Bay bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Trevone stream, and may reduce during or after periods of heavy rainfall due to run off from the surrounding urban area, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0363", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33000:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Trevone Stream flows across this beach. The Environment Agency have monitored the stream since 1986 and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the Trecerus STW discharges to the sea approximately 2.3km to the west of this bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Trevone Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 41% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33000_1-webres.jpg", "zoiDescription" : {"_value" : "The catchment surrounding Trevone Bay is approximately 340 hectares. The Trevone Stream is approximately 2.2 kilometres (km) (3.2km long including tributaries) and flows through farmland and the village of Trevone before entering the sea at the beach. This is a relatively gently sloping catchment with no steep valleys or headwaters. \nLand use is mostly agricultural, with just two or three farms, arable land and some improved grassland. The urban areas are the village of Trevone and a small industrial estate at the top of the catchment. The Trevone Bay Site of Special Scientific Interest (SSSI) is on the coast, and the catchment is in the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/33000/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0115", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33000", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33000", "easting" : 189150.0, "lat" : 50.5457518185687, "long" : -4.97743858812327, "name" : {"_value" : "Sampling point at Trevone Bay", "_lang" : "en"}
          , "northing" : 76010.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33000/date/20160919/time/145500/recordDate/20160919", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-19T14:55:00", "inXSDDateTime" : {"_value" : "2016-09-19T14:55:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Trevone Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/trevone-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33000", "easting" : 189150.0, "lat" : 50.5457518185687, "long" : -4.97743858812327, "name" : {"_value" : "Sampling point at Trevone Bay", "_lang" : "en"}
        , "northing" : 76010.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33000:1", "name" : {"_value" : "Zone of influence at Trevone Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33200", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33200:1", "label" : [{"_value" : "Map bounds for Daymer Bay", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33200", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33200/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33200/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33200", "bathingWaterDescription" : {"_value" : "Daymer Bay is at the mouth of the River Camel opposite the town of Padstow on the north coast of Cornwall. This is a sandy beach resort, approximately 2.4 kilometres wide, backed by dunes. There is a stream which flows across the southern end of the beach and rock pools are exposed at low tide.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme known as the Trevone Scheme collects sewage from the various settlements around the Camel Estuary. It is split into two schemes centred on the Porthilly sewage treatment works (STW) (East Bank Scheme), and a works at Trecerus near Padstow (West Bank Scheme). \nPorthilly STW received ultraviolet (UV) disinfection in 1996 for sewage from Rock, Polzeath, and Tredrizzick, and improvements were made to the sewerage in Rock and Polzeath. Trecerus STW was completed for the 1997 bathing season with chemically assisted sedimentation and UV disinfection for sewage from St Merryn, Trevone and Padstow. Improvements were also made to the sewerage in Padstow, St Merryn, Harlyn and Trevone at that time. The treatment was subsequently upgraded to full secondary treatment and UV disinfection by April 2004.\nImprovements to seven storm overflows to the Camel Estuary at Padstow Harbour, Rock pumping station (PS), Eddystone Road (Wadebridge PS), and Porthilly combined sewer overflow (CSO) were also completed by April 2004, and improvements to Padstow South Quay CSO, Moyles Road and Egloshayle PS were completed by August 2004. The installation of UV disinfection at Wadebridge STW was completed by July 2004.\nStorm overflow event duration monitoring (EDM) was installed at Moyles Road, Padstow Foreshore and at the Rock, Porthilly Cove, Padstow Harbour pumping stations by December 2011. EDM is scheduled to be installed at the Porthilly CSO by April 2019.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33200/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The Environment Agency are using a DNA tracing technique to help us identify whether sources of faecal pollution are animal or human with surveys carried out in wet and dry weather conditions. \nThe Environment Agency have also walked up the catchment to identify potential sources of pollution in the Camel Estuary including misconnections, poorly maintained private sewerage systems, leaking sewers and unsuitable farming practices.\nInvestigations have shown that Daymer Bay is generally very clean but can occasionally be affected by poorly maintained septic tank discharges in the catchment.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33200/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Daymer Bay", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33200-2017", "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality, particularly after periods of rainfall.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Daymer Bay", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Camel Estuary and the Daymer stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0364", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33200:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. This bathing water is in the River Camel Estuary where water quality is temporarily worse during and after heavy rainfall, and especially at low tide.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The village of Trebetherick is unsewered. The sewage from Polzeath is pumped to Pothilly STW for treatment. The outfall from the Porthilly STW discharges to the River Camel Estuary approximately three kilometres from the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Daymer Bay for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 32% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33200_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the immediate bathing water catchment, most of which are dairy and arable. During and after periods of heavy rainfall, runoff to the Camel Estuary from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithIndustryStatement" : {"_value" : "The Environment Agency are working with businesses on the small industrial estate at Wadebridge to ensure there is no affect on the bathing water quality from this site.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks, hotels and homes that are not on the main sewerage system and have private sewage treatment arrangements. In 2012 the Environment Agency carried out a leaflet drop to inform local residents of the potential impact of septic tank discharges on bathing water quality.  Since then no issues have been detected.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Daymer Bay is approximately 39,700 hectares. The Daymer Stream is approximately two and a half kilometres long and flows through farmland north of Rock before entering the estuary at the beach 300m south of the Environment Agency monitoring point.\nThe bathing water is in the Camel Estuary and is influenced by the whole Camel Estuary system. The River Camel rises at 280m on Hendraburnick Down on Bodmin Moor, and drains the area between Bodmin Moor and Padstow including a diverse range of farming landscapes. It flows for approximately 40km over steep terrain before joining the estuary near Wadebridge. The estuary then meets the sea near Padstow. \nThe Camel Valley and its major tributaries the rivers Allen, Ruthern and De Lank are currently designated as a Site of Special Scientific Interest (SSSI). They have also been attributed Special Area of Conservation (SAC) status under the European Union Habitats Directive, due to the presence of otters and bullheads. Further designations include Area of Outstanding Natural Beauty (AONB) status for the Camel Estuary and Area of Great Landscape Value (AGLV) status for the Camel and Allen valleys. \nHistorically, mining and quarrying were important industries with slate quarrying still occurring at Delabole, towards the top of the River Allen. The upper and middle reaches of the Camel are essentially moorland, passing into woodland. Most of the undulating land is used for livestock farming, with mixed farming/rough grazing on the poorer land. The catchment includes the larger settlements of Bodmin, Wadebridge, Padstow and Camelford.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33200/date/20160923/time/100000/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T10:00:00", "inXSDDateTime" : {"_value" : "2016-09-23T10:00:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Daymer Bay", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/daymer-bay", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33200", "easting" : 192830.0, "lat" : 50.5613477998629, "long" : -4.92645433304806, "name" : {"_value" : "Sampling point at Daymer Bay", "_lang" : "en"}
        , "northing" : 77600.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/TransitionalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33200:1", "name" : {"_value" : "Zone of influence at Daymer Bay", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33300", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33300:1", "label" : [{"_value" : "Map bounds for Polzeath", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33300", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33300/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33300/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33300", "bathingWaterDescription" : {"_value" : "Polzeath Beach is just north of the Camel Estuary on the north coast of Cornwall. It is a sandy beach resort, approximately 640 metres wide, with a stream flowing across it. The beach is backed by cliffs and there are plenty of rock pools.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Polzeath pumping station, that discharges to the Polzeath Brook 250m from the Environment Agency monitoring point. There is also an emergency/storm overflow from the New Polzeath pumping station, that discharges to the sea 500m from the Environment Agency monitoring point. \nThe operation of the overflows can lead to a temporary drop in water quality in the Polzeath Brook and Polzeath bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme known as the Trevone Scheme collects sewage from the various settlements around the Camel Estuary. It is split into two schemes centred on the Porthilly sewage treatment works (STW) (East Bank Scheme), and a works at Trecerus near Padstow (West Bank Scheme). \nPorthilly STW received ultraviolet (UV) disinfection in 1996 for sewage from Rock, Polzeath, and Tredrizzick, and improvements were made to the sewerage in Rock and Polzeath. Trecerus STW was completed for the 1997 bathing season with chemically assisted sedimentation and UV disinfection for sewage from St Merryn, Trevone and Padstow. Improvements were also made to the sewerage in Padstow, St Merryn, Harlyn and Trevone at that time. The treatment was subsequently upgraded to full secondary treatment and UV disinfection by April 2004.\nImprovements to seven storm overflows to the Camel Estuary at Padstow Harbour, Rock pumping station (PS), Eddystone Road (Wadebridge PS), and Porthilly combined sewer overflow (CSO) were also completed by April 2004, and improvements to Padstow South Quay CSO, Moyles Road and Egloshayle PS were completed by August 2004. The installation of UV disinfection at Wadebridge STW was completed by July 2004.\nStorm overflow event duration monitoring (EDM) was installed at Moyles Road, Padstow Foreshore and at the Rock, Porthilly Cove, Padstow Harbour, Tredrizzick, Rosebarrow Farm, Polzeath, and New Polzeath pumping stations by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33300/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency will carry out additional monitoring in the Polzeath Brook in 2016, and will make recommendations for further improvements to protect and improve the bathing water quality.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33300/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Polzeath", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33300-2017", "localAuthorityStatement" : {"_value" : "The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Polzeath", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n4 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Polzeath bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 4 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Polzeath Brook and the Trenant stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from two storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0365", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33300:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Polzeath Brook and Trenant Stream both flow across this beach. The Environment Agency have monitored the Polzeath Stream since 1989 and found that it can affect water quality after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "Sewage from Polzeath is pumped to Porthilly STW for treatment. The outfall from the Porthilly STW discharges to the River Camel Estuary approximately 5.2km from the bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Polzeath for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 44% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33300_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the immediate bathing water catchment, most of which are dairy and arable. During and after periods of heavy rainfall, runoff to the Polzeath Brook and Trenant Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Polzeath is approximately 40,900 hectares and includes the Camel Estuary. Polzeath bathing water is influenced by the Camel Estuary system, the Polzeath Brook, and the Trenant Stream. The Polzeath Brook is approximately four and a half kilometres (km) long and flows from the village of St Minver through farmland and a caravan site at Polzeath village before flowing across the beach. The Trenant Stream is 900m long and joins the Polzeath Brook 60m upstream of the beach. There is also a small stream one and a half kilometres long, which flows from the settlement of Pentireglaze to the northern end of Polzeath beach. The steep catchment means rain runs off rapidly into the streams.\nThe River Camel rises at 280m on Hendraburnick Down on Bodmin Moor, and drains the area between Bodmin Moor and Padstow including a diverse range of farming landscapes. It flows for approximately 40km over steep terrain before joining the estuary near Wadebridge. The estuary then meets the sea near Padstow. \nThe Camel Valley and its major tributaries the rivers Allen, Ruthern and De Lank are currently designated as a Site of Special Scientific Interest (SSSI). They have also been attributed Special Area of Conservation (SAC) status under the European Union Habitats Directive, due to the presence of otters and bullheads. Further designations include Area of Outstanding Natural Beauty (AONB) status for the Camel Estuary and Area of Great Landscape Value (AGLV) status for the Camel and Allen valleys. \nHistorically, mining and quarrying were important industries with slate quarrying still occurring at Delabole, towards the top of the River Allen. The upper and middle reaches of the Camel are essentially moorland, passing into woodland. Most of the undulating land is used for livestock farming, with mixed farming/rough grazing on the poorer land. The catchment includes the larger settlements of Bodmin, Wadebridge, Padstow and Camelford.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/33300/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0116", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33300", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33300", "easting" : 193600.0, "lat" : 50.5748227877177, "long" : -4.91641319696109, "name" : {"_value" : "Sampling point at Polzeath", "_lang" : "en"}
          , "northing" : 79070.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33300/date/20160923/time/102200/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T10:22:00", "inXSDDateTime" : {"_value" : "2016-09-23T10:22:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Polzeath", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/polzeath", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33300", "easting" : 193600.0, "lat" : 50.5748227877177, "long" : -4.91641319696109, "name" : {"_value" : "Sampling point at Polzeath", "_lang" : "en"}
        , "northing" : 79070.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/TransitionalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33300:1", "name" : {"_value" : "Zone of influence at Polzeath", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33350", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33350:1", "label" : [{"_value" : "Map bounds for Trebarwith Strand", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33350", "latestActiveSuspension" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/suspension/point/33350/date/20170406/time/161800/recordDateTime/20170412093747", "description" : {"_value" : "sewage", "_lang" : "en"}
        , "expectedEndOfSuspension" : {"_value" : "2017-07-12", "_datatype" : "date"}
        , "label" : [{"_value" : "33350-06042017-161800 - Trebarwith Strand", "_lang" : "en"}
        ], "startOfSuspension" : {"_value" : "2017-04-06T16:18:00", "_datatype" : "dateTime"}
      }
      , "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33350/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestOpenIncident" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/pollution-incident/01451937-06042017-161800/recordDateTime/20170412093747", "expectedEndOfIncident" : {"_value" : "2017-07-12", "_datatype" : "date"}
        , "incidentNotation" : "01451937-06042017-161800", "incidentType" : {"_about" : "http://environment.data.gov.uk/def/incident-type/010", "label" : [{"_value" : "sewage", "_lang" : "en"}
          ]}
        , "nirsRef" : "01451937", "som_recordDateTime" : {"_value" : "2017-04-12T09:37:47", "_datatype" : "dateTime"}
        , "startOfIncident" : {"_value" : "2017-04-06T16:18:00", "_datatype" : "dateTime"}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33350/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33350", "bathingWaterDescription" : {"_value" : "Trebarwith Strand is on the north coast of Cornwall. It is a fairly remote, sandy bay, approximately 800 metres wide, sheltered by high rocky cliffs with many caves and rock pools. There is a stream that flows across the beach into the sea.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Trebarwith Road pumping station, that discharges to the Trebarwith Stream 70m from the Environment Agency monitoring point. The operation of the overflow can lead to a temporary drop in water quality in the Trebarwith Stream and Trebarwith Strand bathing water.", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for Treknow, which provides secondary treatment and UV disinfection, was completed in early 2007. Improvements to the storm overflow from Treknow sewage treatment works (STW) were also completed at that time.\nStorm overflow event duration monitoring (EDM) was installed at Treknow STW by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33350/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "Environment Agency investigations have shown that the impact on the Trebarwith Stream and  the bathing water from Treknow sewage treatment works has been largely resolved by the addition of ultraviolet (UV) disinfection of the effluent. However, during periods of heavy rainfall the stream can still be contaminated.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33350/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Trebarwith Strand", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33350-2017", "localAuthorityStatement" : {"_value" : "There are no outfalls on the beach.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but rocks, platforms or other fixed objects may develop a covering of seaweed which can be slippery.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Trebarwith Strand", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 15, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Trebarwith stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0366", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33350:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Trebarwith Stream flows across this beach. The Environment Agency have monitored the stream since 1990 and found that water quality is temporarily worse after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Treknow STW discharges to the Trebarwith Stream approximately 600m upstream of this bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Trebarwith Strand for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 18% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33350_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are five farms in the catchment, which are mostly dairy and beef. During and after periods of heavy rainfall, runoff to the Trebarwith Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Trebarwith Strand is approximately 650 hectares. The Trebarwith Stream is approximately 4.3 kilometres (km) (seven kilometres long including tributaries). It flows from west to east through farmland, quarry land, and a steep wooded valley before entering the sea at Trebarwith Strand. The steep catchment means rain runs off rapidly into the stream. The coastal cliffs are about 100m high and are some of the tallest in Cornwall. \nLand use is agricultural, with five farms. The agricultural land is mostly improved grassland with some smaller arable areas. Mixed woodland areas can be found mostly in the valleys. The coastal section is designated as both a Site of Special Scientific Interest (SSSI) and Special Area of Conservation (SAC). The catchment is within the Cornwall Area of Outstanding Natural Beauty (AONB).", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33350/date/20160923/time/113500/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T11:35:00", "inXSDDateTime" : {"_value" : "2016-09-23T11:35:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Trebarwith Strand", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/trebarwith-strand", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33350", "easting" : 204850.0, "lat" : 50.6449814824378, "long" : -4.76160973193857, "name" : {"_value" : "Sampling point at Trebarwith Strand", "_lang" : "en"}
        , "northing" : 86450.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/2002", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33350:1", "name" : {"_value" : "Zone of influence at Trebarwith Strand", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33360", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33360:1", "label" : [{"_value" : "Map bounds for Crackington Haven", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33360", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33360/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33360/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33360", "bathingWaterDescription" : {"_value" : "Crackington Haven is on the north coast of Cornwall. It is a remote, sheltered bay of mainly shingle, sand and pebble, approximately 140 metres wide and surrounded by high cliffs. The Crackington Stream flows onto the beach.", "_lang" : "en"}
        , "controllerName" : "St. Gennys", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "The South West Water sewage treatment scheme for St Gennys, which provides secondary treatment and ultraviolet (UV) disinfection, was completed in early 2007. Improvements to the storm discharge from the sewage treatment works (STW) were also carried out at that time.\nStorm overflow event duration monitoring (EDM) was installed at St Gennys STW by December 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33360/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency carried out additional monitoring in the Crackington Stream in 2010, and made recommendations for further improvements to protect and improve the bathing water quality.\nInvestigations in 2010 identified a number of issues with small sewage treatment plants and septic tanks in Crackington Haven and several agricultural issues. Most of the issues found were resolved.\nData indicates that a recent deterioration in water quality is strongly related to wet weather. Environment Agency investigations in 2016 will include additional monitoring throughout the catchment in wet conditions. A DNA tracing technique will be used to identify whether sources of faecal pollution are animal or human in origin. This work will be followed up by \u2018walkovers\u2019 of contaminated stretches to pinpoint sources of bacteria.  Previously identified issues that were not resolved at the time will also be followed up to see if they are still impacting water quality in Crackington Stream and bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33360/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Crackington Haven", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33360-2017", "localAuthorityStatement" : {"_value" : "The urban area of Crackington immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach. The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can be noticeable from time to time.", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. An in depth investigation of the sewerage network close to the sea front showed misconnections are not a problem.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Crackington Haven", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n5 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Crackington Haven bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 5 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Crackington stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0367", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33360:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Crackington Stream flows onto this beach. The Environment Agency have monitored the stream between 1990 and 2014, and found that it can affect water quality after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from the St Gennys STW discharges to the Crackington Stream two kilometres upstream of Crackington Haven bathing water. This discharge is disinfected and designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Crackington Haven for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 34% of visits. Tarry residue was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33360_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are five farms in the catchment which are mostly used for livestock and maize. During and after periods of heavy rainfall, runoff to the Crackington Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced. The Environment Agency has worked with farmers in the catchment to reduce this impact.", "_lang" : "en"}
        , "workingWithIndustryStatement" : {"_value" : "The car park has been fitted with a sustainable urban drainage (SUDs) system which filters water before it enters the Crackington Stream.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There is a hotel and a cafe that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency has previously worked with septic tank owners in Crackington Haven to reduce bacterial inputs to the stream from these sources. At present, the Environment Agency do not believe these are a source of pollution to the bathing water. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Crackington Haven is approximately 1,520 hectares. The Crackington Stream and tributaries start approximately five kilometres inland and flow through a wooded valley. The streams meet in the village and enter the sea at the beach. The steep catchment means rain runs off rapidly into the stream.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/33360/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0117", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33360", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33360", "easting" : 214270.0, "lat" : 50.7419364618183, "long" : -4.633780918544, "name" : {"_value" : "Sampling point at Crackington Haven", "_lang" : "en"}
          , "northing" : 96900.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33360/date/20160923/time/121000/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T12:10:00", "inXSDDateTime" : {"_value" : "2016-09-23T12:10:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Crackington Haven", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/crackington-haven", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33360", "easting" : 214270.0, "lat" : 50.7419364618183, "long" : -4.633780918544, "name" : {"_value" : "Sampling point at Crackington Haven", "_lang" : "en"}
        , "northing" : 96900.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/2002", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33360:1", "name" : {"_value" : "Zone of influence at Crackington Haven", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33400", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33400:1", "label" : [{"_value" : "Map bounds for Widemouth Sand", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33400", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33400/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33400/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33400", "bathingWaterDescription" : {"_value" : "Widemouth Sand is on the north coast of Cornwall. It is a large sandy beach resort, approximately 560 metres wide, backed by low cliffs. There are rock pools and a small stream that flows onto the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an emergency/storm overflow from the Madeira Drive pumping station, that discharges 270m upstream of the beach to the small stream in the village of Widemouth Bay. The operation of the overflow can lead to a temporary drop in bathing water quality.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past sewage at Bude was discharged without treatment through a short outfall off Compass Point. The South West Water sewage treatment scheme for Bude, which provides primary treatment and a one kilometre long sea outfall, was completed in 1993. \nThe Bude sewage treatment works (STW) was upgraded with secondary treatment by the end of 2000. Improvements to the combined storm overflow (CSO) at Stratton pumping station were also completed at that time.\nStorm overflow event duration monitoring (EDM) was installed at the Madeira Drivepumping station by April 2011.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33400/2017:1/intervals/interval", "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33400/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Widemouth Sand", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33400-2017", "localAuthorityStatement" : {"_value" : "The car park at the beach has been fitted with a sustainable urban drainage (SUDs) system which filters water before it enters the Widemouth Stream.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "The bathing water can become covered with large amounts of seaweed, depending on tides and the weather. This bathing water does not have a history of large amounts of seaweed, but that it can occur in noticeable quantities from time to time.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Widemouth Sand", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 5, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signAlgaeStatement" : {"_value" : "This bathing water beach often has patches of seaweed (macroalgae) and the bathing water can be affected by occasional blooms of phytoplankton (microscopic algae) which are not harmful, but can result in the water appearing discoloured or as foam forming on the water.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Widemouth Sand stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0368", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33400:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. There is a very small stream flowing onto Widemouth Sand from Widemouth Bay village which can affect water quality after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Bude STW discharges into the sea off Compass Point approximately four kilometres north of Widemouth Sand bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Widemouth Sand for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 31% of visits. Tarry residue was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33400_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are two farms in the catchment which are used for livestock. During and after periods of heavy rainfall, runoff to the stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are several caravan parks, hotels, and a car park at the southern end of the beach, that are not on the main sewerage system and have private sewage treatment arrangements. The Environment Agency do not believe these are a source of pollution to the bathing water at present. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Widemouth Sand is approximately 370 hectares. There is an unnamed stream at the northern end of the beach, which is approximately two and a half kilometres long. Land use is entirely rural with two farms and a holiday village.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33400/date/20160923/time/124300/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T12:43:00", "inXSDDateTime" : {"_value" : "2016-09-23T12:43:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Widemouth Sand", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/widemouth-sand", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33400", "easting" : 219840.0, "lat" : 50.7931022337454, "long" : -4.55761549184591, "name" : {"_value" : "Sampling point at Widemouth Sand", "_lang" : "en"}
        , "northing" : 102400.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33400:1", "name" : {"_value" : "Zone of influence at Widemouth Sand", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33500", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33500:1", "label" : [{"_value" : "Map bounds for Bude Summerleaze", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33500", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33500/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33500/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33500", "bathingWaterDescription" : {"_value" : "Bude Summerleaze is on the north coast of Cornwall. It is a sandy beach resort, approximately 440 metres wide, backed with sand dunes. The River Neet flows across the beach to the sea. At low tide Summerleaze is connected to Crooklets Beach to the north, and rock pools are exposed.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "Within the Summerleaze bathing water catchment there are four emergency/storm overflows that discharge into the River Strat upstream of the bathing water. The operation of the overflows can lead to a temporary drop in water quality in the River Strat and at Summerleaze bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past sewage at Bude was discharged without treatment through a short outfall off Compass Point. The South West Water sewage treatment scheme for Bude, which provides primary treatment and a one kilometre long sea outfall, was completed in 1993. \nThe Bude sewage treatment works (STW) was upgraded with secondary treatment by the end of 2000. Improvements to the combined storm overflow (CSO) at Stratton pumping station were also completed at that time.\nStorm overflow event duration monitoring (EDM) was installed at The Strand, Nanny Moores, Summerleaze Car Park, and at the Stratton and Castle pumping stations by April 2011. EDM was installed at the Barn Orchard Cottages pumping station in March 2016.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33500/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out extensive additional catchment monitoring alongside the Environment Agency routine bathing water monitoring. The Environment Agency used a DNA tracing technique to help identify whether sources of faecal pollution are animal or human. Surveys were carried out in wet and dry weather conditions and have shown that Summerleaze can be affected by agricultural runoff in the upper Strat and Neet catchments after heavy rainfall.  In addition, there are a number of sewerage issues in Bude which contribute to bacterial contamination of the River Strat and the bathing water. In recent years the Environment Agency has worked extensively with South West Water to identify and rectify issues with bacterial contamination of the River Strat from degraded sewers in Bude.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33500/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Bude Summerleaze", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33500-2017", "localAuthorityStatement" : {"_value" : "The urban area of Bude immediately behind the beach is served by a combined (surface and sewer) system. There are no outfalls from the system onto the beach. The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections. An in depth investigation of the sewerage network close to the sea front using CCTV confirmed showed misconnections are not a problem.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Bude Summerleaze", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton increase in number at certain times of the year and this process is known as a phytoplankton bloom. These blooms can discolour the water or form as a foam on the water. Phytoplankton blooms were evident at this bathing water at times during 2009.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n7 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Bude Summerleaze bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 7 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bude Summerleaze bathing water quality is influenced by the River Strat, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from four storm overflows.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0369", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33500:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The River Strat enters the sea at this beach. The Environment Agency have monitored the river between 1986 and 2012, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Bude STW discharges into the sea off Compass Point approximately one and a half kilometres west of Summerleaze bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Bude Summerleaze for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 40% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33500_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the catchment, most of which are dairy, beef, and arable. During and after periods of heavy rainfall, runoff to the rivers Neet and Strat from agricultural land is greatly increased, and the quality of the bathing water can be reduced. Environment Agency officers and Natural England Catchment Sensitive Farming officers have worked extensively with farmers in the catchment to reduce this impact.", "_lang" : "en"}
        , "workingWithPrivateOwnersStatement" : {"_value" : "There are caravan parks and hotels that are not on the main sewerage system and have private sewage treatment arrangements. If any concerns arise, the Environment Agency will investigate and request immediate remedial action from those responsible.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Bude Summerleaze is approximately 8,870 hectares. It includes the rivers Neet and Strat which enter the sea at Summerleaze Beach. The River Neet is approximately 17 kilometres (km) long and is a tributary of the River Strat which is approximately 20km long. The two rivers meet below the village of Marhamchurch to the South of Bude. They enter the Bude Canal before rejoining the original channel over a wear upstream of the beach. The steep catchment means rain runs off rapidly into the rivers. The Flex Brook and tributaries start approximately two and a half kilometres inland and enter the sea approximately 500m to the north at Crooklets Beach. \nThe catchment is dominated by intensive agricultural production. The upper reaches of the Strat are mainly farmed by beef and sheep enterprises, and elsewhere all types of farming activities are carried out including dairy and arable. River bank damage by livestock is evident leading to concerns over water quality.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/33500/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0118", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33500", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33500", "easting" : 220380.0, "lat" : 50.8311807246575, "long" : -4.55202825641337, "name" : {"_value" : "Sampling point at Bude Summerleaze", "_lang" : "en"}
          , "northing" : 106620.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33500/date/20160923/time/130900/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T13:09:00", "inXSDDateTime" : {"_value" : "2016-09-23T13:09:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Bude Summerleaze", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/bude-summerleaze", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33500", "easting" : 220380.0, "lat" : 50.8311807246575, "long" : -4.55202825641337, "name" : {"_value" : "Sampling point at Bude Summerleaze", "_lang" : "en"}
        , "northing" : 106620.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/rock-sediment", "http://environment.data.gov.uk/def/bathing-water/sand-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33500:1", "name" : {"_value" : "Zone of influence at Bude Summerleaze", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33600", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33600:1", "label" : [{"_value" : "Map bounds for Bude Crooklets", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33600", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33600/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/2", "name" : {"_value" : "Good", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33600/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33600", "bathingWaterDescription" : {"_value" : "Bude Crooklets Beach is on the north coast of Cornwall. It is a sandy beach resort, approximately 310 metres wide, with a small stream flowing onto it.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "esoOutfallsStatement" : {"_value" : "There is an storm overflow from the Crooklets Car Park, that discharges the Flex Brook 150m upstream of the bathing water. The operation of the overflow can lead to a temporary drop in the Flex Brook and Bude Crooklets bathing water.  \nThis bathing water is included in the Surfers Against Sewage \u201cSafer Seas Service\u201d. This service can alert you to Combined Storm Sewer Overflow discharges via a phone App and in addition, it includes the Environment Agency Pollution Risk Forecast warnings where they are available. Further details of the service can be found at - http://www.sas.org.uk/safer-seas-service/", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past sewage at Bude was discharged without treatment through a short outfall off Compass Point. The South West Water sewage treatment scheme for Bude, which provides primary treatment and a one kilometre long sea outfall, was completed in 1993. \nThe Bude sewage treatment works (STW) was upgraded with secondary treatment by the end of 2000. Improvements to the combined storm overflow (CSO) at Stratton pumping station were also completed at that time.\nStorm overflow event duration monitoring (EDM) was installed at Crooklets Car Park by December 2011 and a sewage leak to Flex Brook was fixed.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33600/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out additional monitoring in the Flex Brook alongside the Environment Agency routine bathing water monitoring. The Flex Brook was found to carry some bacterial pollution from both human and animal sources during wet weather.  Investigations are ongoing to identify sources.\nInvestigations have also shown that Bude Crooklets can be affected by bacterial contamination from the River Strat during periods of heavy rainfall and high flow.  Sources are likely to be agricultural and originate in the upper Strat and Neet catchments.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33600/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Bude Crooklets", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33600-2017", "localAuthorityStatement" : {"_value" : "The urban area of Bude behind the beach is served by a combined (surface and sewer) system. The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system for misconnections.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Bude Crooklets", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton increase in number at certain times of the year and this process is known as a phytoplankton bloom. These blooms can discolour the water or form as a foam on the water. The Environment Agency research shows this bathing water has a history of phytoplankton blooms although such events appear to be rare.", "_lang" : "en"}
        , "pollutionRiskForecastStatement" : {"_value" : "This bathing water is subject to short term pollution. Short term pollution is caused when heavy rainfall washes faecal material into the sea from livestock, sewage and urban drainage via rivers and streams.  At this site the risk of encountering reduced water quality increases after rainfall and typically returns to normal after 1-3 days. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns and will issue a pollution risk warning if heavy rainfall occurs to enable bathers to avoid periods of increased risk. \nThe Environment Agency works to reduce the sources of this pollution through pollution prevention measures, work with agriculture and water companies.\n7 warnings advising against swimming due to an increase risk of short term pollution were issued in 2016 for Bude Crooklets bathing water. These warnings were issued because of the effects of heavy rain on the water quality.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "true", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPRFSummary" : {"_value" : "This bathing water is subject to short term pollution. The Environment Agency makes daily pollution risk forecasts based on rainfall patterns. A pollution risk warning is issued if heavy rainfall occurs to enable bathers to avoid periods when bathing water quality may be reduced. This may last between 1-3 days. Last year warnings were issued on 7 days.", "_lang" : "en"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Flex Brook and the Neet and Strat rivers, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, urban areas, and occasional discharges from a storm overflow.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0140", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33600:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Flex Brook flows onto this beach. The Environment Agency have monitored the brook since 1988 and found that water quality is temporarily worse after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Bude STW discharges into the sea off Compass Point approximately one and a half kilometres southwest of Crooklets bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Bude Crooklets for the four year (2013-2016) assessment period where data is available, sewage debris was not assessed as being sufficient to be objectionable, but was observed as being present on 1% of visits. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 33% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33600_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are farms in the catchment, most of which are beef. During and after periods of heavy rainfall, runoff to the rivers Neet and Strat from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Bude Crooklets is approximately 8,870 hectares. The Flex Brook and tributaries start approximately two and a half kilometres (km) inland and enter the sea at Crooklets Beach. The catchment also includes the rivers Neet and Strat which enter the sea at Summerleaze Beach. The River Neet is approximately 17km long and is a tributary of the River Strat which is approximately 20km. The two rivers meet below the village of Marhamchurch to the South of Bude. They enter the Bude Canal before rejoining the original channel over a wear upstream of the beach. The steep catchment means rain runs off rapidly into the rivers. \nThe catchment is dominated by intensive agricultural production. The upper reaches of the Strat are mainly farmed by beef and sheep enterprises, and elsewhere all types of farming activities are carried out including dairy and arable. River bank damage by livestock is evident leading to concerns over water quality.", "_lang" : "en"}
      }
      , "latestRiskPrediction" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/point/33600/date/20171006-144034", "comment" : {"_value" : "No water quality warning issued", "_lang" : "en"}
        , "dataset" : ["http://environment.data.gov.uk/data/bathing-water-quality/eaew/stp-risk-prediction", "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction"], "expiresAt" : {"_value" : "2017-10-07T08:29:00", "_datatype" : "dateTime"}
        , "predictedAt" : {"_value" : "2017-10-06T08:30:00", "_datatype" : "dateTime"}
        , "predictedOn" : {"_value" : "2017-10-06", "_datatype" : "date"}
        , "publishedAt" : {"_value" : "2017-10-06T14:40:34", "_datatype" : "dateTime"}
        , "riskLevel" : {"_about" : "http://environment.data.gov.uk/def/bwq-stp/normal", "name" : {"_value" : "normal", "_lang" : "en"}
        }
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/forecasts-publishTesting-2017-10-06_14-40-34_772-0584.csv#row=0119", "stp_bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33600", "stp_samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33600", "easting" : 220260.0, "lat" : 50.835814903174, "long" : -4.55398560359646, "name" : {"_value" : "Sampling point at Bude Crooklets", "_lang" : "en"}
          , "northing" : 107140.0}
        , "type" : ["http://environment.data.gov.uk/def/bwq-stp/RiskPrediction"]}
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33600/date/20160923/time/132500/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T13:25:00", "inXSDDateTime" : {"_value" : "2016-09-23T13:25:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Bude Crooklets", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/bude-crooklets", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33600", "easting" : 220260.0, "lat" : 50.835814903174, "long" : -4.55398560359646, "name" : {"_value" : "Sampling point at Bude Crooklets", "_lang" : "en"}
        , "northing" : 107140.0}
      , "sedimentTypesPresent" : "http://environment.data.gov.uk/def/bathing-water/sand-sediment", "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33600:1", "name" : {"_value" : "Zone of influence at Bude Crooklets", "_lang" : "en"}
      }
    }
    , {"_about" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33700", "appointedSewerageUndertaker" : {"_about" : "http://business.data.gov.uk/id/company/02366665", "companyProfile" : {"_about" : "http://business.data.gov.uk/companies/profile/02366665", "label" : [{"_value" : "Companies House profile for South West Water Limited", "_lang" : "en"}
          ]}
        , "name" : {"_value" : "South West Water Limited", "_lang" : "en"}
      }
      , "country" : {"_about" : "http://data.ordnancesurvey.co.uk/id/country/england", "name" : {"_value" : "England", "_lang" : "en"}
      }
      , "district" : [{"_about" : "http://data.ordnancesurvey.co.uk/id/7000000000043750", "name" : {"_value" : "Cornwall", "_lang" : "en"}
      }
      , "http://statistics.data.gov.uk/id/statistical-geography/E06000052"], "envelope" : {"_about" : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew/ukk3104-33700:1", "label" : [{"_value" : "Map bounds for Bude Sandy Mouth", "_lang" : "en"}
        ]}
      , "eubwidNotation" : "ukk3104-33700", "latestComplianceAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/compliance-rBWD/point/33700/year/2016", "complianceClassification" : {"_about" : "http://environment.data.gov.uk/def/bwq-cc-2015/1", "name" : {"_value" : "Excellent", "_lang" : "en"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "latestProfile" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33700/2017:1", "applicableYear" : "http://reference.data.gov.uk/id/year/2017", "bathingWater" : "http://environment.data.gov.uk/id/bathing-water/ukk3104-33700", "bathingWaterDescription" : {"_value" : "Bude Sandy Mouth is on the north coast of Cornwall. It is a sandy beach, approximately one kilometre wide, backed by pebbles and cliffs. There are also rock pools and waterfalls from small streams that flow to the beach.", "_lang" : "en"}
        , "controllerName" : "Cornwall", "countyName" : {"_value" : "Cornwall", "_lang" : "en"}
        , "historyStatement" : {"_value" : "In the past sewage at Bude was discharged without treatment through a short outfall off Compass Point. The South West Water sewage treatment scheme for Bude, which provides primary treatment and a one kilometre long sea outfall, was completed in 1993. The Bude sewage treatment works (STW) was upgraded with secondary treatment by the end of 2000.", "_lang" : "en"}
        , "interval" : "http://environment.data.gov.uk/data/bathing-water-profile/ukk3104-33700/2017:1/intervals/interval", "investigationsStatement" : {"_value" : "The Environment Agency have carried out additional monitoring in the streams alongside the Environment Agency routine bathing water monitoring. This work aims to pinpoint pollution problems and improve water quality at the bathing water.", "_lang" : "en"}
        , "isVersionOf" : "http://environment.data.gov.uk/data/bathing-water-profile-endurant/ukk3104-33700/2017", "label" : [{"_value" : "2017 Bathing Water Profile for Bude Sandy Mouth", "_lang" : "en"}
        ], "localAuthority" : "http://location.data.gov.uk/id/au/localAuthority/ons:gss/E06000052-33700-2017", "localAuthorityStatement" : {"_value" : "The Environment Agency have regularly inspected and sampled surface water outfalls.", "_lang" : "en"}
        , "macroAlgaeStatement" : {"_value" : "This bathing water does not have a history of large amounts of seaweed (macro algae).", "_lang" : "en"}
        , "misconnectionsStatement" : {"_value" : "Wrongly connected domestic waste water pipes can also affect the bathing water quality. We have checked the local sewerage system at the beach café for misconnections.\nModern sewerage systems have two separate systems, one takes foul sewage to sewage treatment, the other takes rainwater runoff through surface water drains to rivers, lakes and the sea. Misconnections occur when waste water pipes are plumbed into surface water drains instead of the foul water sewerage system. This can give rise to pollution when the waste water is discharged directly to the environment through the surface water drain. For example, a washing machine or toilet may be incorrectly plumbed so that it discharges to the surface drain rather than the foul sewage drain.", "_lang" : "en"}
        , "name" : {"_value" : "2017 Bathing Water Profile for Bude Sandy Mouth", "_lang" : "en"}
        , "phytoplanktonStatement" : {"_value" : "Phytoplankton (microscopic algae) naturally increase in number at certain times of the year. This process is known as a phytoplankton bloom. This bathing water does not have a history of phytoplankton blooms.", "_lang" : "en"}
        , "pollutionRiskForecasting" : {"_value" : "false", "_datatype" : "boolean"}
        , "samplingFrequency" : 20, "seasonFinishDate" : {"_value" : "2017-09-30", "_datatype" : "date"}
        , "seasonInterval" : "http://reference.data.gov.uk/id/gregorian-interval/2017-05-01T00:00:00/P152DT23H59M59S", "seasonStartDate" : {"_value" : "2017-05-01", "_datatype" : "date"}
        , "signPollutionSourcesStatement" : {"_value" : "Bathing water quality is influenced by the Sandy Mouth stream, and may reduce during or after periods of heavy rainfall due to run off from agricultural land, and urban areas.", "_lang" : "en"}
        , "source" : "http://environment.data.gov.uk/sources/bwq/eaew/input/ea_profile_proposal_with_signage-2018-02-01_13-07-43_788-0269.csv#row=0141", "standardLanguageCollection" : "http://environment.data.gov.uk/data/bathing-water-profile-standard-language/2017-33700:1", "streamsRiversStatement" : {"_value" : "Streams and rivers are typically affected by human sewage, animal slurry and runoff from roads. The Sandy Mouth Stream and a smaller unnamed stream flow across this beach. The Environment Agency have monitored the streams between 1994 and 2012, and found that water quality is temporarily worse during and after heavy rainfall.", "_lang" : "en"}
        , "stwOutfallsStatement" : {"_value" : "The outfall from Bude STW discharges into the sea off Compass Point approximately 3.8km south of Sandy Mouth bathing water. This discharge is designed to protect bathing water quality.", "_lang" : "en"}
        , "type" : ["http://environment.data.gov.uk/def/bathing-water-profile/BathingWaterProfile"], "versionString" : "1", "visiblePollutionStatement" : {"_value" : "Environment Agency samplers make observations of litter present on the beach at every visit, this includes assessments of sewage debris, litter and tar. At Bude Sandy Mouth for the four year (2013-2016) assessment period where data is available, sewage debris was not noted at this site. Litter was not assessed as being sufficient to be objectionable, but was observed as being present on 29% of visits. Tarry residue was not noted at this site.", "_lang" : "en"}
        , "webResImage" : "http://environment.data.gov.uk/media/image/bathing-water-profile/ukk3104-33700_1-webres.jpg", "workingWithFarmersStatement" : {"_value" : "There are two farms in the catchment which are used for livestock. During and after periods of heavy rainfall, runoff to the Sandy Mouth Stream from agricultural land is greatly increased, and the quality of the bathing water can be reduced.", "_lang" : "en"}
        , "zoiDescription" : {"_value" : "The catchment surrounding Bude Sandy Mouth is approximately 120 hectares. The Sandy Mouth Stream is 1.25km long and enters the sea at the bathing water. There is also a smaller stream approximately 0.75km long that enters the sea tat Sandy Mouth beach. The steep catchment means rain runs off rapidly into the stream. Land use is rural with just one or two farms.", "_lang" : "en"}
      }
      , "latestSampleAssessment" : {"_about" : "http://environment.data.gov.uk/data/bathing-water-quality/in-season/sample/point/33700/date/20160923/time/142000/recordDate/20160923", "escherichiaColiCount" : 10, "intestinalEnterococciCount" : 10, "sampleDateTime" : {"_about" : "http://reference.data.gov.uk/id/gregorian-instant/2016-09-23T14:20:00", "inXSDDateTime" : {"_value" : "2016-09-23T14:20:00", "_datatype" : "dateTime"}
        }
        , "sampleYear" : {"_about" : "http://reference.data.gov.uk/id/year/2016", "ordinalYear" : 2016}
      }
      , "name" : {"_value" : "Bude Sandy Mouth", "_lang" : "en"}
      , "regionalOrganization" : {"_about" : "http://reference.data.gov.uk/id/public-body/environment-agency/unit/south-west-south-west-office", "name" : {"_value" : "South West", "_lang" : "en"}
      }
      , "sameAs" : "http://environment.data.gov.uk/id/bathing-water/bude-sandy-mouth", "samplingPoint" : {"_about" : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew/33700", "easting" : 220160.0, "lat" : 50.8609376590203, "long" : -4.55677993814878, "name" : {"_value" : "Sampling point at Bude Sandy Mouth", "_lang" : "en"}
        , "northing" : 109940.0}
      , "sedimentTypesPresent" : ["http://environment.data.gov.uk/def/bathing-water/sand-sediment", "http://environment.data.gov.uk/def/bathing-water/shingle-sediment"], "type" : ["http://environment.data.gov.uk/def/bathing-water/BathingWater", "http://environment.data.gov.uk/def/bathing-water/CoastalBathingWater"], "uriSet" : {"_about" : "http://environment.data.gov.uk/id/bathing-water/", "label" : [{"_value" : "Bathing waters monitored by the Environment Agency for England and Wales.", "_lang" : "en"}
        ]}
      , "waterQualityImpactedByHeavyRain" : true, "yearDesignated" : "http://reference.data.gov.uk/id/year/1988", "zoneOfInfluence" : {"_about" : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew/ukk3104-33700:1", "name" : {"_value" : "Zone of influence at Bude Sandy Mouth", "_lang" : "en"}
      }
    }
    ], "itemsPerPage" : 600, "page" : 0, "startIndex" : 1, "type" : ["http://purl.org/linked-data/api/vocab#Page"]}
}

    http_version: 
  recorded_at: Tue, 06 Feb 2018 17:52:51 GMT
recorded_with: VCR 4.0.0
